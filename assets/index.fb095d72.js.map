{"version":3,"file":"index.fb095d72.js","sources":["../../vite/modulepreload-polyfill","../../src/theme/makeStyles.ts","../../src/components/pwa/ReloadToastContent.tsx","../../vite/preload-helper","../../src/components/pwa/useImportPwaRegisterModule.ts","../../src/components/pwa/ServiceWorkerContainer.tsx","../../src/store/goproBleServiceState.ts","../../src/utilities/functionQueue.ts","../../src/store/goproBluetoothServiceActions/goproStatusMetadata.ts","../../src/store/goproBluetoothServiceActions/commands/commands.ts","../../src/store/packetParsing/goproPacketReaderCommand.ts","../../src/store/goproSettingsSlice.ts","../../src/store/packetParsing/goproPacketReaderQuery.ts","../../src/store/packetParsing/goproPacketReaderSetting.ts","../../src/store/packetParsing/goproPacketReader.ts","../../src/store/goproBluetoothServiceActions/commands/queryCommands.ts","../../src/store/goproBluetoothServiceActions/goproBluetoothServiceActions.ts","../../src/store/goproBluetoothSlice.ts","../../src/store/store.ts","../../src/store/hooks.ts","../../src/components/contentPages/ConnectToGoProPage.tsx","../../src/components/contentPages/ErrorPage.tsx","../../src/components/contentPages/SearchForGoProPage.tsx","../../src/components/Header.tsx","../../src/store/goproBluetoothServiceActions/goproSettingsMetadata.ts","../../src/components/BatteryPercentageIcon.tsx","../../src/store/goproBluetoothServiceActions/commands/settingsCommands.ts","../../src/components/SettingsPreview.tsx","../../src/components/MainModeView.tsx","../../src/App.tsx","../../src/AppProvider.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { createMakeAndWithStyles } from 'tss-react';\n\nimport { useTheme } from '@mui/material';\n\nexport const { makeStyles, withStyles } = createMakeAndWithStyles({ useTheme });\n","import { makeStyles } from 'theme/makeStyles';\n\nimport { Box, Button, Typography } from '@mui/material';\n\nconst useStyles = makeStyles()({\n    flexContent: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n});\n\ninterface IProps {\n    updateServiceWorker: (force: boolean) => void;\n}\n\nexport const ReloadToastContent: React.FC<IProps> = (props) => {\n    const { classes } = useStyles();\n    const handleReloadButton = () => {\n        props.updateServiceWorker(true);\n    };\n    return (\n        <Box className={classes.flexContent}>\n            <Typography variant=\"body1\">App was updated, reload to see the changes</Typography>\n            <Button style={{ display: 'inline' }} onClick={handleReloadButton}>\n                Reload\n            </Button>\n        </Box>\n    );\n};\n","const scriptRel = 'modulepreload';const seen = {};const base = '/Gopro-Bluetooth-Remote/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","/* eslint-disable import/no-unresolved */\nimport { useEffect, useState } from 'react';\n\nexport type ModuleVirtualPwaRegisterReact = typeof import('virtual:pwa-register/react');\n\nexport function useImportPwaRegisterModule() {\n    const [module, setModule] = useState<ModuleVirtualPwaRegisterReact>();\n    useEffect(() => {\n        // Jest will complain a lot about missing virtual:pwa-register module\n        // It's complicated marrying those two together.\n        // Those virtual functions are injected via vite, so they are not available for jest.\n        if (process.env.JEST_WORKER_ID !== undefined) return;\n        import('virtual:pwa-register/react').then(setModule);\n    }, [setModule]);\n    return module;\n}\n","import React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { ReloadToastContent } from './ReloadToastContent';\nimport { ModuleVirtualPwaRegisterReact, useImportPwaRegisterModule } from './useImportPwaRegisterModule';\n\n// It's unlikely that someone will use this app for long periods, but just in case, let's check for updates once in a while.\nconst updateCheckIntervalMS = 60 * 60 * 1000;\n\nexport const ServiceWorkerContainer: React.FC = () => {\n    const pwaRegisterModule = useImportPwaRegisterModule();\n\n    if (!pwaRegisterModule) return null;\n    return <ServiceWorkerContainerSafe pwaRegisterModule={pwaRegisterModule} />;\n};\n\ninterface IProps {\n    pwaRegisterModule: ModuleVirtualPwaRegisterReact;\n}\n\nexport const ServiceWorkerContainerSafe: React.FC<IProps> = ({ pwaRegisterModule }) => {\n    const {\n        offlineReady: [offlineReady],\n        needRefresh: [needRefresh],\n        updateServiceWorker,\n    } = pwaRegisterModule.useRegisterSW({\n        immediate: true,\n        onRegistered(registration) {\n            console.log('SW registered', registration);\n            if (!registration) return;\n            setInterval(() => {\n                registration.update();\n            }, updateCheckIntervalMS);\n        },\n        onRegisterError(error) {\n            console.log('SW registration error', error);\n        },\n    });\n\n    useEffect(() => {\n        if (offlineReady) toast('App was installed and now will work offline');\n    }, [offlineReady]);\n    useEffect(() => {\n        if (needRefresh) toast(<ReloadToastContent updateServiceWorker={updateServiceWorker} />, { autoClose: false });\n    }, [needRefresh, updateServiceWorker]);\n\n    return <div />;\n};\n","interface BluetoothDeviceState {\n    device?: BluetoothDevice;\n    gattServer?: BluetoothRemoteGATTServer;\n    characteristics?: {\n        wifiApSsidCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApPasswordCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApPowerCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApStateCharacteristic: BluetoothRemoteGATTCharacteristic;\n        commandCharacteristic: BluetoothRemoteGATTCharacteristic;\n        commandResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n        settingsCharacteristic: BluetoothRemoteGATTCharacteristic;\n        settingsResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n        queryCharacteristic: BluetoothRemoteGATTCharacteristic;\n        queryResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n    };\n}\n\nexport const bluetoothDeviceState: BluetoothDeviceState = {};\n","export const lastQueuedPromiseArr: { context: unknown; promise: Promise<void> }[] = [];\n\n/**\n * Enqueue a function to be called after the current function has finished.\n */\nexport async function functionQueue(func: () => Promise<void>, context: unknown) {\n    let lastQueuedPromise = lastQueuedPromiseArr.find((p) => p.context === context);\n    if (!lastQueuedPromise) {\n        lastQueuedPromise = { context, promise: Promise.resolve() };\n        lastQueuedPromiseArr.push(lastQueuedPromise);\n    }\n    lastQueuedPromise.promise = lastQueuedPromise.promise.then(() => func());\n    await lastQueuedPromise.promise;\n}\n","export interface StatusValueMetadata {\n    id: number;\n    label: string;\n}\n\nexport interface StatusMetadata {\n    id: number;\n    label: string;\n    description: string;\n    type: string;\n    values: StatusValueMetadata[];\n}\n\nconst booleanValue: StatusValueMetadata[] = [\n    { id: 0, label: 'False' },\n    { id: 1, label: 'True' },\n];\n\nexport const statusInternalCameraPresent1: StatusMetadata = {\n    id: 1,\n    label: 'Internal camera present',\n    description: 'Is the internal camera present?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusInternalBatteryLevel2: StatusMetadata = {\n    id: 2,\n    label: 'Internal battery level',\n    description: 'Rough approximation of internal battery level in bars',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Zero',\n        },\n        {\n            id: 1,\n            label: 'One',\n        },\n        {\n            id: 2,\n            label: 'Two',\n        },\n        {\n            id: 3,\n            label: 'Three',\n        },\n    ],\n};\n\nexport const statusExternalBatteryPresent3: StatusMetadata = {\n    id: 3,\n    label: 'External battery present',\n    description: 'Is an external battery connected?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusExternalBatteryLevel4: StatusMetadata = {\n    id: 4,\n    label: 'External battery level',\n    description: 'External battery power level in percent',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\n\nexport const statusSystemHot6: StatusMetadata = {\n    id: 6,\n    label: 'System hot',\n    description: 'Is the system currently overheating?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusSystemBusy8: StatusMetadata = {\n    id: 8,\n    label: 'System busy',\n    description: 'Is the camera busy?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusQuickCaptureActive9: StatusMetadata = {\n    id: 9,\n    label: 'Quick capture active',\n    description: 'Is Quick Capture feature enabled?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusEncodingActive10: StatusMetadata = {\n    id: 10,\n    label: 'Encoding active',\n    description: 'Is the system encoding right now?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusLcdLockActive11: StatusMetadata = {\n    id: 11,\n    label: 'Lcd lock active',\n    description: 'Is LCD lock active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusVideoProgressCounter13: StatusMetadata = {\n    id: 13,\n    label: 'Video progress counter',\n    description: 'When encoding video, this is the duration (seconds) of the video so far; 0 otherwise',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: '0s',\n        },\n        {\n            id: 59,\n            label: '59s',\n        },\n    ],\n};\nexport const statusEnable17: StatusMetadata = { id: 17, label: 'Enable', description: 'Are Wireless Connections enabled?', type: 'boolean', values: booleanValue };\nexport const statusState19: StatusMetadata = {\n    id: 19,\n    label: 'State',\n    description: 'The pairing state of the camera',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Success',\n        },\n        {\n            id: 1,\n            label: 'In Progress',\n        },\n        {\n            id: 2,\n            label: 'Failed',\n        },\n        {\n            id: 3,\n            label: 'Stopped',\n        },\n    ],\n};\nexport const statusType20: StatusMetadata = {\n    id: 20,\n    label: 'Type',\n    description: 'The last type of pairing that the camera was engaged in',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Not Pairing',\n        },\n        {\n            id: 1,\n            label: 'Pairing App',\n        },\n        {\n            id: 2,\n            label: 'Pairing Remote Control',\n        },\n        {\n            id: 3,\n            label: 'Pairing Bluetooth Device',\n        },\n    ],\n};\nexport const statusPairTime21: StatusMetadata = {\n    id: 21,\n    label: 'Pair time',\n    description: 'Time (milliseconds) since boot of last successful pairing complete action',\n    type: 'integer',\n    values: [],\n};\nexport const statusState22: StatusMetadata = {\n    id: 22,\n    label: 'State',\n    description: 'State of current scan for WiFi Access Points. Appears to only change for CAH-related scans',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Never started' },\n        { id: 1, label: 'Started' },\n        { id: 2, label: 'Aborted' },\n        { id: 3, label: 'Canceled' },\n        { id: 4, label: 'Completed' },\n    ],\n};\nexport const statusScanTimeMsec23: StatusMetadata = {\n    id: 23,\n    label: 'Scan time msec',\n    description: 'The time, in milliseconds since boot that the WiFi Access Point scan completed',\n    type: 'integer',\n    values: [],\n};\nexport const statusProvisionStatus24: StatusMetadata = {\n    id: 24,\n    label: 'Provision status',\n    description: 'WiFi AP provisioning state',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Never started' },\n        { id: 1, label: 'Started' },\n        { id: 2, label: 'Aborted' },\n        { id: 3, label: 'Canceled' },\n        { id: 4, label: 'Completed' },\n    ],\n};\nexport const statusRemoteControlVersion26: StatusMetadata = {\n    id: 26,\n    label: 'Remote control version',\n    description: 'Wireless remote control version',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemoteControlConnected27: StatusMetadata = {\n    id: 27,\n    label: 'Remote control connected',\n    description: 'Is a wireless remote control connected?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusPairing28: StatusMetadata = {\n    id: 28,\n    label: 'Pairing',\n    description: 'Wireless Pairing State',\n    type: 'integer',\n    values: [],\n};\nexport const statusWlanSsid29: StatusMetadata = {\n    id: 29,\n    label: 'Wlan ssid',\n    description: 'Provisioned WIFI AP SSID. On BLE connection, value is big-endian byte-encoded int',\n    type: 'string',\n    values: [],\n};\nexport const statusApSsid30: StatusMetadata = {\n    id: 30,\n    label: 'Ap ssid',\n    description: `Camera's WIFI SSID. On BLE connection, value is big-endian byte-encoded int`,\n    type: 'string',\n    values: [],\n};\nexport const statusAppCount31: StatusMetadata = {\n    id: 31,\n    label: 'App count',\n    description: 'The number of wireless devices connected to the camera',\n    type: 'integer',\n    values: [],\n};\nexport const statusEnable32: StatusMetadata = { id: 32, label: 'Enable', description: 'Is Preview Stream enabled?', type: 'boolean', values: booleanValue };\nexport const statusSdStatus33: StatusMetadata = {\n    id: 33,\n    label: 'Sd status',\n    description: 'Primary Storage Status',\n    type: 'integer',\n    values: [\n        { id: -1, label: 'Unknown' },\n        { id: 0, label: 'OK' },\n        { id: 1, label: 'SD Card Full' },\n        { id: 2, label: 'SD Card Removed' },\n        { id: 3, label: 'SD Card Format Error' },\n        { id: 4, label: 'SD Card Busy' },\n        { id: 8, label: 'SD Card Swapped' },\n    ],\n};\nexport const statusRemainingPhotos34: StatusMetadata = {\n    id: 34,\n    label: 'Remaining photos',\n    description: 'How many photos can be taken before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingVideoTime35: StatusMetadata = {\n    id: 35,\n    label: 'Remaining video time',\n    description: 'How many minutes of video can be captured with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumGroupPhotos36: StatusMetadata = {\n    id: 36,\n    label: 'Num group photos',\n    description: 'How many group photos can be taken with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumGroupVideos37: StatusMetadata = {\n    id: 37,\n    label: 'Num group videos',\n    description: 'Total number of group videos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalPhotos38: StatusMetadata = {\n    id: 38,\n    label: 'Num total photos',\n    description: 'Total number of photos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalVideos39: StatusMetadata = {\n    id: 39,\n    label: 'Num total videos',\n    description: 'Total number of videos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusDateTime40: StatusMetadata = {\n    id: 40,\n    label: 'Date time',\n    description: 'Current date/time (format: %YY%MM%DD%HH%MM%SS, all values in hex)',\n    type: 'string',\n    values: [],\n};\nexport const statusOtaStatus41: StatusMetadata = {\n    id: 41,\n    label: 'Ota status',\n    description: 'The current status of Over The Air (OTA) update',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Idle' },\n        { id: 1, label: 'Downloading' },\n        { id: 2, label: 'Verifying' },\n        { id: 3, label: 'Download Failed' },\n        { id: 4, label: 'Verify Failed' },\n        { id: 5, label: 'Ready' },\n        { id: 6, label: 'GoPro App: Downloading' },\n        { id: 7, label: 'GoPro App: Verifying' },\n        { id: 8, label: 'GoPro App: Download Failed' },\n        { id: 9, label: 'GoPro App: Verify Failed' },\n        { id: 10, label: 'GoPro App: Ready' },\n    ],\n};\nexport const statusDownloadCancelRequestPending42: StatusMetadata = {\n    id: 42,\n    label: 'Download cancel request pending',\n    description: 'Is there a pending request to cancel a firmware update download?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusLegacyCurrentPresetGroup43: StatusMetadata = {\n    id: 43,\n    label: 'Current open preset group',\n    description: 'Looks like legacy status, that represented UI group, doesnt match current UI, probably manually mapped to new UI...',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Legacy Video Group' },\n        { id: 1, label: 'Legacy Photo Group' },\n        { id: 2, label: 'Legacy Multishot Group' },\n    ],\n};\nexport const statusLegacyCurrentPresetGroupChild44: StatusMetadata = {\n    id: 44,\n    label: 'Current open preset group child',\n    description: 'Looks like legacy status, that represented UI group child mode, doesnt match current UI, probably manually mapped to new UI...',\n    type: 'integer',\n    values: [\n        { id: 0, label: '1st child by group (group 0 - video, group 1 - ???, group 2 - burst photo)' },\n        { id: 1, label: '2nd child by group (group 0 - timelapse video, group 1 - photo, group 2 - timelapse photo)' },\n        { id: 2, label: '3rd child by group (group 0 - ???, group 1 - night photo, group 2 - nightlapse photo)' },\n        { id: 3, label: '4th child by group (group 0 - looping video)' },\n        { id: 4, label: '5th child by group (group 0 - timewarp)' },\n    ],\n};\n// status values when changing UI on device\n// photo            44 1 43 1 72 17\n// burst            44 0 43 2 72 19\n// night            44 2 43 1 72 18\n// video            44 0 43 0 71 12\n// looping          44 3 43 0 71 15\n// timewarp         44 4 43 0 73 24\n// timelapse video  44 1 43 0 73 13\n// timelapse photo  44 1 43 2 73 20\n// nightlapse photo 44 2 43 2 73 21\n\n/*\nwhen USB connected:\n43: 7\n44: 255\n */\n\nexport const statusCameraLocateActive45: StatusMetadata = {\n    id: 45,\n    label: 'Camera locate active',\n    description: 'Is locate camera feature active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMultiShotCountDown49: StatusMetadata = {\n    id: 49,\n    label: 'Multi shot count down',\n    description: 'The current timelapse interval countdown value (e.g. 5...4...3...2...1...)',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingSpace54: StatusMetadata = {\n    id: 54,\n    label: 'Remaining space',\n    description: 'Remaining space on the sdcard in Kilobytes',\n    type: 'integer',\n    values: [],\n};\nexport const statusSupported55: StatusMetadata = {\n    id: 55,\n    label: 'Supported',\n    description: 'Is preview stream supported in current recording/flatmode/secondary-stream?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusWifiBars56: StatusMetadata = {\n    id: 56,\n    label: 'Wifi bars',\n    description: 'WiFi signal strength in bars',\n    type: 'integer',\n    values: [],\n};\nexport const statusCurrentTimeMsec57: StatusMetadata = {\n    id: 57,\n    label: 'Current time msec',\n    description: 'System time in milliseconds since system was booted',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumHilights58: StatusMetadata = {\n    id: 58,\n    label: 'Num hilights',\n    description: 'The number of hilights in encoding video (set to 0 when encoding stops)',\n    type: 'integer',\n    values: [],\n};\nexport const statusLastHilightTimeMsec59: StatusMetadata = {\n    id: 59,\n    label: 'Last hilight time msec',\n    description: 'Time since boot (msec) of most recent hilight in encoding video (set to 0 when encoding stops)',\n    type: 'integer',\n    values: [],\n};\nexport const statusNextPollMsec60: StatusMetadata = {\n    id: 60,\n    label: 'Next poll msec',\n    description: 'The min time between camera status updates (msec). Do not poll for status more often than this',\n    type: 'integer',\n    values: [],\n};\nexport const statusInContextualMenu63: StatusMetadata = {\n    id: 63,\n    label: 'In contextual menu',\n    description: 'Is the camera currently in a contextual menu (e.g. Preferences)?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusRemainingTimelapseTime64: StatusMetadata = {\n    id: 64,\n    label: 'Remaining timelapse time',\n    description: 'How many min of Timelapse video can be captured with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusExposureSelectType65: StatusMetadata = {\n    id: 65,\n    label: 'Exposure select type',\n    description: 'Liveview Exposure Select Mode',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Disabled' },\n        { id: 1, label: 'Auto' },\n        { id: 2, label: 'ISO Lock' },\n        { id: 3, label: 'Hemisphere' },\n    ],\n};\nexport const statusExposureSelectX66: StatusMetadata = {\n    id: 66,\n    label: 'Exposure select x',\n    description: 'Liveview Exposure Select: x-coordinate (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusExposureSelectY67: StatusMetadata = {\n    id: 67,\n    label: 'Exposure select y',\n    description: 'Liveview Exposure Select: y-coordinate (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusGpsStatus68: StatusMetadata = {\n    id: 68,\n    label: 'Gps status',\n    description: 'Does the camera currently have a GPS lock?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusApState69: StatusMetadata = { id: 69, label: 'Ap state', description: 'Is the WiFi radio enabled?', type: 'boolean', values: booleanValue };\nexport const statusInternalBatteryPercentage70: StatusMetadata = {\n    id: 70,\n    label: 'Internal battery percentage',\n    description: 'Internal battery level (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusLegacyLastPhotoMode72: StatusMetadata = {\n    id: 72,\n    label: 'Last photo mode',\n    description: 'Last photo mode in UI',\n    type: 'integer',\n    values: [\n        { id: 17, label: 'Photo' },\n        { id: 19, label: 'Burst' },\n        { id: 18, label: 'Night' },\n    ],\n};\nexport const statusLegacyLastVideoMode71: StatusMetadata = {\n    id: 71,\n    label: 'Last video mode',\n    description: 'Last video mode in UI',\n    type: 'integer',\n    values: [\n        { id: 12, label: 'Video' },\n        { id: 15, label: 'Looping' },\n    ],\n};\nexport const statusLegacyLastTimelapseMode73: StatusMetadata = {\n    id: 73,\n    label: 'Last timelapse mode',\n    description: 'Last timelapse mode in UI',\n    type: 'integer',\n    values: [\n        { id: 24, label: 'Timewarp' },\n        { id: 13, label: 'Timelapse Video' },\n        { id: 20, label: 'Timelapse Photo' },\n        { id: 21, label: 'Nightlapse Photo' },\n    ],\n};\nexport const statusAccMicStatus74: StatusMetadata = {\n    id: 74,\n    label: 'Acc mic status',\n    description: 'Microphone Accesstory status',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Microphone mod not connected' },\n        { id: 1, label: 'Microphone mod connected' },\n        { id: 2, label: 'Microphone mod connected and microphone plugged into Microphone mod' },\n    ],\n};\nexport const statusDigitalZoom75: StatusMetadata = {\n    id: 75,\n    label: 'Digital zoom',\n    description: 'Digital Zoom level (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusWirelessBand76: StatusMetadata = {\n    id: 76,\n    label: 'Wireless band',\n    description: 'Wireless Band',\n    type: 'integer',\n    values: [\n        { id: 0, label: '2.4 GHz' },\n        { id: 1, label: '5 GHz' },\n        { id: 2, label: 'Max' },\n    ],\n};\nexport const statusDigitalZoomActive77: StatusMetadata = {\n    id: 77,\n    label: 'Digital zoom active',\n    description: 'Is Digital Zoom feature available?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMobileFriendlyVideo78: StatusMetadata = {\n    id: 78,\n    label: 'Mobile friendly video',\n    description: 'Are current video settings mobile friendly? (related to video compression and frame rate)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusFirstTimeUse79: StatusMetadata = {\n    id: 79,\n    label: 'First time use',\n    description: 'Is the camera currently in First Time Use (FTU) UI flow?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusBand5ghzAvail81: StatusMetadata = { id: 81, label: 'Band 5ghz avail', description: 'Is 5GHz wireless band available?', type: 'boolean', values: booleanValue };\nexport const statusSystemReady82: StatusMetadata = {\n    id: 82,\n    label: 'System ready',\n    description: 'Is the system ready to accept commands?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusBattOkayForOta83: StatusMetadata = {\n    id: 83,\n    label: 'Batt okay for ota',\n    description: 'Is the internal battery charged sufficiently to start Over The Air (OTA) update?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusVideoLowTempAlert85: StatusMetadata = {\n    id: 85,\n    label: 'Video low temp alert',\n    description: 'Is the camera getting too cold to continue recording?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusActualOrientation86: StatusMetadata = {\n    id: 86,\n    label: 'Actual orientation',\n    description: 'The rotational orientation of the camera',\n    type: 'integer',\n    values: [\n        { id: 0, label: '0 degrees (upright)' },\n        { id: 1, label: '180 degrees (upside down)' },\n        { id: 2, label: '90 degrees (laying on right side)' },\n        { id: 3, label: '270 degrees (laying on left side)' },\n    ],\n};\nexport const statusThermalMitigationMode87: StatusMetadata = {\n    id: 87,\n    label: 'Thermal mitigation mode',\n    description: 'Can camera use high resolution/fps (based on temperature)? (HERO7 Silver/White only)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusZoomWhileEncoding88: StatusMetadata = {\n    id: 88,\n    label: 'Zoom while encoding',\n    description: 'Is this camera capable of zooming while encoding (static value based on model, not settings)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusCurrentMode89: StatusMetadata = {\n    id: 89,\n    label: 'Current mode',\n    description: 'Current flatmode ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusLogsReady91: StatusMetadata = { id: 91, label: 'Logs ready', description: 'Are system logs ready to be downloaded?', type: 'boolean', values: booleanValue };\nexport const statusTimewarp1xActive92: StatusMetadata = { id: 92, label: 'Timewarp 1x active', description: 'Is Timewarp 1x active?', type: 'boolean', values: booleanValue };\nexport const statusActiveVideoPresets93: StatusMetadata = {\n    id: 93,\n    label: 'Active video presets',\n    description: 'Current Video Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePhotoPresets94: StatusMetadata = {\n    id: 94,\n    label: 'Active photo presets',\n    description: 'Current Photo Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActiveTimelapsePresets95: StatusMetadata = {\n    id: 95,\n    label: 'Active timelapse presets',\n    description: 'Current Timelapse Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePresetsGroup96: StatusMetadata = {\n    id: 96,\n    label: 'Active presets group',\n    description: 'Current Preset Group (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePreset97: StatusMetadata = {\n    id: 97,\n    label: 'Active preset',\n    description: 'Current Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusPresetModified98: StatusMetadata = {\n    id: 98,\n    label: 'Preset modified',\n    description: 'Preset Modified Status, which contains an event ID and a preset (group) ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingLiveBursts99: StatusMetadata = {\n    id: 99,\n    label: 'Remaining live bursts',\n    description: 'How many Live Bursts can be captured before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalLiveBursts100: StatusMetadata = {\n    id: 100,\n    label: 'Num total live bursts',\n    description: 'Total number of Live Bursts on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusCaptureDelayActive101: StatusMetadata = {\n    id: 101,\n    label: 'Capture delay active',\n    description: 'Is Capture Delay currently active (i.e. counting down)?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMediaModMicStatus102: StatusMetadata = {\n    id: 102,\n    label: 'Media mod mic status',\n    description: 'Media mod State',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Media mod microphone removed' },\n        { id: 2, label: 'Media mod microphone only' },\n        { id: 3, label: 'Media mod microphone with external microphone' },\n    ],\n};\nexport const statusTimewarpSpeedRampActive103: StatusMetadata = {\n    id: 103,\n    label: 'Timewarp speed ramp active',\n    description: 'Time Warp Speed',\n    type: 'integer',\n    values: [\n        { id: 0, label: '15x' },\n        { id: 1, label: '30x' },\n        { id: 2, label: '60x' },\n        { id: 3, label: '150x' },\n        { id: 4, label: '300x' },\n        { id: 5, label: '900x' },\n        { id: 6, label: '1800x' },\n        { id: 7, label: '2x' },\n        { id: 8, label: '5x' },\n        { id: 9, label: '10x' },\n        { id: 10, label: 'Auto' },\n        { id: 11, label: '1x (realtime)' },\n        { id: 12, label: '1/2x (slow-motion)' },\n    ],\n};\nexport const statusLinuxCoreActive104: StatusMetadata = {\n    id: 104,\n    label: 'Linux core active',\n    description: `Is the system's Linux core active?`,\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusCameraLensType105: StatusMetadata = {\n    id: 105,\n    label: 'Camera lens type',\n    description: 'Camera lens type (reflects changes to setting 162)',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Default' },\n        { id: 1, label: 'Max Lens' },\n    ],\n};\nexport const statusVideoHindsightCaptureActive106: StatusMetadata = {\n    id: 106,\n    label: 'Video hindsight capture active',\n    description: 'Is Video Hindsight Capture Active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusScheduledPreset107: StatusMetadata = {\n    id: 107,\n    label: 'Scheduled preset',\n    description: 'Scheduled Capture Preset ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusScheduledEnabled108: StatusMetadata = { id: 108, label: 'Scheduled enabled', description: 'Is Scheduled Capture set?', type: 'boolean', values: booleanValue };\nexport const statusCreatingPreset109: StatusMetadata = {\n    id: 109,\n    label: 'Creating preset',\n    description: 'Is the camera in the process of creating a custom preset?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMediaModStatus110: StatusMetadata = {\n    id: 110,\n    label: 'Media mod status',\n    description: 'Media Mode Status (bitmasked)',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Display (selfie) mod: 0, HDMI: 0, Media Mod Connected: False' },\n        { id: 1, label: 'Display (selfie) mod: 0, HDMI: 0, Media Mod Connected: True' },\n        { id: 2, label: 'Display (selfie) mod: 0, HDMI: 1, Media Mod Connected: False' },\n        { id: 3, label: 'Display (selfie) mod: 0, HDMI: 1, Media Mod Connected: True' },\n        { id: 4, label: 'Display (selfie) mod: 1, HDMI: 0, Media Mod Connected: False' },\n        { id: 5, label: 'Display (selfie) mod: 1, HDMI: 0, Media Mod Connected: True' },\n        { id: 6, label: 'Display (selfie) mod: 1, HDMI: 1, Media Mod Connected: False' },\n        { id: 7, label: 'Display (selfie) mod: 1, HDMI: 1, Media Mod Connected: True' },\n    ],\n};\nexport const statusTurboTransfer113: StatusMetadata = { id: 113, label: 'Turbo transfer', description: 'Is Turbo Transfer active?', type: 'boolean', values: booleanValue };\n\nexport const allKnownStatuses: StatusMetadata[] = [\n    statusInternalCameraPresent1,\n    statusInternalBatteryLevel2,\n    statusExternalBatteryPresent3,\n    statusExternalBatteryLevel4,\n    statusSystemHot6,\n    statusSystemBusy8,\n    statusQuickCaptureActive9,\n    statusEncodingActive10,\n    statusLcdLockActive11,\n    statusVideoProgressCounter13,\n    statusEnable17,\n    statusState19,\n    statusType20,\n    statusPairTime21,\n    statusState22,\n    statusScanTimeMsec23,\n    statusProvisionStatus24,\n    statusRemoteControlVersion26,\n    statusRemoteControlConnected27,\n    statusPairing28,\n    statusWlanSsid29,\n    statusApSsid30,\n    statusAppCount31,\n    statusEnable32,\n    statusSdStatus33,\n    statusRemainingPhotos34,\n    statusRemainingVideoTime35,\n    statusNumGroupPhotos36,\n    statusNumGroupVideos37,\n    statusNumTotalPhotos38,\n    statusNumTotalVideos39,\n    statusDateTime40,\n    statusOtaStatus41,\n    statusDownloadCancelRequestPending42,\n    statusCameraLocateActive45,\n    statusMultiShotCountDown49,\n    statusRemainingSpace54,\n    statusSupported55,\n    statusWifiBars56,\n    statusCurrentTimeMsec57,\n    statusNumHilights58,\n    statusLastHilightTimeMsec59,\n    statusNextPollMsec60,\n    statusInContextualMenu63,\n    statusRemainingTimelapseTime64,\n    statusExposureSelectType65,\n    statusExposureSelectX66,\n    statusExposureSelectY67,\n    statusGpsStatus68,\n    statusApState69,\n    statusInternalBatteryPercentage70,\n    statusAccMicStatus74,\n    statusDigitalZoom75,\n    statusWirelessBand76,\n    statusDigitalZoomActive77,\n    statusMobileFriendlyVideo78,\n    statusFirstTimeUse79,\n    statusBand5ghzAvail81,\n    statusSystemReady82,\n    statusBattOkayForOta83,\n    statusVideoLowTempAlert85,\n    statusActualOrientation86,\n    statusThermalMitigationMode87,\n    statusZoomWhileEncoding88,\n    statusCurrentMode89,\n    statusLogsReady91,\n    statusTimewarp1xActive92,\n    statusActiveVideoPresets93,\n    statusActivePhotoPresets94,\n    statusActiveTimelapsePresets95,\n    statusActivePresetsGroup96,\n    statusActivePreset97,\n    statusPresetModified98,\n    statusRemainingLiveBursts99,\n    statusNumTotalLiveBursts100,\n    statusCaptureDelayActive101,\n    statusMediaModMicStatus102,\n    statusTimewarpSpeedRampActive103,\n    statusLinuxCoreActive104,\n    statusCameraLensType105,\n    statusVideoHindsightCaptureActive106,\n    statusScheduledPreset107,\n    statusScheduledEnabled108,\n    statusCreatingPreset109,\n    statusMediaModStatus110,\n    statusTurboTransfer113,\n];\n","import { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { RootState, store } from 'store/store';\nimport { functionQueue } from 'utilities/functionQueue';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { writeGoProPacketData } from '../goproBluetoothServiceActions';\nimport { statusSystemReady82 } from '../goproStatusMetadata';\n\nfunction isDeviceReady() {\n    const { statuses } = store.getState().goproSettingsReducer;\n    const canSendCommand = statuses[statusSystemReady82.id];\n    return canSendCommand;\n}\n\n/**\n * GoPro will reject command if it's busy, encoding or system is not ready.\n */\nasync function waitUntilDeviceReady() {\n    if (isDeviceReady()) return;\n\n    await new Promise<void>((resolve) => {\n        const unsubscribe = store.subscribe(() => {\n            if (isDeviceReady()) {\n                unsubscribe();\n                resolve();\n            }\n        });\n    });\n}\n\ntype CommandData = number[];\nexport async function sendCommand(commandData: CommandData) {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { commandCharacteristic } = characteristics;\n    await waitUntilDeviceReady();\n    await functionQueue(async () => {\n        await writeGoProPacketData(commandCharacteristic, commandData);\n    }, commandCharacteristic);\n}\n\nconst sendCommandAction = createAsyncThunk<void, CommandData, { state: RootState }>('commands/sendCommandAction', async (commandData) => {\n    await sendCommand(commandData);\n});\n\n// Non-standard commands\nexport const forceShutdownCommand = createAsyncThunk<void, void, { state: RootState }>('commands/forceShutdownCommand', async (_, { dispatch }) => {\n    // Force shutdown GoPro, not documented in OpenGoPro\n    // Bluetooth will be offline after this command\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x04]));\n});\n\nexport const hiLightTagCommand = createAsyncThunk<void, void, { state: RootState }>('commands/hiLightTagCommand', async (_, { dispatch }) => {\n    // HiLight current moment on GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x18]));\n});\n\nexport const locateOnCommand = createAsyncThunk<void, void, { state: RootState }>('commands/locateOnCommand', async (_, { dispatch }) => {\n    // Locate mode on for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x16, 0x01, 0x01]));\n});\n\nexport const locateOffCommand = createAsyncThunk<void, void, { state: RootState }>('commands/locateOffCommand', async (_, { dispatch }) => {\n    // Locate mode off for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x16, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadGroupVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadGroupVideoCommand', async (_, { dispatch }) => {\n    // Load video group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadGroupPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadGroupPhotoCommand', async (_, { dispatch }) => {\n    // Load photo group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadGroupMultishotCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadGroupMultishotCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x02]));\n});\n\nexport const legacyPresetsLoadPresetVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetVideoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadPresetTimeLapseVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetTimeLapseVideoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadPresetLoopingVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetLoopingVideoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x03]));\n});\n\nexport const legacyPresetsLoadPresetTimewarpCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetTimewarpCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x04]));\n});\n\nexport const legacyPresetsLoadPresetPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetPhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x01, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadPresetNightPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetNightPhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x01, 0x01, 0x02]));\n});\n\nexport const legacyPresetsLoadPresetBurstPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetBurstPhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x02, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadPresetTimeLapsePhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetTimeLapsePhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x02, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadPresetNightLapsePhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetNightLapsePhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x02, 0x01, 0x02]));\n});\n\n/*\nmore old gopro commands from  https://gethypoxic.com/blogs/technical/gopro-hero5-interfaces\n\n// Not sure which characteristic, though, probably command, needs testing\nVIDEO_PROTUNE_RESET (0x03 0x10, 0x01, 0x01),\nMULTISHOT_VIDEO_PROTUNE_RESET(0x03, 0x11, 0x01, 0x01),\nPHOTO_PROTUNE_RESET(0x03, 0x12, 0x01, 0x01),\n*/\n\n// Standard commands\nexport const sleepCommand = createAsyncThunk<void, void, { state: RootState }>('commands/sleepCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x05]));\n});\n\nexport const getHardwareInfoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/getHardwareInfoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3c]));\n});\n\nexport const setShutterOffCommand = createAsyncThunk<void, void, { state: RootState }>('commands/setShutterOffCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x01, 0x01, 0x00]));\n});\n\nexport const setShutterOnCommand = createAsyncThunk<void, void, { state: RootState }>('commands/setShutterOnCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x01, 0x01, 0x01]));\n});\n\nexport const apControlWiFiApOffCommand = createAsyncThunk<void, void, { state: RootState }>('commands/apControlWiFiApOffCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x17, 0x01, 0x00]));\n});\n\nexport const apControlWiFiApOnCommand = createAsyncThunk<void, void, { state: RootState }>('commands/apControlWiFiApOnCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x17, 0x01, 0x01]));\n});\n// all next ones not work on hero 7\n\nexport const presetsLoadGroupVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadGroupVideoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xe8]));\n});\n\nexport const presetsLoadGroupPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadGroupPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xe9]));\n});\n\nexport const presetsLoadGroupTimelapseCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadGroupTimelapseCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xea]));\n});\n\nexport const presetsLoadStandardCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadStandardCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x00]));\n});\n\nexport const presetsLoadActivityCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadActivityCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x01]));\n});\n\nexport const presetsLoadCinematicCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadCinematicCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x02]));\n});\n\nexport const presetsLoadUltraSloMoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadUltraSloMoCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x04]));\n});\n\nexport const presetsLoadBasicCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadBasicCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x05]));\n});\n\nexport const presetsLoadPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x00]));\n});\n\nexport const presetsLoadLiveBurstCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadLiveBurstCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x01]));\n});\n\nexport const presetsLoadBurstPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadBurstPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x02]));\n});\n\nexport const presetsLoadNightPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadNightPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x03]));\n});\n\nexport const presetsLoadTimeWarpCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadTimeWarpCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x00]));\n});\n\nexport const presetsLoadTimeLapseCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadTimeLapseCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x01]));\n});\n\nexport const presetsLoadNightLapseCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadNightLapseCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x02]));\n});\n\nexport const presetsLoadStandardEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadStandardEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x00]));\n});\n\nexport const presetsLoadActivityEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadActivityEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x01]));\n});\n\nexport const presetsLoadCinematicEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadCinematicEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x02]));\n});\n\nexport const presetsLoadSloMoEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadSloMoEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x03]));\n});\n\nexport const presetsLoad4KTripodCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoad4KTripodCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x09, 0x00, 0x00]));\n});\n\nexport const presetsLoad53KTripodCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoad53KTripodCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x09, 0x00, 0x01]));\n});\n\nexport const analyticsSetThirdPartyClientCommand = createAsyncThunk<void, void, { state: RootState }>('commands/analyticsSetThirdPartyClientCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x50]));\n});\n\nexport const openGoProGetVersionCommand = createAsyncThunk<void, void, { state: RootState }>('commands/openGoProGetVersionCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x51]));\n});\n","import { getHardwareInfoCommand, openGoProGetVersionCommand } from 'store/goproBluetoothServiceActions/commands/commands';\nimport { GetHardwareInfoState, goproBluetoothSlice, OpenGoProVersionState } from 'store/goproBluetoothSlice';\nimport { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\nexport function commandResponseReceiverProvider(dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    return (packetData: PacketData) => {\n        // TODO parse actual command messages and update state\n        const commandResponse = parseCommandResponse(packetData);\n        dispatchCommandResponse(dispatch, commandResponse);\n    };\n}\n\nfunction parseCommandResponseCode(responseCode: number) {\n    switch (responseCode) {\n        case 0:\n            return CommandResponseCode.success;\n        case 1:\n            return CommandResponseCode.error;\n        case 2:\n            return CommandResponseCode.invalidParameter;\n        default:\n            return CommandResponseCode.unknown;\n    }\n}\n\nenum CommandResponseCode {\n    unknown,\n    success,\n    error,\n    invalidParameter,\n}\n\ninterface CommandResponse {\n    commandId: number;\n    errorCode: CommandResponseCode;\n    data: number[];\n}\n\nfunction parseCommandResponse(response: PacketData): CommandResponse {\n    if (response.length < 2) throw new Error('command response too short');\n    const commandId = response[0];\n    const errorCode = parseCommandResponseCode(response[1]);\n    const data = response.slice(2);\n    return {\n        commandId,\n        errorCode,\n        data,\n    };\n}\n\nenum CommandId {\n    SetShutter = 0x01,\n    Sleep = 0x05,\n    APControl = 0x17,\n    GetHardwareInfo = 0x3c,\n    PresetsLoadGroup = 0x3e,\n    PresetsLoad = 0x40,\n    Analytics = 0x50,\n    OpenGoProGetVersion = 0x51,\n}\n\nfunction dispatchCommandResponse(dispatch: ThunkDispatch<RootState, unknown, AnyAction>, commandResponse: CommandResponse) {\n    // TODO handle regular command response?\n    // At least show error toast on failure?\n    switch (commandResponse.commandId) {\n        case CommandId.GetHardwareInfo: {\n            if (commandResponse.errorCode === CommandResponseCode.error) {\n                // Error occured during get hardware info? Sometimes this happens while GoPro is in the middle of booting up.\n                dispatch(getHardwareInfoCommand());\n                break;\n            }\n            dispatch(goproBluetoothSlice.actions.getHardwareInfoResponse(parseGetHardwareInfoResponse(commandResponse)));\n            break;\n        }\n        case CommandId.OpenGoProGetVersion: {\n            if (commandResponse.errorCode === CommandResponseCode.error) {\n                // Error occured during open GoPro? Sometimes this happens while GoPro is in the middle of booting up.\n                dispatch(openGoProGetVersionCommand());\n                break;\n            }\n            if (commandResponse.errorCode === CommandResponseCode.invalidParameter) {\n                // Open GoPro unsupported\n                // Likely device older than GoPro Hero 9\n                dispatch(goproBluetoothSlice.actions.openGoProGetVersionResponse({ majorVersion: 0, minorVersion: 0 }));\n                break;\n            }\n            dispatch(goproBluetoothSlice.actions.openGoProGetVersionResponse(parseOpenGoProGetVersionResponse(commandResponse)));\n            break;\n        }\n        default:\n            break;\n    }\n}\n\nfunction parseGetHardwareInfoResponse(commandResponse: CommandResponse): GetHardwareInfoState {\n    const { data } = commandResponse;\n    let dataIndex = 0;\n    // model number\n    const lengthOfModelNumber = data[dataIndex++];\n    const modelNumber = new Array(lengthOfModelNumber).fill(0).map(() => data[dataIndex++]);\n    // model name\n    const lengthOfModelName = data[dataIndex++];\n    const modelName = new Array(lengthOfModelName)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // board type\n    const lengthOfBoardType = data[dataIndex++];\n    const boardType = new Array(lengthOfBoardType)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // firmware version\n    const lengthOfFirmwareVersion = data[dataIndex++];\n    const firmwareVersion = new Array(lengthOfFirmwareVersion)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // serial number\n    const lengthOfSerialNumber = data[dataIndex++];\n    const serialNumber = new Array(lengthOfSerialNumber)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // AP SSID\n    const lengthOfApSsid = data[dataIndex++];\n    const apSsid = new Array(lengthOfApSsid)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // AP MAC Address\n    const lengthOfApMacAddress = data[dataIndex++];\n    const apMacAddress = new Array(lengthOfApMacAddress)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    return {\n        modelNumber,\n        modelName,\n        boardType,\n        firmwareVersion,\n        serialNumber,\n        apSsid,\n        apMacAddress,\n    };\n}\n\nfunction parseOpenGoProGetVersionResponse(commandResponse: CommandResponse): OpenGoProVersionState {\n    const { data } = commandResponse;\n    let dataIndex = 0;\n    // Major version\n    const lengthOfMajorVersion = data[dataIndex++];\n    const majorVersion = new Array(lengthOfMajorVersion)\n        .fill(0)\n        .map(() => data[dataIndex++])\n        // eslint-disable-next-line no-bitwise\n        .reduce((acc, cur) => (acc << 8) + cur);\n    // Minor version\n    const lengthOfMinorVersion = data[dataIndex++];\n    const minorVersion = new Array(lengthOfMinorVersion)\n        .fill(0)\n        .map(() => data[dataIndex++])\n        // eslint-disable-next-line no-bitwise\n        .reduce((acc, cur) => (acc << 8) + cur);\n    return {\n        majorVersion,\n        minorVersion,\n    };\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { bluetoothDeviceState } from './goproBleServiceState';\n\nexport interface SettingValue {\n    value: number;\n    /** Length in bytes */\n    length: number;\n}\n\ninterface Settings {\n    [key: number]: SettingValue;\n}\n\ninterface Statuses {\n    [key: number]: number | string | undefined;\n}\n\nexport interface GoproSettingsState {\n    settings: Settings;\n    statuses: Statuses;\n    isFetching: boolean;\n}\n\nconst initialState: GoproSettingsState = {\n    settings: {},\n    statuses: {},\n    isFetching: false,\n};\n\nexport const goproSettingsSlice = createSlice({\n    name: 'goproSettings',\n    initialState,\n    reducers: {\n        settingsReceived: (state, action: PayloadAction<Settings>) => {\n            state.settings = { ...state.settings, ...action.payload };\n        },\n        settingsRequested: (state) => {\n            state.isFetching = true;\n        },\n        settingsRequestFailed: (state) => {\n            state.isFetching = false;\n        },\n        statusesReceived: (state, action: PayloadAction<Statuses>) => {\n            state.statuses = { ...state.statuses, ...action.payload };\n        },\n    },\n});\n\nexport const goproSettingsReducer = goproSettingsSlice.reducer;\n\nexport const fetchSettings = createAsyncThunk('goproSettings/fetchSettings', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await queryCharacteristic.writeValue(new Uint8Array([0x01, 0x12]));\n});\n","/* eslint-disable no-bitwise */\nimport { allKnownStatuses } from 'store/goproBluetoothServiceActions/goproStatusMetadata';\nimport { goproSettingsSlice, GoproSettingsState } from 'store/goproSettingsSlice';\nimport { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\nexport function queryResponseReceiverProvider(dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    return (packetData: PacketData) => {\n        const queryResponse = parseQueryResponse(packetData);\n        dispatchQueryResponse(dispatch, queryResponse);\n    };\n}\n\nexport interface QueryResponse {\n    errorCode: CommandResponseCode;\n    statusesOrSettings: StatusOrSetting[];\n    queryId: number;\n}\n\nfunction parseQueryResponse(packetData: PacketData): QueryResponse {\n    if (packetData.length < 2) throw new Error('command response too short');\n    const queryId = packetData[0];\n    const errorCode = parseQueryResponseCode(packetData[1]);\n    const statusesOrSettings = parseStatusesOrSettingsFromData(packetData.slice(2));\n    return {\n        queryId,\n        errorCode,\n        statusesOrSettings,\n    };\n}\n\nfunction parseStatusesOrSettingsFromData(data: number[]) {\n    const settings: StatusOrSetting[] = [];\n    let dataIndex = 0;\n    while (dataIndex < data.length) {\n        const setting = readOneStatusOrSetting(data.slice(dataIndex));\n        settings.push(setting);\n        dataIndex += setting.value.length + 2;\n    }\n    return settings;\n}\n\nexport interface StatusOrSetting {\n    id: number;\n    /** Length in bytes */\n    length: number;\n    value: number[];\n}\n\nfunction readOneStatusOrSetting(data: number[]): StatusOrSetting {\n    const settingId = data[0];\n    const dataLength = data[1];\n    const settingValue = data.slice(2, dataLength + 2);\n    return {\n        id: settingId,\n        length: dataLength,\n        value: settingValue,\n    };\n}\n\nfunction parseQueryResponseCode(responseCode: number) {\n    // Probably same as query, not sure. Not in docs.\n    switch (responseCode) {\n        case 0:\n            return CommandResponseCode.success;\n        case 1:\n            return CommandResponseCode.error;\n        case 2:\n            return CommandResponseCode.invalidParameter;\n        default:\n            return CommandResponseCode.unknown;\n    }\n}\n\nenum CommandResponseCode {\n    unknown,\n    success,\n    error,\n    invalidParameter,\n}\n\nenum QueryId {\n    /*\n0x12 \tGet setting value \t02:12:xx \txx -> Setting ID\n0x12 \tGet all setting values \t01:12\n0x13 \tGet status value \t02:13:xx \txx -> status code\n0x13 \tGet all status values \t01:13\n0x52 \tRegister for setting updates \tnn:52:xx:… \tnn -> message length \\n xx -> setting id\n0x53 \tRegister for status updates \tnn:53:xx:… \tnn -> message length \\n xx -> status code\n0x72 \tUnregister for setting updates \tnn:72:xx:… \tnn -> message length \\n xx -> setting id\n0x73 \tUnregister for status updates \tnn:73:xx:… \tnn -> message length \\n xx -> status code\n */\n    getSettingValue = 0x12,\n    getStatusValue = 0x13,\n    registerForSettingUpdates = 0x52,\n    registerForStatusUpdates = 0x53,\n    unregisterForSettingUpdates = 0x72,\n    unregisterForStatusUpdates = 0x73,\n    // The Query ID for settings/status push notifications replaces the upper 4 bits with 1001 (nine).\n    settingUpdate = 0x92,\n    statusUpdate = 0x93,\n}\n\nconst receivedSettingsReduceToKeyValue = (statusesOrSettings: StatusOrSetting[]): GoproSettingsState['settings'] =>\n    statusesOrSettings.reduce((acc, setting) => {\n        // unused settings will have length of 0\n        if (setting.value.length === 0) return acc;\n        const value = setting.value.reduce((sAcc, sCur) => (sAcc << 8) + sCur);\n        const { length } = setting;\n        acc[setting.id] = {\n            value,\n            length,\n        };\n        return acc;\n    }, {} as GoproSettingsState['settings']);\n\nconst receivedStatusesReduceToKeyValue = (statusesOrSettings: StatusOrSetting[]): GoproSettingsState['statuses'] =>\n    statusesOrSettings.reduce((acc, status) => {\n        const valueLength = status.value.length;\n        const knownStatus = allKnownStatuses.find((s) => s.id === status.id);\n        if (knownStatus?.type === 'string' || valueLength > 4) {\n            const valueStr = status.value.map((v) => String.fromCharCode(v)).join('');\n            acc[status.id] = valueStr;\n            return acc;\n        }\n        // unused statuses will have length of 0\n        if (status.value.length === 0) return acc;\n        const value = status.value.reduce((sAcc, sCur) => (sAcc << 8) + sCur);\n        acc[status.id] = value;\n        return acc;\n    }, {} as GoproSettingsState['statuses']);\n\nfunction dispatchQueryResponse(dispatch: ThunkDispatch<RootState, unknown, AnyAction>, queryResponse: QueryResponse) {\n    switch (queryResponse.queryId) {\n        case QueryId.getSettingValue:\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.registerForSettingUpdates:\n            // When registering to settings updates, it sends current values as response to the register command.\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.settingUpdate:\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.getStatusValue:\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.registerForStatusUpdates:\n            // When registering to status updates, it sends current values as response to the register command.\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.statusUpdate:\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        default:\n            break;\n    }\n}\n","import { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function settingsResponseReceiverProvider(_dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return (_packetData: PacketData) => {\n        // const settings = parseSettings(packetData);\n        // dispatchSettings(dispatch, settings);\n    };\n}\n","import { toast } from 'react-toastify';\n\nexport type PacketData = number[];\n\ntype PacketDataReceiver = (response: PacketData) => void;\n\nexport function goproBlePacketDataReaderProvider(onPacket: PacketDataReceiver) {\n    let packetDataAccumulator: number[] = [];\n    let messageLength = 0;\n    return (ev: Event) => {\n        const characteristic = ev.target as BluetoothRemoteGATTCharacteristic;\n        async function tryParsingSinglePacket(): Promise<PacketData | undefined> {\n            const { value } = characteristic;\n            if (!value) {\n                throw new Error('This should not be possible, empty response value');\n            }\n            const packet = readSinglePacket(value);\n            if (packet.header.isStart) {\n                messageLength = packet.header.messageLength;\n                packetDataAccumulator = packet.data;\n            } else {\n                // TODO consider using continuationIndex\n                packetDataAccumulator.push(...packet.data);\n            }\n            if (packetDataAccumulator.length === messageLength) {\n                // Message complete, last packet, return concatenated data\n                return packetDataAccumulator;\n            }\n            if (packetDataAccumulator.length > messageLength) throw new Error('Did response messages get out of sync?');\n            return undefined;\n        }\n        tryParsingSinglePacket()\n            .then((packetData) => {\n                if (!packetData) return;\n                onPacket(packetData);\n                console.log('packet dump', packetData);\n            })\n            .catch((error) => {\n                // dispatch()\n                toast(`Error while parsing response message ${error}`);\n            });\n    };\n}\n\nfunction readSinglePacket(value: DataView) {\n    const packetHeader = parsePacketHeader(value);\n    const data = Array.from(new Uint8Array(value.buffer)).slice(packetHeader.headerSizeBytes);\n    return { header: packetHeader, data };\n}\n\nfunction parsePacketHeader(data: DataView) {\n    const byte1 = data.getUint8(0);\n    let headerSizeBytes = 1;\n    // eslint-disable-next-line no-bitwise\n    const isStart = (byte1 & 0b10000000) >> 7 === 0b0;\n    if (!isStart) {\n        // Continuation packet\n        // eslint-disable-next-line no-bitwise\n        const continuationIndex = byte1 & 0b01111111;\n        return {\n            isStart: false,\n            headerSizeBytes: 1,\n            continuationIndex,\n        } as const;\n    }\n    // eslint-disable-next-line no-bitwise\n    const startType = (byte1 & 0b01100000) >> 5;\n    let messageLength: number;\n    if (startType === 0b00) {\n        // eslint-disable-next-line no-bitwise\n        messageLength = byte1 & 0b00011111;\n    } else if (startType === 0b01) {\n        headerSizeBytes = 2;\n        const byte2 = data.getUint8(1);\n        // eslint-disable-next-line no-bitwise\n        messageLength = ((byte1 & 0b00011111) << 8) | byte2;\n    } else if (startType === 0b10) {\n        headerSizeBytes = 3;\n        const byte2 = data.getUint8(1);\n        const byte3 = data.getUint8(2);\n        // eslint-disable-next-line no-bitwise\n        messageLength = (byte2 << 8) | byte3;\n    } else if (startType === 0b11) {\n        messageLength = 0;\n    } else {\n        throw new Error('IMPOSSIBLE');\n    }\n    return {\n        isStart: true,\n        headerSizeBytes,\n        messageLength,\n    } as const;\n}\n","import { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { RootState } from 'store/store';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { writeGoProPacketData } from '../goproBluetoothServiceActions';\n\nexport const subscribeToSettingsChangesCommand = createAsyncThunk<void, number[], { state: RootState }>('queryCommands/subscribeToSettingsChangesCommand', async (settingsIds) => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x52, ...settingsIds]);\n});\n\nexport const subscribeToStatusChangesCommand = createAsyncThunk<void, number[], { state: RootState }>('queryCommands/subscribeToStatusChangesCommand', async (statusIds) => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x53, ...statusIds]);\n});\n\nexport const getSettingsCommand = createAsyncThunk('queryCommands/getSettingsCommand', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x12]);\n});\n\nexport const getStatusesCommand = createAsyncThunk('queryCommands/getStatusesCommand', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x13]);\n});\n","/* eslint-disable no-bitwise */\nimport { toast } from 'react-toastify';\nimport { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { goproBluetoothSlice } from 'store/goproBluetoothSlice';\nimport { commandResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderCommand';\nimport { queryResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderQuery';\nimport { settingsResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderSetting';\nimport { RootState } from 'store/store';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { goproBlePacketDataReaderProvider } from '../packetParsing/goproPacketReader';\n\nimport { getHardwareInfoCommand, openGoProGetVersionCommand } from './commands/commands';\nimport { subscribeToSettingsChangesCommand, subscribeToStatusChangesCommand } from './commands/queryCommands';\nimport { statusEncodingActive10, statusSystemBusy8, statusSystemReady82 } from './goproStatusMetadata';\n\ninterface SelectDeviceResult {\n    deviceName: string;\n}\n\nexport const requestDevice = createAsyncThunk<SelectDeviceResult, void, { state: RootState }>('bluetoothDevice/requestDevice', async (_, { dispatch }) => {\n    const device = await navigator.bluetooth.requestDevice({\n        filters: [{ services: ['0000fea6-0000-1000-8000-00805f9b34fb'] }],\n        optionalServices: ['0000fea6-0000-1000-8000-00805f9b34fb', 'b5f90001-aa8d-11e3-9046-0002a5d5c51b'],\n    });\n    device.ongattserverdisconnected = () => {\n        // On disconnect, invalidate all GATT services and characteristics https://web.dev/bluetooth/#disconnect\n        bluetoothDeviceState.characteristics = undefined;\n        bluetoothDeviceState.gattServer = undefined;\n\n        dispatch(goproBluetoothSlice.actions.gattDisconnected('Connection lost'));\n        toast.error('Gopro disconnected, connection lost');\n    };\n    bluetoothDeviceState.device = device;\n    dispatch(gattConnect());\n    return {\n        deviceName: device.name ?? device.id,\n    };\n});\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface GattConnectResult {}\n\nexport const gattConnect = createAsyncThunk<GattConnectResult, void, { state: RootState }>('bluetoothDevice/gattConnect', async (_, { dispatch }) => {\n    const { device } = bluetoothDeviceState;\n    if (!device) throw new Error('device not found to connect to');\n    if (!device?.gatt) throw new Error(`gatt missing for this device ${device.name ?? device.id}`);\n    const gattServer = await device.gatt.connect();\n\n    const wifiApServicePromise = gattServer.getPrimaryService('b5f90001-aa8d-11e3-9046-0002a5d5c51b');\n    const wifiApSsidCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90002-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApPasswordCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90003-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApPowerCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90004-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApStateCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90005-aa8d-11e3-9046-0002a5d5c51b'));\n\n    const cqServicePromise = gattServer.getPrimaryService('0000fea6-0000-1000-8000-00805f9b34fb');\n    const commandCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90072-aa8d-11e3-9046-0002a5d5c51b'));\n    const commandResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90073-aa8d-11e3-9046-0002a5d5c51b'));\n    const settingsCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90074-aa8d-11e3-9046-0002a5d5c51b'));\n    const settingsResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90075-aa8d-11e3-9046-0002a5d5c51b'));\n    const queryCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90076-aa8d-11e3-9046-0002a5d5c51b'));\n    const queryResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90077-aa8d-11e3-9046-0002a5d5c51b'));\n\n    bluetoothDeviceState.gattServer = gattServer;\n    bluetoothDeviceState.characteristics = {\n        wifiApSsidCharacteristic: await wifiApSsidCharacteristicPromise,\n        wifiApPasswordCharacteristic: await wifiApPasswordCharacteristicPromise,\n        wifiApPowerCharacteristic: await wifiApPowerCharacteristicPromise,\n        wifiApStateCharacteristic: await wifiApStateCharacteristicPromise,\n        commandCharacteristic: await commandCharacteristicPromise,\n        commandResponseCharacteristic: await commandResponseCharacteristicPromise,\n        settingsCharacteristic: await settingsCharacteristicPromise,\n        settingsResponseCharacteristic: await settingsResponseCharacteristicPromise,\n        queryCharacteristic: await queryCharacteristicPromise,\n        queryResponseCharacteristic: await queryResponseCharacteristicPromise,\n    };\n    bluetoothDeviceState.characteristics.commandResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(commandResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.commandResponseCharacteristic.startNotifications();\n    bluetoothDeviceState.characteristics.queryResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(queryResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.queryResponseCharacteristic.startNotifications();\n    bluetoothDeviceState.characteristics.settingsResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(settingsResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.settingsResponseCharacteristic.startNotifications();\n\n    // Explicitly first subscribe to ones needed to know of we can send commands\n    await dispatch(subscribeToStatusChangesCommand([statusSystemReady82.id, statusEncodingActive10.id, statusSystemBusy8.id]));\n\n    // Subscribe to status and setting changes, will be useful to know when the device is ready to receive commands\n    // TODO Reconsider this subscribing logic\n    await dispatch(subscribeToStatusChangesCommand([...new Array(88).keys()]));\n    await dispatch(subscribeToSettingsChangesCommand([...new Array(112).keys()]));\n\n    await dispatch(openGoProGetVersionCommand());\n    await dispatch(getHardwareInfoCommand());\n    // TODO maybe subscribe only when UI requires it? With current interface we literally always need it...\n    // For now subscribe to all known settings, last setting ID is 112, last status id is 88\n});\n\nasync function writeGoProPacketDataRaw(characteristic: BluetoothRemoteGATTCharacteristic, data: number[]) {\n    // console.log('writing raw data', data);\n    return characteristic.writeValue(new Uint8Array(data));\n}\n\nfunction getPacketHeaderForData(dataLength: number, chunkIndex: number) {\n    if (chunkIndex > 0) return [0b10000000 + (chunkIndex & 0b00111111)];\n    if (dataLength <= 0x1f) return [dataLength & 0b00011111];\n    if (dataLength <= 0x1fff) return [0b00100000 + ((dataLength >> 8) & 0b00011111), dataLength & 0b11111111];\n    if (dataLength <= 0xffff) return [0b01000000, (dataLength >> 8) & 0b11111111, dataLength & 0b11111111];\n\n    toast.error('packet too large');\n    throw new Error('data length too large');\n}\n\nexport async function writeGoProPacketData(characteristic: BluetoothRemoteGATTCharacteristic, data: number[]) {\n    console.log('writing data, before appending headers', data);\n    const dataCopy = [...data];\n    let chunkIndex = 0;\n    while (dataCopy.length > 0) {\n        dataCopy.unshift(...getPacketHeaderForData(data.length, chunkIndex));\n        const chunk = dataCopy.splice(0, 20);\n        // Intentional await inside loop, this can only be done synchronously\n        // eslint-disable-next-line no-await-in-loop\n        await writeGoProPacketDataRaw(characteristic, chunk);\n        chunkIndex++;\n    }\n    return undefined;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { gattConnect, requestDevice } from './goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { bluetoothDeviceState } from './goproBleServiceState';\n\nexport interface OpenGoProVersionState {\n    majorVersion: number;\n    minorVersion: number;\n}\n\nexport interface GetHardwareInfoState {\n    modelNumber: number[];\n    modelName: string;\n    boardType: string;\n    firmwareVersion: string;\n    serialNumber: string;\n    apSsid: string;\n    apMacAddress: string;\n}\n\ninterface GoproBluetoothDeviceCommandsState {\n    isCommandInAction: boolean;\n    getHardwareInfo?: GetHardwareInfoState;\n    openGoProVersion?: OpenGoProVersionState;\n}\n\ninterface GoproBluetoothDeviceState {\n    isRequestingDevice: boolean;\n    isDeviceSelected: boolean;\n    deviceName: string;\n    error?: string;\n    isGattConnecting: boolean;\n    isGattConnected: boolean;\n    goproBluetoothDeviceCommandsState: GoproBluetoothDeviceCommandsState;\n}\n\nexport const initialState: GoproBluetoothDeviceState = {\n    isRequestingDevice: false,\n    isDeviceSelected: false,\n    isGattConnected: false,\n    isGattConnecting: false,\n    deviceName: 'unknown',\n    goproBluetoothDeviceCommandsState: {\n        isCommandInAction: false,\n    },\n};\n\nexport const goproBluetoothSlice = createSlice({\n    name: 'bluetoothDevice',\n    initialState,\n    reducers: {\n        gattDisconnected: (state, action: PayloadAction<string | undefined>) => {\n            state.isGattConnected = false;\n            state.error = action.payload;\n        },\n        getHardwareInfoResponse: (state, action: PayloadAction<GetHardwareInfoState>) => {\n            state.goproBluetoothDeviceCommandsState.getHardwareInfo = action.payload;\n            // Let's override device name when we know wifi ssid\n            state.deviceName = action.payload.apSsid;\n        },\n        openGoProGetVersionResponse: (state, action: PayloadAction<OpenGoProVersionState>) => {\n            state.goproBluetoothDeviceCommandsState.openGoProVersion = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(requestDevice.pending, (state) => {\n            bluetoothDeviceState.device = undefined;\n            state.isRequestingDevice = true;\n            state.isDeviceSelected = false;\n            state.error = undefined;\n        });\n        builder.addCase(requestDevice.fulfilled, (state, action) => {\n            state.isRequestingDevice = false;\n            state.isDeviceSelected = true;\n            state.error = undefined;\n            state.deviceName = action.payload.deviceName;\n        });\n        builder.addCase(requestDevice.rejected, (state, action) => {\n            bluetoothDeviceState.device = undefined;\n            state.isRequestingDevice = false;\n            state.isDeviceSelected = false;\n            state.error = action.error.message ?? 'unknown error';\n        });\n        builder.addCase(gattConnect.pending, (state) => {\n            state.isGattConnecting = true;\n            state.isGattConnected = false;\n        });\n        builder.addCase(gattConnect.fulfilled, (state) => {\n            state.isGattConnecting = false;\n            state.isGattConnected = true;\n        });\n        builder.addCase(gattConnect.rejected, (state, action) => {\n            state.isGattConnecting = false;\n            state.isGattConnected = false;\n            state.error = action.error.message ?? 'unknown error';\n        });\n    },\n});\n\nexport const goproBluetoothReducer = goproBluetoothSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { goproBluetoothReducer } from './goproBluetoothSlice';\nimport { goproSettingsReducer } from './goproSettingsSlice';\n\nexport const store = configureStore({\n    reducer: {\n        goproBluetoothReducer,\n        goproSettingsReducer,\n    },\n    devTools: true,\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { gattConnect } from 'store/goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\n\nimport { Box, Button, Container, Typography } from '@mui/material';\n\nexport const ConnectToGoProView: React.FC = () => {\n    const isGattConnecting = useAppSelector((state) => state.goproBluetoothReducer.isGattConnecting);\n    const deviceName = useAppSelector((state) => state.goproBluetoothReducer.deviceName);\n    const currentError = useAppSelector((state) => state.goproBluetoothReducer.error);\n    const dispatch = useAppDispatch();\n    return (\n        <Container maxWidth=\"sm\">\n            <Box sx={{ my: 4 }}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    {isGattConnecting ? `Connecting to ${deviceName}...` : `Connect to ${deviceName}`}\n                </Typography>\n                {isGattConnecting ? null : <Button onClick={() => dispatch(gattConnect())}>Reconnect</Button>}\n                {currentError ? <div>{currentError}</div> : null}\n            </Box>\n        </Container>\n    );\n};\n","import { Container } from '@mui/material';\n\ninterface IProps {\n    errorTitle: string;\n    errorDescription: string;\n}\n\nexport const ErrorPage: React.FC<IProps> = (props) => {\n    const { errorTitle, errorDescription } = props;\n    return (\n        <Container maxWidth=\"sm\">\n            <h1>{errorTitle}</h1>\n            <p>{errorDescription}</p>\n        </Container>\n    );\n};\n","import { requestDevice } from 'store/goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\n\nimport { Box, Button, Container, Typography } from '@mui/material';\n\nexport const SearchForGoProView: React.FC = () => {\n    const isRequestingDevice = useAppSelector((state) => state.goproBluetoothReducer.isRequestingDevice);\n    const currentError = useAppSelector((state) => state.goproBluetoothReducer.error);\n    const dispatch = useAppDispatch();\n    return (\n        <Container maxWidth=\"sm\">\n            <Box sx={{ my: 4 }}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    {isRequestingDevice ? 'Select your GoPro' : 'Search for GoPro'}\n                </Typography>\n                <Button onClick={() => dispatch(requestDevice())}>Search</Button>\n                {currentError ? <div>{currentError}</div> : null}\n            </Box>\n        </Container>\n    );\n};\n","import React from 'react';\n\nimport { AppBar, Toolbar, Typography } from '@mui/material';\n\nexport const Header: React.FC = () => (\n    <AppBar position=\"sticky\">\n        <Toolbar>\n            <Typography variant=\"h6\">GoPro Bluetooth remote</Typography>\n        </Toolbar>\n    </AppBar>\n);\n","/* eslint-disable no-bitwise */\nexport interface SettingValueMetadata {\n    id: number;\n    label: string;\n}\n\nexport interface SettingMetadata {\n    id: number;\n    label: string;\n    length: number;\n    values: SettingValueMetadata[];\n}\n\nexport const settingResolution2: SettingMetadata = {\n    id: 0x2,\n    label: 'Resolution',\n    length: 1,\n    values: [\n        {\n            id: 0x12, // 18\n            label: '4K (4:3)',\n        },\n        {\n            id: 0x6,\n            label: '2.7K (4:3)',\n        },\n        {\n            id: 0x7,\n            label: '1440 (4:3)',\n        },\n        {\n            id: 0xa, // 10\n            label: '960 (4:3)',\n        },\n        {\n            id: 0x1,\n            label: '4K',\n        },\n        {\n            id: 0x4,\n            label: '2.7K',\n        },\n        {\n            id: 0x9,\n            label: '1080',\n        },\n        {\n            id: 0xc, // 12\n            label: '720',\n        },\n    ],\n};\n\nexport const settingFps3: SettingMetadata = {\n    id: 0x3,\n    label: 'FPS',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '240',\n        },\n        {\n            id: 0x1,\n            label: '120',\n        },\n        {\n            id: 0x5,\n            label: '60',\n        },\n        {\n            id: 0x8,\n            label: '30',\n        },\n        {\n            id: 0xa, // 10\n            label: '24',\n        },\n    ],\n};\n\nexport const settingFov4: SettingMetadata = {\n    id: 0x4,\n    label: 'FOV',\n    length: 1,\n    values: [\n        {\n            id: 0x4,\n            label: 'Linear',\n        },\n        {\n            id: 0x0,\n            label: 'Wide',\n        },\n        {\n            id: 0x3,\n            label: 'Super view',\n        },\n    ],\n};\n\nexport const settingInterval5: SettingMetadata = {\n    id: 0x5,\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '0.5s',\n        },\n        {\n            id: 0x1,\n            label: '1s',\n        },\n        {\n            id: 0x2,\n            label: '2s',\n        },\n\n        {\n            id: 0x3,\n            label: '5s',\n        },\n        {\n            id: 0x4,\n            label: '10s',\n        },\n        {\n            id: 0x5,\n            label: '30s',\n        },\n        {\n            id: 0x6,\n            label: '60s',\n        },\n    ],\n};\n\nexport const settingInterval6: SettingMetadata = {\n    id: 0x6,\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'MAX',\n        },\n        {\n            id: 0x1,\n            label: '5m',\n        },\n        {\n            id: 0x2,\n            label: '20m',\n        },\n        {\n            id: 0x3,\n            label: '60m',\n        },\n        {\n            id: 0x4,\n            label: '120m',\n        },\n    ],\n};\n\nexport const settingLowLight8: SettingMetadata = {\n    id: 0x8,\n    label: 'Low light',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Auto',\n        },\n    ],\n};\n\nexport const settingProtune10: SettingMetadata = {\n    id: 0xa, // 10\n    label: 'Protune',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingWhiteBalance11: SettingMetadata = {\n    id: 0xb, // 11\n    label: 'White Balance',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Auto' },\n        { id: 0x8, label: '2300K' },\n        { id: 0x9, label: '2800K' },\n        {\n            id: 0xa, // 10\n            label: '3200K',\n        },\n        { id: 0x5, label: '4000K' },\n        {\n            id: 0xb, // 11\n            label: '4500K',\n        },\n        {\n            id: 0xc, // 12\n            label: '5000K',\n        },\n        { id: 0x2, label: '5500K' },\n        { id: 0x7, label: '6000K' },\n        { id: 0x3, label: '6500K' },\n        { id: 0x4, label: 'Native' },\n    ],\n};\n\nexport const settingColor12: SettingMetadata = {\n    id: 0xc, // 12\n    label: 'Color',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'GoPro',\n        },\n        {\n            id: 0x1,\n            label: 'Flat',\n        },\n    ],\n};\n\nexport const settingIsoMax13: SettingMetadata = {\n    id: 0xd, // 13\n    label: 'ISO max',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '6400',\n        },\n        {\n            id: 0x3,\n            label: '3200',\n        },\n        {\n            id: 0x1,\n            label: '1600',\n        },\n        {\n            id: 0x4,\n            label: '800',\n        },\n        {\n            id: 0x2,\n            label: '400',\n        },\n        {\n            id: 0x7,\n            label: '200',\n        },\n        {\n            id: 0x8,\n            label: '100',\n        },\n    ],\n};\n\nexport const settingSharpness14: SettingMetadata = {\n    id: 0xe, // 14\n    label: 'Sharpness',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'High',\n        },\n        {\n            id: 0x1,\n            label: 'Medium',\n        },\n        {\n            id: 0x2,\n            label: 'Low',\n        },\n    ],\n};\n\nexport const settingEvComp15: SettingMetadata = {\n    id: 0xf, // 15\n    label: 'EV comp',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '+2',\n        },\n        {\n            id: 0x1,\n            label: '+1.5',\n        },\n        {\n            id: 0x2,\n            label: '+1',\n        },\n        {\n            id: 0x3,\n            label: '+0.5',\n        },\n        {\n            id: 0x4,\n            label: '0',\n        },\n        {\n            id: 0x5,\n            label: '-0.5',\n        },\n        {\n            id: 0x6,\n            label: '-1',\n        },\n        {\n            id: 0x7,\n            label: '-1.5',\n        },\n        {\n            id: 0x8,\n            label: '-2',\n        },\n    ],\n};\n\nexport const settingPhotoFov17: SettingMetadata = {\n    id: 0x11, // 17\n    label: 'FOV',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Wide',\n        },\n        {\n            id: 0xa, // 10\n            label: 'Linear',\n        },\n    ],\n};\n\nexport const settingPhotoShutter19: SettingMetadata = {\n    id: 0x13, // 19\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x6,\n            label: '30s',\n        },\n        {\n            id: 0x5,\n            label: '20s',\n        },\n        {\n            id: 0x4,\n            label: '15s',\n        },\n        {\n            id: 0x3,\n            label: '10s',\n        },\n        {\n            id: 0x2,\n            label: '5s',\n        },\n        {\n            id: 0x1,\n            label: '2s',\n        },\n    ],\n};\n\nexport const settingPhotoProtune21: SettingMetadata = {\n    id: 0x15, // 21\n    label: settingProtune10.label,\n    length: settingProtune10.length,\n    values: settingProtune10.values,\n};\n\nexport const settingPhotoWhiteBalance22: SettingMetadata = {\n    id: 0x16, // 22\n    label: settingWhiteBalance11.label,\n    length: settingWhiteBalance11.length,\n    values: settingWhiteBalance11.values,\n};\n\nexport const settingPhotoColor23: SettingMetadata = {\n    id: 0x17, // 23\n    label: settingColor12.label,\n    length: settingColor12.length,\n    values: settingColor12.values,\n};\n\nexport const settingPhotoIsoMax24: SettingMetadata = {\n    id: 0x18, // 24\n    label: settingIsoMax13.label,\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '800',\n        },\n        {\n            id: 0x1,\n            label: '400',\n        },\n        {\n            id: 0x2,\n            label: '200',\n        },\n        {\n            id: 0x3,\n            label: '100',\n        },\n        {\n            id: 0x4,\n            label: '1600',\n        },\n        {\n            id: 0x5,\n            label: '3200',\n        },\n    ],\n};\n\nexport const settingPhotoSharpness25: SettingMetadata = {\n    id: 0x19, // 25\n    label: settingSharpness14.label,\n    length: settingSharpness14.length,\n    values: settingSharpness14.values,\n};\n\nexport const settingPhotoEvComp26: SettingMetadata = {\n    id: 0x1a, // 26\n    label: settingEvComp15.label,\n    length: settingEvComp15.length,\n    values: settingEvComp15.values,\n};\n\nexport const settingMultishotFov28: SettingMetadata = {\n    id: 0x1c, // 28\n    label: settingPhotoFov17.label,\n    length: settingPhotoFov17.length,\n    values: settingPhotoFov17.values,\n};\n\nconst settingMultishotBurstRate29: SettingMetadata = {\n    id: 0x1d, // 29\n    label: 'Burst Rate',\n    length: 1,\n    values: [\n        {\n            id: 0x9,\n            label: 'Auto',\n        },\n        {\n            id: 0x8,\n            label: '30/6s',\n        },\n        {\n            id: 0x7,\n            label: '30/3s',\n        },\n        {\n            id: 0x6,\n            label: '30/2s',\n        },\n        {\n            id: 0x5,\n            label: '30/1s',\n        },\n        {\n            id: 0x4,\n            label: '10/3s',\n        },\n        {\n            id: 0x3,\n            label: '10/2s',\n        },\n        {\n            id: 0x2,\n            label: '10/1s',\n        },\n        {\n            id: 0x1,\n            label: '5/1s',\n        },\n        {\n            id: 0x0,\n            label: '3/1s',\n        },\n    ],\n};\n\nexport const settingMultishotInterval30: SettingMetadata = {\n    id: 0x1e, // 30\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '0.5s',\n        },\n        {\n            id: 0x1,\n            label: '1s',\n        },\n        {\n            id: 0x2,\n            label: '2s',\n        },\n        {\n            id: 0x5,\n            label: '5s',\n        },\n        {\n            id: 0xa, // 10\n            label: '10s',\n        },\n        {\n            id: 0x1e, // 30\n            label: '30s',\n        },\n        {\n            id: 0x3c, // 60\n            label: '60s',\n        },\n    ],\n};\n\nexport const settingMultishotShutter31: SettingMetadata = {\n    id: 0x1f, // 31\n    label: settingPhotoShutter19.label,\n    length: settingPhotoShutter19.length,\n    values: settingPhotoShutter19.values,\n};\n\nexport const settingMultishotInterval32: SettingMetadata = {\n    id: 0x20, // 32\n    label: 'Interval',\n    length: 4,\n    values: [\n        {\n            id: (0xe << 8) + 0x11,\n            label: 'Auto',\n        },\n        {\n            id: (0x0 << 8) + 0x4,\n            label: '4s',\n        },\n        {\n            id: (0x0 << 8) + 0x5,\n            label: '5s',\n        },\n        {\n            id: (0x0 << 8) + 0xa,\n            label: '10s',\n        },\n        {\n            id: (0x0 << 8) + 0x14,\n            label: '20s',\n        },\n        {\n            id: (0x0 << 8) + 0x3c,\n            label: '1m',\n        },\n        {\n            id: (0x0 << 8) + 0x78,\n            label: '2m',\n        },\n        {\n            id: (0x1 << 8) + 0x2c,\n            label: '5m',\n        },\n        {\n            id: (0x7 << 8) + 0x8,\n            label: '30m',\n        },\n        {\n            id: (0xe << 8) + 0x10,\n            label: '60m',\n        },\n    ],\n};\n\nexport const settingMultishotProtune34: SettingMetadata = {\n    id: 0x22, // 34\n    label: settingProtune10.label,\n    length: settingProtune10.length,\n    values: settingProtune10.values,\n};\n\nexport const settingMultishotWhiteBalance35: SettingMetadata = {\n    id: 0x23, // 35\n    label: settingWhiteBalance11.label,\n    length: settingWhiteBalance11.length,\n    values: settingWhiteBalance11.values,\n};\n\nexport const settingMultishotColor36: SettingMetadata = {\n    id: 0x24, // 36\n    label: settingColor12.label,\n    length: settingColor12.length,\n    values: settingColor12.values,\n};\n\nexport const settingMultishotIsoMax37: SettingMetadata = {\n    id: 0x25, // 37\n    label: settingIsoMax13.label,\n    length: settingPhotoIsoMax24.length,\n    values: settingPhotoIsoMax24.values,\n};\n\nexport const settingMultishotSharpness38: SettingMetadata = {\n    id: 0x26, // 38\n    label: settingSharpness14.label,\n    length: settingSharpness14.length,\n    values: settingSharpness14.values,\n};\n\nexport const settingMultishotEvComp39: SettingMetadata = {\n    id: 0x27, // 39\n    label: settingEvComp15.label,\n    length: settingEvComp15.length,\n    values: settingEvComp15.values,\n};\n\nexport const settingTouchDisplayScreenSaver51: SettingMetadata = {\n    id: 0x33, // 51\n    label: 'Touch Display Screen Saver',\n    length: 1,\n    values: [\n        {\n            id: 0x1,\n            label: '1min',\n        },\n        {\n            id: 0x2,\n            label: '2min',\n        },\n        {\n            id: 0x3,\n            label: '3min',\n        },\n        {\n            id: 0x0,\n            label: 'Never',\n        },\n    ],\n};\n\nexport const settingQuickCapture54: SettingMetadata = {\n    id: 0x36, // 54\n    label: 'Quick Capture',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingShutter73: SettingMetadata = {\n    id: 0x49, // 73\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x8,\n            label: '1/60',\n        },\n        {\n            id: 0xd, // 13\n            label: '1/120',\n        },\n        {\n            id: 0x12, // 18\n            label: '1/240',\n        },\n        {\n            id: 0x16, // 22\n            label: '1/480',\n        },\n        {\n            id: 0x17, // 23\n            label: '1/960',\n        },\n    ],\n};\n\nexport const settingPhotoIsoMin75: SettingMetadata = {\n    id: 0x4b, // 75\n    label: 'ISO min',\n    length: settingPhotoIsoMax24.length,\n    values: settingPhotoIsoMax24.values,\n};\n\nexport const settingMultishotIsoMin76: SettingMetadata = {\n    id: 0x4c, // 76\n    label: settingPhotoIsoMin75.label,\n    length: settingPhotoIsoMax24.length,\n    values: settingPhotoIsoMax24.values,\n};\n\nexport const settingStabilization78: SettingMetadata = {\n    id: 0x4e, // 78\n    label: 'Stabilization',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Off' },\n        { id: 0x1, label: 'Auto' },\n    ],\n};\n\nexport const settingMicrophone80: SettingMetadata = {\n    id: 0x50, // 80\n    label: 'Microphone',\n    length: 1,\n    values: [\n        {\n            id: 0x2,\n            label: 'Auto',\n        },\n        {\n            id: 0x1,\n            label: 'Wind',\n        },\n        {\n            id: 0x0,\n            label: 'Stereo',\n        },\n    ],\n};\n\nexport const settingRawAudio81: SettingMetadata = {\n    id: 0x51, // 81\n    label: 'Raw audio',\n    length: 1,\n    values: [\n        {\n            id: 0x3,\n            label: 'Off',\n        },\n        {\n            id: 0x0,\n            label: 'Low',\n        },\n        {\n            id: 0x1,\n            label: 'Medium',\n        },\n        {\n            id: 0x2,\n            label: 'High',\n        },\n    ],\n};\n\nexport const settingRegionalGps83: SettingMetadata = {\n    id: 0x53, // 83\n    label: 'Regional GPS',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingRegionalLanguage84: SettingMetadata = {\n    id: 0x54, // 84\n    label: 'Regional Language',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'English',\n        },\n        {\n            id: 0x6,\n            label: 'French',\n        },\n        // TODO\n    ],\n};\n\nexport const settingVoiceControlLanguage85: SettingMetadata = {\n    id: 0x55, // 85\n    label: 'Voice Control Language',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'English (US)',\n        },\n        {\n            id: 0x1,\n            label: 'English (UK)',\n        },\n        {\n            id: 0xd,\n            label: 'English (India)',\n        },\n        // TODO\n    ],\n};\n\nexport const settingVoiceControl86: SettingMetadata = {\n    id: 0x56, // 86\n    label: 'Voice Control',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingBeeps87: SettingMetadata = {\n    id: 0x57, // 87\n    label: 'Beeps',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Mute',\n        },\n        {\n            id: 0x64, // 100\n            label: 'High',\n        },\n        {\n            id: 0x46, // 70\n            label: 'Medium',\n        },\n        {\n            id: 0x28, // 40\n            label: 'Low',\n        },\n    ],\n};\n\nexport const settingTouchDisplayBrightness88: SettingMetadata = {\n    id: 0x58, // 88\n    label: 'Touch Display Brightness',\n    length: 1,\n    values: [\n        {\n            id: 0x64, // 100\n            label: '100%',\n        },\n        {\n            id: 0x50, // 80\n            label: '80%',\n        },\n        {\n            id: 0xa,\n            label: '10%',\n        },\n        // TODO This is supposed to be slider\n    ],\n};\n\nexport const settingDefaultMode89: SettingMetadata = {\n    id: 0x59, // 89\n    label: 'Default Mode',\n    length: 1,\n    values: [\n        {\n            id: 0xc, // 12\n            label: 'Video',\n        },\n        {\n            id: 0xf, // 15\n            label: 'Looping',\n        },\n        {\n            id: 0x11, // 17\n            label: 'Photo',\n        },\n        {\n            id: 0x12, // 18\n            label: 'Night',\n        },\n        {\n            id: 0x13, // 19\n            label: 'Burst',\n        },\n        {\n            id: 0x18, // 24\n            label: 'Timewarp Video',\n        },\n        {\n            id: 0xd, // 13\n            label: 'Timelapse Video',\n        },\n        {\n            id: 0x14, // 20\n            label: 'Timelapse Photo',\n        },\n        {\n            id: 0x15, // 21\n            label: 'Nightlapse Photo',\n        },\n    ],\n};\n\nexport const settingLeds91: SettingMetadata = {\n    id: 0x5b, // 91\n    label: 'LEDs',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'All Off',\n        },\n        {\n            id: 0x1,\n            label: 'Front Off Only',\n        },\n        {\n            id: 0x2,\n            label: 'All On',\n        },\n    ],\n};\n\nexport const settingsCurrentMode92: SettingMetadata = {\n    id: 0x5c, // 92\n    label: 'Current Mode',\n    length: settingDefaultMode89.length,\n    values: settingDefaultMode89.values,\n};\n\nexport const settingPhotoShutter97: SettingMetadata = {\n    id: 0x61, // 97\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x1,\n            label: '1/125',\n        },\n        {\n            id: 0x2,\n            label: '1/250',\n        },\n        {\n            id: 0x3,\n            label: '1/500',\n        },\n        {\n            id: 0x4,\n            label: '1/1000',\n        },\n        {\n            id: 0x5,\n            label: '1/2000',\n        },\n    ],\n};\n\nexport const settingPhotoRaw98: SettingMetadata = {\n    id: 0x62, // 98\n    label: 'RAW',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingMultishotRaw99: SettingMetadata = {\n    id: 0x63, // 99\n    label: settingPhotoRaw98.label,\n    length: settingPhotoRaw98.length,\n    values: settingPhotoRaw98.values,\n};\n\nexport const settingIsoMin102: SettingMetadata = {\n    id: 0x66, // 102\n    label: settingPhotoIsoMin75.label,\n    length: settingIsoMax13.length,\n    values: settingIsoMax13.values,\n};\n\nexport const settingWakeOnVoice104: SettingMetadata = {\n    id: 0x68, // 104\n    label: 'Wake On Voice',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingVideoCompression106: SettingMetadata = {\n    id: 0x6a, // 106\n    label: 'Video Compression',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'H264',\n        },\n        {\n            id: 0x1,\n            label: 'HEVC',\n        },\n    ],\n};\n\nexport const settingVideoTimer107: SettingMetadata = {\n    id: 0x6b, // 107\n    label: 'Video Timer',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Off' },\n        { id: 0x1, label: '15s' },\n        { id: 0x2, label: '30s' },\n    ],\n};\n\nexport const settingResolutionFormat108: SettingMetadata = {\n    id: 0x6c, // 108\n    label: 'Resolution format',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '4:3',\n        },\n        {\n            id: 0x1,\n            label: '16:9',\n        },\n    ],\n};\n\nexport const settingPhotoSuperPhoto109: SettingMetadata = {\n    id: 0x6d, // 109\n    label: 'Super Photo',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Auto',\n        },\n        {\n            id: 0x2,\n            label: 'HDR On',\n        },\n    ],\n};\n\nexport const settingSpeed111: SettingMetadata = {\n    id: 0x6f, // 111\n    label: 'Speed',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '15x',\n        },\n        {\n            id: 0x1,\n            label: '30x',\n        },\n        {\n            id: 0x7,\n            label: '2x',\n        },\n        {\n            id: 0x8,\n            label: '5x',\n        },\n        {\n            id: 0x9,\n            label: '10x',\n        },\n    ],\n};\n\nexport const settingTouchDisplayLandscapeLock112: SettingMetadata = {\n    id: 0x70, // 112\n    label: 'Touch Display Landscape Lock',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Up',\n        },\n        {\n            id: 0x2,\n            label: 'Down',\n        },\n    ],\n};\n\n/*\nRegional Video format\n    NTSC\n    PAL\n    TODO CHANGED VALUES:\n        // Not sure which one means this setting\n        42 = 5 -> 6\n        57 = 0 -> 1\n\n*/\n\nexport const videoModeKnownSettings: SettingMetadata[] = [\n    settingResolution2,\n    settingFps3,\n    settingFov4,\n    settingLowLight8,\n    settingStabilization78,\n    settingProtune10,\n    settingShutter73,\n    settingEvComp15,\n    settingWhiteBalance11,\n    settingIsoMin102,\n    settingIsoMax13,\n    settingSharpness14,\n    settingColor12,\n    settingRawAudio81,\n    settingMicrophone80,\n    settingVideoTimer107,\n    settingResolutionFormat108,\n];\n\nexport const loopingModeKnownSettings: SettingMetadata[] = [settingResolution2, settingFps3, settingFov4, settingInterval6, settingLowLight8, settingStabilization78];\n\nexport const timewarpModeKnownSettings: SettingMetadata[] = [\n    settingResolution2,\n    settingSpeed111,\n    // But limited to \"Wide\" only\n    settingFov4,\n];\n\nexport const timelapseVideoModeKnownSettings: SettingMetadata[] = [settingResolution2, settingFov4, settingInterval5];\n\nexport const timelapsePhotoModeKnownSettings: SettingMetadata[] = [\n    settingMultishotInterval30,\n    settingMultishotFov28,\n    settingMultishotEvComp39,\n    settingMultishotWhiteBalance35,\n    settingMultishotIsoMin76,\n    settingMultishotIsoMax37,\n    settingMultishotSharpness38,\n    settingMultishotColor36,\n    settingMultishotProtune34,\n];\n\nexport const nightlapseModeKnownSettings: SettingMetadata[] = [\n    settingMultishotIsoMin76,\n    settingMultishotIsoMax37,\n    settingMultishotShutter31,\n    settingMultishotInterval32,\n    settingMultishotFov28,\n    settingMultishotProtune34,\n    settingMultishotWhiteBalance35,\n    settingMultishotRaw99,\n];\n\nexport const photoNightModeKnownSettings: SettingMetadata[] = [\n    settingPhotoShutter19,\n    settingPhotoFov17,\n    settingPhotoEvComp26,\n    settingPhotoWhiteBalance22,\n    settingPhotoIsoMin75,\n    settingPhotoIsoMax24,\n    settingPhotoSharpness25,\n    settingPhotoColor23,\n    settingPhotoProtune21,\n    settingPhotoRaw98,\n];\n\nexport const photoBurstModeKnownSettings: SettingMetadata[] = [\n    settingMultishotBurstRate29,\n    settingMultishotFov28,\n    settingMultishotProtune34,\n    settingMultishotEvComp39,\n    settingMultishotWhiteBalance35,\n    settingMultishotIsoMin76,\n    settingMultishotIsoMax37,\n    settingMultishotSharpness38,\n    settingMultishotColor36,\n];\n\nexport const photoSingleModeKnownSettings: SettingMetadata[] = [\n    settingPhotoFov17,\n    settingPhotoSuperPhoto109,\n    settingPhotoProtune21,\n    settingPhotoShutter97,\n    settingPhotoEvComp26,\n    settingPhotoWhiteBalance22,\n    settingPhotoIsoMin75,\n    settingPhotoIsoMax24,\n    settingPhotoSharpness25,\n    settingPhotoColor23,\n];\n\nexport const generalSettings: SettingMetadata[] = [\n    settingQuickCapture54,\n    settingBeeps87,\n    settingDefaultMode89,\n    settingLeds91,\n    settingVideoCompression106,\n    settingVoiceControl86,\n    settingWakeOnVoice104,\n    settingVoiceControlLanguage85,\n    settingTouchDisplayLandscapeLock112,\n    settingTouchDisplayScreenSaver51,\n    settingTouchDisplayBrightness88,\n    settingRegionalGps83,\n    settingRegionalLanguage84,\n];\n\nexport const allKnownSettings: SettingMetadata[] = [\n    ...videoModeKnownSettings,\n    ...loopingModeKnownSettings,\n    ...timewarpModeKnownSettings,\n    ...timelapseVideoModeKnownSettings,\n    ...timelapsePhotoModeKnownSettings,\n    ...nightlapseModeKnownSettings,\n    ...photoNightModeKnownSettings,\n    ...photoBurstModeKnownSettings,\n    ...photoSingleModeKnownSettings,\n    ...generalSettings,\n];\n","import Battery20Icon from '@mui/icons-material/Battery20';\nimport Battery60Icon from '@mui/icons-material/Battery60';\nimport BatteryAlertIcon from '@mui/icons-material/BatteryAlert';\nimport BatteryFullIcon from '@mui/icons-material/BatteryFull';\nimport { IconButton, Typography } from '@mui/material';\n\ninterface IProps {\n    batteryPercentage: number;\n    batteryLevelBars: number;\n}\n\nfunction getIconByLevelBar(levelBar: number): JSX.Element {\n    // camera returned values defined in statusInternalBatteryLevel2\n    switch (levelBar) {\n        case 0:\n            return <BatteryAlertIcon />;\n        case 1:\n            return <Battery20Icon />;\n        case 2:\n            return <Battery60Icon />;\n        case 3:\n            return <BatteryFullIcon />;\n        default:\n            return <BatteryAlertIcon />;\n    }\n}\n\nconst BatteryPercentageIcon: React.FC<IProps> = (props) => {\n    const { batteryPercentage, batteryLevelBars } = props;\n    const icon = getIconByLevelBar(batteryLevelBars);\n\n    return (\n        <IconButton>\n            <Typography variant=\"body1\">{batteryPercentage}%</Typography>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport default BatteryPercentageIcon;\n","import { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { RootState } from 'store/store';\nimport { functionQueue } from 'utilities/functionQueue';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { SettingMetadata } from '../goproSettingsMetadata';\n\ntype CommandData = number[];\nexport async function sendSettingCommand(commandData: CommandData) {\n    await functionQueue(async () => {\n        const { characteristics } = bluetoothDeviceState;\n        if (!characteristics) throw new Error('no characteristics');\n        const { settingsCharacteristic } = characteristics;\n        await settingsCharacteristic.writeValue(new Uint8Array(commandData));\n    }, sendSettingCommand);\n}\n\nexport const setSettingValueCommand = createAsyncThunk<void, { setting: SettingMetadata; valueId: number }, { state: RootState }>('settingsCommands/setSettingValue', async (props) => {\n    const commandData: number[] = [];\n    commandData.push(props.setting.length + 2);\n    commandData.push(props.setting.id);\n    commandData.push(props.setting.length);\n    for (let i = 0; i < props.setting.length; i++) {\n        // eslint-disable-next-line no-bitwise\n        commandData.push((props.valueId >> (i * 8)) & 0xff);\n    }\n    await sendSettingCommand(commandData);\n});\n","import { useState } from 'react';\nimport { setSettingValueCommand } from 'store/goproBluetoothServiceActions/commands/settingsCommands';\nimport { SettingMetadata, videoModeKnownSettings } from 'store/goproBluetoothServiceActions/goproSettingsMetadata';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport { Container, Dialog, DialogTitle, FormControl, InputLabel, MenuItem, Paper, Select, SelectChangeEvent } from '@mui/material';\n\nconst useStyles = makeStyles()({\n    temp: {\n        display: 'flex',\n    },\n});\n\nconst SettingsPreview: React.FC = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const handleCloseModal = () => setIsModalOpen(false);\n    const handleOpenModal = () => setIsModalOpen(true);\n    const [previewElevation, setPreviewElevation] = useState(1);\n    useStyles();\n    return (\n        <>\n            <SettingsPreviewModal isOpen={isModalOpen} onClose={handleCloseModal} settings={videoModeKnownSettings} />\n            <Container maxWidth=\"sm\" sx={{ width: 'fit-content', minWidth: '40vw' }}>\n                <Paper elevation={previewElevation} onMouseOver={() => setPreviewElevation(3)} onMouseOut={() => setPreviewElevation(1)} onClick={handleOpenModal}>\n                    <p style={{ textAlign: 'center' }}>\n                        2.7K|60|W\n                        <br />\n                        PT, ICON, ICON\n                    </p>\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\ninterface IPropss {\n    isOpen: boolean;\n    onClose: () => void;\n    settings: SettingMetadata[];\n}\n\nconst SettingsPreviewModal: React.FC<IPropss> = (props) => {\n    const { isOpen, onClose, settings } = props;\n    return (\n        <>\n            <Dialog open={isOpen} onClose={onClose}>\n                <DialogTitle>Change current mode settings</DialogTitle>\n                {settings.map((setting) => (\n                    <SingleSetting key={setting.id} setting={setting} />\n                ))}\n                <div>actual view todo</div>\n            </Dialog>\n        </>\n    );\n};\n\nexport default SettingsPreview;\n\ninterface IProps {\n    setting: SettingMetadata;\n}\n\nconst SingleSetting: React.FC<IProps> = (props) => {\n    const dispatch = useAppDispatch();\n    const { setting } = props;\n    const currentSettingValue = useAppSelector((state) => state.goproSettingsReducer.settings[setting.id]);\n\n    const handleChange = (event: SelectChangeEvent) => {\n        const selectedSettingValue = parseInt(event.target.value, 10);\n        dispatch(setSettingValueCommand({ setting, valueId: selectedSettingValue }));\n    };\n    useStyles();\n\n    if (!currentSettingValue) return <div>something went wrong... known setting missing</div>;\n    return (\n        <>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                <InputLabel id=\"demo-simple-select-standard-label\">{setting.label}</InputLabel>\n                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={currentSettingValue.value.toString()} onChange={handleChange} label={setting.label}>\n                    {setting.values.map((value) => (\n                        <MenuItem key={value.id} value={value.id}>\n                            {value.label}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </>\n    );\n};\n","import {\n    apControlWiFiApOffCommand,\n    apControlWiFiApOnCommand,\n    legacyPresetsLoadGroupMultishotCommand,\n    legacyPresetsLoadGroupPhotoCommand,\n    legacyPresetsLoadGroupVideoCommand,\n    setShutterOffCommand,\n    setShutterOnCommand,\n    sleepCommand,\n} from 'store/goproBluetoothServiceActions/commands/commands';\nimport { getSettingsCommand, getStatusesCommand } from 'store/goproBluetoothServiceActions/commands/queryCommands';\nimport { settingsCurrentMode92 } from 'store/goproBluetoothServiceActions/goproSettingsMetadata';\nimport {\n    statusApState69,\n    statusEncodingActive10,\n    statusInternalBatteryLevel2,\n    statusInternalBatteryPercentage70,\n    statusRemainingPhotos34,\n    statusRemainingVideoTime35,\n    statusVideoProgressCounter13,\n} from 'store/goproBluetoothServiceActions/goproStatusMetadata';\nimport { SettingValue } from 'store/goproSettingsSlice';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\nimport RecordInactiveIcon from '@mui/icons-material/RadioButtonChecked';\nimport SdStorageIcon from '@mui/icons-material/SdStorage';\n// import SignalWifi0BarIcon from '@mui/icons-material/SignalWifi0Bar';\n// import SignalWifi1BarIcon from '@mui/icons-material/SignalWifi1Bar';\n// import SignalWifi2BarIcon from '@mui/icons-material/SignalWifi2Bar';\n// import SignalWifi3BarIcon from '@mui/icons-material/SignalWifi3Bar';\n// import SignalWifi4BarIcon from '@mui/icons-material/SignalWifi4Bar';\nimport SignalWifiOffIcon from '@mui/icons-material/SignalWifiOff';\nimport TimelapseVideoIcon from '@mui/icons-material/SwitchVideo';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport WifiIcon from '@mui/icons-material/Wifi';\nimport { Button, Container, IconButton, Paper, Typography } from '@mui/material';\n\nimport BatteryPercentageIcon from './BatteryPercentageIcon';\nimport SettingsPreview from './SettingsPreview';\n\nconst useStyles = makeStyles()({\n    pageWrapper: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '1rem',\n        marginBottom: '1rem',\n    },\n    topControls: {\n        width: '100%',\n    },\n    bottomControls: {\n        width: '100%',\n    },\n    bottomCenteredButtons: {\n        width: '100%',\n        alignSelf: 'flex-end',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        flexDirection: 'row',\n    },\n    alignLeftToRight: {\n        display: 'flex',\n    },\n    button: {\n        margin: '0.5rem',\n    },\n    recordButton: {\n        margin: '0.5rem',\n        '& svg': {\n            fontSize: '5rem',\n        },\n    },\n    floatLeft: {\n        flex: 1,\n    },\n    floatRight: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nenum DisplayModeGroup {\n    video = 'Video',\n    photo = 'Photo',\n    timeLapse = 'Time Lapse',\n}\n\nfunction getCurrentModeGroup(settingCurrentMode: SettingValue) {\n    if (!settingCurrentMode) return DisplayModeGroup.video;\n    switch (settingCurrentMode.value) {\n        case 0xc:\n        case 0xf:\n            return DisplayModeGroup.video;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n            return DisplayModeGroup.photo;\n        case 0x18:\n        case 0xd:\n        case 0x14:\n        case 0x15:\n            return DisplayModeGroup.timeLapse;\n        default:\n            return DisplayModeGroup.video;\n    }\n}\n\n// TODO split this component\nconst MainModeView: React.FC = () => {\n    const { classes } = useStyles();\n    const statuses = useAppSelector((state) => state.goproSettingsReducer.statuses);\n    const settingCurrentMode = useAppSelector((state) => state.goproSettingsReducer.settings[settingsCurrentMode92.id]);\n    const settingCurrentCategory = getCurrentModeGroup(settingCurrentMode);\n    const deviceName = useAppSelector((state) => state.goproBluetoothReducer.deviceName);\n    const isWifiApEnabled = statuses[statusApState69.id] === 1;\n    const batteryPercentage = statuses[statusInternalBatteryPercentage70.id] as number;\n    const batteryLevelBars = statuses[statusInternalBatteryLevel2.id] as number;\n    // TODO sd card icon, display it's status statusSdStatus33\n    // TODO remaining space KB in sd card statusRemainingSpace54\n    const videoRemainingTime = statuses[statusRemainingVideoTime35.id] as number;\n    const photoRemainingTime = statuses[statusRemainingPhotos34.id] as number;\n    const isVideoMode = settingCurrentCategory !== DisplayModeGroup.photo;\n    const videoRemainingMinutes = Math.floor(videoRemainingTime / 60) % 60;\n    const videoRemainingHours = Math.floor(videoRemainingTime / 60 / 60);\n    const storageRemainingTimeText = isVideoMode ? `${videoRemainingHours}:${videoRemainingMinutes}` : `${photoRemainingTime <= 999 ? photoRemainingTime : '999+'}`;\n    const isShutterActive = statuses[statusEncodingActive10.id] === 1;\n    const currentRecordingTime = statuses[statusVideoProgressCounter13.id] as number;\n    const currentRecordingMinutes = Math.floor(currentRecordingTime / 60);\n    const currentRecordingSeconds = currentRecordingTime % 60;\n    const dispatch = useAppDispatch();\n    const handlePowerButtonClick = () => {\n        dispatch(sleepCommand());\n    };\n    const handleWiFiButtonClick = () => {\n        if (isWifiApEnabled) {\n            dispatch(apControlWiFiApOffCommand());\n        } else {\n            dispatch(apControlWiFiApOnCommand());\n        }\n    };\n    const handlePhotoModeButtonClick = () => {\n        dispatch(legacyPresetsLoadGroupPhotoCommand());\n    };\n    const handleVideoModeButtonClick = () => {\n        dispatch(legacyPresetsLoadGroupVideoCommand());\n    };\n    const handleTimelapseModeButtonClick = () => {\n        dispatch(legacyPresetsLoadGroupMultishotCommand());\n    };\n    const handleShutterButtonClick = () => {\n        if (isShutterActive) {\n            dispatch(setShutterOffCommand());\n        } else {\n            dispatch(setShutterOnCommand());\n        }\n    };\n\n    return (\n        <>\n            <Container maxWidth=\"sm\" sx={{ display: 'flex', flexGrow: 1 }}>\n                <Paper className={classes.pageWrapper}>\n                    <div className={classes.topControls}>\n                        <br />\n                        <Container sx={{ width: 'fit-content' }}>\n                            <Paper sx={{ padding: '0.4em' }} elevation={2}>\n                                <Typography variant=\"h4\">{deviceName}</Typography>\n                            </Paper>\n                            <IconButton onClick={handlePowerButtonClick}>\n                                <PowerSettingsNewIcon />\n                            </IconButton>\n                            <IconButton onClick={handleWiFiButtonClick}>{isWifiApEnabled ? <WifiIcon /> : <SignalWifiOffIcon />}</IconButton>\n                            <IconButton>\n                                <SdStorageIcon />\n                                <Typography variant=\"body1\">{storageRemainingTimeText}</Typography>\n                            </IconButton>\n                            <BatteryPercentageIcon batteryPercentage={batteryPercentage} batteryLevelBars={batteryLevelBars} />\n                            <Button onClick={() => dispatch(getSettingsCommand())}>settings dump</Button>\n                            <Button onClick={() => dispatch(getStatusesCommand())}>statuses dump</Button>\n                            <p>Mode: {settingCurrentCategory}</p>\n                        </Container>\n                    </div>\n                    <div className={classes.bottomControls}>\n                        <SettingsPreview />\n                        <div className={classes.bottomCenteredButtons}>\n                            <Button\n                                onClick={handleTimelapseModeButtonClick}\n                                className={classes.button}\n                                aria-label=\"Timelapse mode\"\n                                color=\"primary\"\n                                variant={settingCurrentCategory === DisplayModeGroup.timeLapse ? 'text' : 'outlined'}\n                            >\n                                <TimelapseVideoIcon />\n                            </Button>\n\n                            <Button\n                                onClick={handleVideoModeButtonClick}\n                                className={classes.button}\n                                aria-label=\"Video mode\"\n                                color=\"primary\"\n                                variant={settingCurrentCategory === DisplayModeGroup.video ? 'text' : 'outlined'}\n                            >\n                                <VideocamIcon />\n                            </Button>\n                            <Button\n                                onClick={handlePhotoModeButtonClick}\n                                className={classes.button}\n                                aria-label=\"Photo mode\"\n                                color=\"primary\"\n                                variant={settingCurrentCategory === DisplayModeGroup.photo ? 'text' : 'outlined'}\n                            >\n                                <PhotoCameraIcon />\n                            </Button>\n                        </div>\n                        <div className={classes.alignLeftToRight}>\n                            <div className={classes.floatLeft} />\n                            <div className={classes.recordButton}>\n                                <IconButton onClick={handleShutterButtonClick} aria-label=\"Record button\" color=\"error\">\n                                    {isShutterActive ? <FiberManualRecordIcon /> : <RecordInactiveIcon />}\n                                </IconButton>\n                            </div>\n                            <div className={classes.floatRight}>\n                                {isShutterActive && (\n                                    <Typography variant=\"h6\">\n                                        {currentRecordingMinutes.toLocaleString(undefined, { minimumIntegerDigits: 2 })}:\n                                        {currentRecordingSeconds.toLocaleString(undefined, { minimumIntegerDigits: 2 })}\n                                    </Typography>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\nexport default MainModeView;\n","import { ConnectToGoProView } from 'components/contentPages/ConnectToGoProPage';\nimport { ErrorPage } from 'components/contentPages/ErrorPage';\nimport { SearchForGoProView } from 'components/contentPages/SearchForGoProPage';\nimport { Header } from 'components/Header';\nimport MainModeView from 'components/MainModeView';\nimport React from 'react';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport { useAppSelector } from './store/hooks';\n\nconst useStyles = makeStyles()({\n    flexContent: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        maxHeight: '-webkit-fill-available',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nconst RenderContent: React.FC = () => {\n    const isDeviceSelected = useAppSelector((state) => state.goproBluetoothReducer.isDeviceSelected);\n    const isGattConnected = useAppSelector((state) => state.goproBluetoothReducer.isGattConnected);\n    if (window.location.protocol !== 'https:') return <ErrorPage errorTitle=\"Bluetooth requires https\" errorDescription=\"Web Bluetooth will only work on https pages\" />;\n    if (!('bluetooth' in navigator)) return <ErrorPage errorTitle=\"Bluetooth not supported\" errorDescription=\"Your browser does not support bluetooth. https://caniuse.com/web-bluetooth\" />;\n    if (!isDeviceSelected) return <SearchForGoProView />;\n    if (!isGattConnected) return <ConnectToGoProView />;\n    return <MainModeView />;\n};\n\nconst App: React.FC = () => {\n    const { classes } = useStyles();\n    return (\n        <div className={classes.flexContent}>\n            <Header />\n            <RenderContent />\n        </div>\n    );\n};\n\nexport default App;\n","import { ServiceWorkerContainer } from 'components/pwa/ServiceWorkerContainer';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { GlobalStyles } from 'tss-react';\n\nimport { ThemeProvider, useTheme } from '@mui/material';\n\nimport { store } from './store/store';\nimport App from './App';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const AppProvider: React.FC = () => {\n    const theme = useTheme();\n    return (\n        <Provider store={store}>\n            <GlobalStyles\n                styles={{\n                    body: {\n                        margin: 0,\n                        padding: 0,\n                    },\n                }}\n            />\n            <ThemeProvider theme={theme}>\n                <ServiceWorkerContainer />\n                <ToastContainer />\n                <App />\n            </ThemeProvider>\n        </Provider>\n    );\n};\n","/// <reference types=\"vite/client\" />\n/// <reference types=\"vite-plugin-pwa/client\" />\n\nimport { AppProvider } from 'AppProvider';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n"],"names":["makeStyles","withStyles","createMakeAndWithStyles","useTheme","useStyles","flexContent","display","flexDirection","ReloadToastContent","props","classes","handleReloadButton","updateServiceWorker","module","setModule","useState","then","updateCheckIntervalMS","ServiceWorkerContainer","pwaRegisterModule","useImportPwaRegisterModule","ServiceWorkerContainerSafe","offlineReady","needRefresh","useRegisterSW","immediate","onRegistered","registration","log","update","onRegisterError","error","autoClose","bluetoothDeviceState","lastQueuedPromiseArr","func","context","lastQueuedPromise","find","p","promise","Promise","resolve","push","booleanValue","id","label","statusInternalCameraPresent1","description","type","values","statusInternalBatteryLevel2","statusExternalBatteryPresent3","statusExternalBatteryLevel4","statusSystemHot6","statusSystemBusy8","statusQuickCaptureActive9","statusEncodingActive10","statusLcdLockActive11","statusVideoProgressCounter13","statusEnable17","statusState19","statusType20","statusPairTime21","statusState22","statusScanTimeMsec23","statusProvisionStatus24","statusRemoteControlVersion26","statusRemoteControlConnected27","statusPairing28","statusWlanSsid29","statusApSsid30","statusAppCount31","statusEnable32","statusSdStatus33","statusRemainingPhotos34","statusRemainingVideoTime35","statusNumGroupPhotos36","statusNumGroupVideos37","statusNumTotalPhotos38","statusNumTotalVideos39","statusDateTime40","statusOtaStatus41","statusDownloadCancelRequestPending42","statusCameraLocateActive45","statusMultiShotCountDown49","statusRemainingSpace54","statusSupported55","statusWifiBars56","statusCurrentTimeMsec57","statusNumHilights58","statusLastHilightTimeMsec59","statusNextPollMsec60","statusInContextualMenu63","statusRemainingTimelapseTime64","statusExposureSelectType65","statusExposureSelectX66","statusExposureSelectY67","statusGpsStatus68","statusApState69","statusInternalBatteryPercentage70","statusAccMicStatus74","statusDigitalZoom75","statusWirelessBand76","statusDigitalZoomActive77","statusMobileFriendlyVideo78","statusFirstTimeUse79","statusBand5ghzAvail81","statusSystemReady82","statusBattOkayForOta83","statusVideoLowTempAlert85","statusActualOrientation86","statusThermalMitigationMode87","statusZoomWhileEncoding88","statusCurrentMode89","statusLogsReady91","statusTimewarp1xActive92","statusActiveVideoPresets93","statusActivePhotoPresets94","statusActiveTimelapsePresets95","statusActivePresetsGroup96","statusActivePreset97","statusPresetModified98","statusRemainingLiveBursts99","statusNumTotalLiveBursts100","statusCaptureDelayActive101","statusMediaModMicStatus102","statusTimewarpSpeedRampActive103","statusLinuxCoreActive104","statusCameraLensType105","statusVideoHindsightCaptureActive106","statusScheduledPreset107","statusScheduledEnabled108","statusCreatingPreset109","statusMediaModStatus110","statusTurboTransfer113","allKnownStatuses","statuses","store","getState","goproSettingsReducer","isDeviceReady","unsubscribe","subscribe","commandData","characteristics","Error","commandCharacteristic","waitUntilDeviceReady","functionQueue","writeGoProPacketData","sendCommandAction","createAsyncThunk","sendCommand","_","dispatch","legacyPresetsLoadGroupVideoCommand","legacyPresetsLoadGroupPhotoCommand","legacyPresetsLoadGroupMultishotCommand","sleepCommand","getHardwareInfoCommand","setShutterOffCommand","setShutterOnCommand","apControlWiFiApOffCommand","apControlWiFiApOnCommand","openGoProGetVersionCommand","packetData","commandResponse","parseCommandResponse","responseCode","CommandResponseCode","success","invalidParameter","unknown","response","length","commandId","errorCode","parseCommandResponseCode","data","slice","CommandId","SetShutter","Sleep","APControl","GetHardwareInfo","PresetsLoadGroup","PresetsLoad","Analytics","OpenGoProGetVersion","goproBluetoothSlice","actions","getHardwareInfoResponse","parseGetHardwareInfoResponse","openGoProGetVersionResponse","majorVersion","minorVersion","parseOpenGoProGetVersionResponse","dataIndex","lengthOfModelNumber","modelNumber","Array","fill","map","lengthOfModelName","modelName","String","fromCharCode","join","lengthOfBoardType","boardType","lengthOfFirmwareVersion","firmwareVersion","lengthOfSerialNumber","serialNumber","lengthOfApSsid","apSsid","lengthOfApMacAddress","apMacAddress","lengthOfMajorVersion","reduce","acc","cur","lengthOfMinorVersion","initialState","settings","isFetching","goproSettingsSlice","createSlice","name","reducers","settingsReceived","state","action","payload","settingsRequested","settingsRequestFailed","statusesReceived","reducer","queryCharacteristic","writeValue","Uint8Array","queryResponse","parseQueryResponse","queryId","parseQueryResponseCode","statusesOrSettings","parseStatusesOrSettingsFromData","setting","readOneStatusOrSetting","value","settingId","dataLength","settingValue","QueryId","getSettingValue","getStatusValue","registerForSettingUpdates","registerForStatusUpdates","unregisterForSettingUpdates","unregisterForStatusUpdates","settingUpdate","statusUpdate","receivedSettingsReduceToKeyValue","sAcc","sCur","receivedStatusesReduceToKeyValue","status","valueLength","knownStatus","s","valueStr","v","_dispatch","_packetData","onPacket","packetDataAccumulator","messageLength","ev","characteristic","target","packet","readSinglePacket","header","isStart","catch","packetHeader","parsePacketHeader","from","buffer","headerSizeBytes","byte1","getUint8","continuationIndex","startType","byte2","byte3","subscribeToSettingsChangesCommand","settingsIds","subscribeToStatusChangesCommand","statusIds","getSettingsCommand","getStatusesCommand","requestDevice","device","navigator","bluetooth","filters","services","optionalServices","ongattserverdisconnected","undefined","gattServer","gattDisconnected","gattConnect","deviceName","gatt","connect","wifiApServicePromise","getPrimaryService","wifiApSsidCharacteristicPromise","x","getCharacteristic","wifiApPasswordCharacteristicPromise","wifiApPowerCharacteristicPromise","wifiApStateCharacteristicPromise","cqServicePromise","commandCharacteristicPromise","commandResponseCharacteristicPromise","settingsCharacteristicPromise","settingsResponseCharacteristicPromise","queryCharacteristicPromise","queryResponseCharacteristicPromise","wifiApSsidCharacteristic","wifiApPasswordCharacteristic","wifiApPowerCharacteristic","wifiApStateCharacteristic","commandResponseCharacteristic","settingsCharacteristic","settingsResponseCharacteristic","queryResponseCharacteristic","oncharacteristicvaluechanged","goproBlePacketDataReaderProvider","commandResponseReceiverProvider","startNotifications","queryResponseReceiverProvider","settingsResponseReceiverProvider","keys","chunkIndex","dataCopy","unshift","getPacketHeaderForData","chunk","splice","writeGoProPacketDataRaw","isRequestingDevice","isDeviceSelected","isGattConnected","isGattConnecting","goproBluetoothDeviceCommandsState","isCommandInAction","getHardwareInfo","openGoProVersion","extraReducers","builder","addCase","pending","fulfilled","rejected","message","goproBluetoothReducer","configureStore","devTools","useAppDispatch","useDispatch","useAppSelector","useSelector","ConnectToGoProView","currentError","my","ErrorPage","errorTitle","errorDescription","SearchForGoProView","Header","settingResolution2","settingFps3","settingFov4","settingInterval5","settingInterval6","settingLowLight8","settingProtune10","settingWhiteBalance11","settingColor12","settingIsoMax13","settingSharpness14","settingEvComp15","settingPhotoFov17","settingPhotoShutter19","settingPhotoProtune21","settingPhotoWhiteBalance22","settingPhotoColor23","settingPhotoIsoMax24","settingPhotoSharpness25","settingPhotoEvComp26","settingMultishotFov28","settingMultishotBurstRate29","settingMultishotInterval30","settingMultishotShutter31","settingMultishotInterval32","settingMultishotProtune34","settingMultishotWhiteBalance35","settingMultishotColor36","settingMultishotIsoMax37","settingMultishotSharpness38","settingMultishotEvComp39","settingTouchDisplayScreenSaver51","settingQuickCapture54","settingShutter73","settingPhotoIsoMin75","settingMultishotIsoMin76","settingStabilization78","settingMicrophone80","settingRawAudio81","settingRegionalGps83","settingRegionalLanguage84","settingVoiceControlLanguage85","settingVoiceControl86","settingBeeps87","settingTouchDisplayBrightness88","settingDefaultMode89","settingLeds91","settingsCurrentMode92","settingPhotoShutter97","settingPhotoRaw98","settingMultishotRaw99","settingIsoMin102","settingWakeOnVoice104","settingVideoCompression106","settingVideoTimer107","settingResolutionFormat108","settingPhotoSuperPhoto109","settingSpeed111","settingTouchDisplayLandscapeLock112","videoModeKnownSettings","loopingModeKnownSettings","timewarpModeKnownSettings","timelapseVideoModeKnownSettings","timelapsePhotoModeKnownSettings","nightlapseModeKnownSettings","photoNightModeKnownSettings","photoBurstModeKnownSettings","photoSingleModeKnownSettings","generalSettings","levelBar","BatteryAlertIcon","Battery20Icon","Battery60Icon","BatteryFullIcon","BatteryPercentageIcon","batteryPercentage","batteryLevelBars","icon","getIconByLevelBar","sendSettingCommand","setSettingValueCommand","i","valueId","temp","SettingsPreview","isModalOpen","setIsModalOpen","handleCloseModal","handleOpenModal","previewElevation","setPreviewElevation","width","minWidth","textAlign","SettingsPreviewModal","isOpen","onClose","SingleSetting","currentSettingValue","handleChange","event","selectedSettingValue","parseInt","m","toString","pageWrapper","flexGrow","justifyContent","alignItems","marginTop","marginBottom","topControls","bottomControls","bottomCenteredButtons","alignSelf","alignLeftToRight","button","margin","recordButton","fontSize","floatLeft","flex","floatRight","DisplayModeGroup","settingCurrentMode","video","photo","timeLapse","MainModeView","settingCurrentCategory","getCurrentModeGroup","isWifiApEnabled","videoRemainingTime","photoRemainingTime","isVideoMode","videoRemainingMinutes","Math","floor","videoRemainingHours","storageRemainingTimeText","isShutterActive","currentRecordingTime","currentRecordingMinutes","currentRecordingSeconds","handlePowerButtonClick","handleWiFiButtonClick","handlePhotoModeButtonClick","handleVideoModeButtonClick","handleTimelapseModeButtonClick","handleShutterButtonClick","padding","PowerSettingsNewIcon","WifiIcon","SignalWifiOffIcon","SdStorageIcon","TimelapseVideoIcon","VideocamIcon","PhotoCameraIcon","FiberManualRecordIcon","RecordInactiveIcon","toLocaleString","minimumIntegerDigits","position","height","maxHeight","RenderContent","window","location","protocol","App","AppProvider","theme","GlobalStyles","body","ReactDOM","render","document","getElementById"],"mappings":"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"}