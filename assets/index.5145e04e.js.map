{"version":3,"file":"index.5145e04e.js","sources":["../../vite/modulepreload-polyfill","../../src/store/goproBleServiceState.ts","../../src/store/packetParsing/goproPacketReaderCommand.ts","../../src/store/goproBluetoothServiceActions/goproStatusMetadata.ts","../../src/store/goproSettingsSlice.ts","../../src/store/packetParsing/goproPacketReaderQuery.ts","../../src/store/packetParsing/goproPacketReaderSetting.ts","../../src/store/packetParsing/goproPacketReader.ts","../../src/store/goproBluetoothServiceActions/goproBluetoothServiceActions.ts","../../src/store/goproBluetoothSlice.ts","../../src/store/store.ts","../../src/store/hooks.ts","../../src/theme/makeStyles.ts","../../src/store/goproBluetoothServiceActions/goproSettingsMetadata.ts","../../src/store/goproBluetoothServiceActions/goproSettingsActions.ts","../../src/components/SettingsPreview.tsx","../../src/components/MainModeView.tsx","../../src/components/AllCommandsButtons.tsx","../../src/App.tsx","../../src/AppProvider.tsx","../../../../../../../@vite-plugin-pwa/virtual:pwa-register","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","interface BluetoothDeviceState {\n    device?: BluetoothDevice;\n    gattServer?: BluetoothRemoteGATTServer;\n    characteristics?: {\n        wifiApSsidCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApPasswordCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApPowerCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApStateCharacteristic: BluetoothRemoteGATTCharacteristic;\n        commandCharacteristic: BluetoothRemoteGATTCharacteristic;\n        commandResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n        settingsCharacteristic: BluetoothRemoteGATTCharacteristic;\n        settingsResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n        queryCharacteristic: BluetoothRemoteGATTCharacteristic;\n        queryResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n    };\n}\n\nexport const bluetoothDeviceState: BluetoothDeviceState = {};\n","import { GetHardwareInfoState, goproBluetoothSlice, goproGetHardwareInfoCommand, openGoProGetVersion, OpenGoProVersionState } from 'store/goproBluetoothSlice';\nimport { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\nexport function commandResponseReceiverProvider(dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    return (packetData: PacketData) => {\n        // TODO parse actual command messages and update state\n        const commandResponse = parseCommandResponse(packetData);\n        dispatchCommandResponse(dispatch, commandResponse);\n    };\n}\n\nfunction parseCommandResponseCode(responseCode: number) {\n    switch (responseCode) {\n        case 0:\n            return CommandResponseCode.success;\n        case 1:\n            return CommandResponseCode.error;\n        case 2:\n            return CommandResponseCode.invalidParameter;\n        default:\n            return CommandResponseCode.unknown;\n    }\n}\n\nenum CommandResponseCode {\n    unknown,\n    success,\n    error,\n    invalidParameter,\n}\n\ninterface CommandResponse {\n    commandId: number;\n    errorCode: CommandResponseCode;\n    data: number[];\n}\n\nfunction parseCommandResponse(response: PacketData): CommandResponse {\n    if (response.length < 2) throw new Error('command response too short');\n    const commandId = response[0];\n    const errorCode = parseCommandResponseCode(response[1]);\n    const data = response.slice(2);\n    return {\n        commandId,\n        errorCode,\n        data,\n    };\n}\n\nenum CommandId {\n    SetShutter = 0x01,\n    Sleep = 0x05,\n    APControl = 0x17,\n    GetHardwareInfo = 0x3c,\n    PresetsLoadGroup = 0x3e,\n    PresetsLoad = 0x40,\n    Analytics = 0x50,\n    OpenGoProGetVersion = 0x51,\n}\n\nfunction dispatchCommandResponse(dispatch: ThunkDispatch<RootState, unknown, AnyAction>, commandResponse: CommandResponse) {\n    // TODO handle regular command response?\n    // At least show error toast on failure?\n    switch (commandResponse.commandId) {\n        case CommandId.GetHardwareInfo: {\n            if (commandResponse.errorCode === CommandResponseCode.error) {\n                // Error occured during get hardware info? Sometimes this happens while GoPro is in the middle of booting up.\n                dispatch(goproGetHardwareInfoCommand());\n                break;\n            }\n            dispatch(goproBluetoothSlice.actions.getHardwareInfoResponse(parseGetHardwareInfoResponse(commandResponse)));\n            break;\n        }\n        case CommandId.OpenGoProGetVersion: {\n            if (commandResponse.errorCode === CommandResponseCode.error) {\n                // Error occured during open GoPro? Sometimes this happens while GoPro is in the middle of booting up.\n                dispatch(openGoProGetVersion());\n                break;\n            }\n            if (commandResponse.errorCode === CommandResponseCode.invalidParameter) {\n                // Open GoPro unsupported\n                // Likely device older than GoPro Hero 9\n                dispatch(goproBluetoothSlice.actions.openGoProGetVersionResponse({ majorVersion: 0, minorVersion: 0 }));\n                break;\n            }\n            dispatch(goproBluetoothSlice.actions.openGoProGetVersionResponse(parseOpenGoProGetVersionResponse(commandResponse)));\n            break;\n        }\n        default:\n            break;\n    }\n}\n\nfunction parseGetHardwareInfoResponse(commandResponse: CommandResponse): GetHardwareInfoState {\n    const { data } = commandResponse;\n    let dataIndex = 0;\n    // model number\n    const lengthOfModelNumber = data[dataIndex++];\n    const modelNumber = new Array(lengthOfModelNumber).fill(0).map(() => data[dataIndex++]);\n    // model name\n    const lengthOfModelName = data[dataIndex++];\n    const modelName = new Array(lengthOfModelName)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // board type\n    const lengthOfBoardType = data[dataIndex++];\n    const boardType = new Array(lengthOfBoardType)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // firmware version\n    const lengthOfFirmwareVersion = data[dataIndex++];\n    const firmwareVersion = new Array(lengthOfFirmwareVersion)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // serial number\n    const lengthOfSerialNumber = data[dataIndex++];\n    const serialNumber = new Array(lengthOfSerialNumber)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // AP SSID\n    const lengthOfApSsid = data[dataIndex++];\n    const apSsid = new Array(lengthOfApSsid)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    // AP MAC Address\n    const lengthOfApMacAddress = data[dataIndex++];\n    const apMacAddress = new Array(lengthOfApMacAddress)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++]))\n        .join('');\n    return {\n        modelNumber,\n        modelName,\n        boardType,\n        firmwareVersion,\n        serialNumber,\n        apSsid,\n        apMacAddress,\n    };\n}\n\nfunction parseOpenGoProGetVersionResponse(commandResponse: CommandResponse): OpenGoProVersionState {\n    const { data } = commandResponse;\n    let dataIndex = 0;\n    // Major version\n    const lengthOfMajorVersion = data[dataIndex++];\n    const majorVersion = new Array(lengthOfMajorVersion)\n        .fill(0)\n        .map(() => data[dataIndex++])\n        // eslint-disable-next-line no-bitwise\n        .reduce((acc, cur) => (acc << 8) + cur);\n    // Minor version\n    const lengthOfMinorVersion = data[dataIndex++];\n    const minorVersion = new Array(lengthOfMinorVersion)\n        .fill(0)\n        .map(() => data[dataIndex++])\n        // eslint-disable-next-line no-bitwise\n        .reduce((acc, cur) => (acc << 8) + cur);\n    return {\n        majorVersion,\n        minorVersion,\n    };\n}\n","export interface StatusValueMetadata {\n    id: number;\n    label: string;\n}\n\nexport interface StatusMetadata {\n    id: number;\n    label: string;\n    description: string;\n    type: string;\n    values: StatusValueMetadata[];\n}\n\nconst booleanValue: StatusValueMetadata[] = [\n    { id: 0, label: 'False' },\n    { id: 1, label: 'True' },\n];\n\nexport const statusInternalCameraPresent1: StatusMetadata = {\n    id: 1,\n    label: 'Internal camera present',\n    description: 'Is the internal camera present?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusInternalBatteryLevel2: StatusMetadata = {\n    id: 2,\n    label: 'Internal battery level',\n    description: 'Rough approximation of internal battery level in bars',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Zero',\n        },\n        {\n            id: 1,\n            label: 'One',\n        },\n        {\n            id: 2,\n            label: 'Two',\n        },\n        {\n            id: 3,\n            label: 'Three',\n        },\n    ],\n};\n\nexport const statusExternalBatteryPresent3: StatusMetadata = {\n    id: 3,\n    label: 'External battery present',\n    description: 'Is an external battery connected?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusExternalBatteryLevel4: StatusMetadata = {\n    id: 4,\n    label: 'External battery level',\n    description: 'External battery power level in percent',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\n\nexport const statusSystemHot6: StatusMetadata = {\n    id: 6,\n    label: 'System hot',\n    description: 'Is the system currently overheating?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusSystemBusy8: StatusMetadata = {\n    id: 8,\n    label: 'System busy',\n    description: 'Is the camera busy?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusQuickCaptureActive9: StatusMetadata = {\n    id: 9,\n    label: 'Quick capture active',\n    description: 'Is Quick Capture feature enabled?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusEncodingActive10: StatusMetadata = {\n    id: 10,\n    label: 'Encoding active',\n    description: 'Is the system encoding right now?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusLcdLockActive11: StatusMetadata = {\n    id: 11,\n    label: 'Lcd lock active',\n    description: 'Is LCD lock active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusVideoProgressCounter13: StatusMetadata = {\n    id: 13,\n    label: 'Video progress counter',\n    description: 'When encoding video, this is the duration (seconds) of the video so far; 0 otherwise',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: '0s',\n        },\n        {\n            id: 59,\n            label: '59s',\n        },\n    ],\n};\nexport const statusEnable17: StatusMetadata = { id: 17, label: 'Enable', description: 'Are Wireless Connections enabled?', type: 'boolean', values: booleanValue };\nexport const statusState19: StatusMetadata = {\n    id: 19,\n    label: 'State',\n    description: 'The pairing state of the camera',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Success',\n        },\n        {\n            id: 1,\n            label: 'In Progress',\n        },\n        {\n            id: 2,\n            label: 'Failed',\n        },\n        {\n            id: 3,\n            label: 'Stopped',\n        },\n    ],\n};\nexport const statusType20: StatusMetadata = {\n    id: 20,\n    label: 'Type',\n    description: 'The last type of pairing that the camera was engaged in',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Not Pairing',\n        },\n        {\n            id: 1,\n            label: 'Pairing App',\n        },\n        {\n            id: 2,\n            label: 'Pairing Remote Control',\n        },\n        {\n            id: 3,\n            label: 'Pairing Bluetooth Device',\n        },\n    ],\n};\nexport const statusPairTime21: StatusMetadata = {\n    id: 21,\n    label: 'Pair time',\n    description: 'Time (milliseconds) since boot of last successful pairing complete action',\n    type: 'integer',\n    values: [],\n};\nexport const statusState22: StatusMetadata = {\n    id: 22,\n    label: 'State',\n    description: 'State of current scan for WiFi Access Points. Appears to only change for CAH-related scans',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Never started' },\n        { id: 1, label: 'Started' },\n        { id: 2, label: 'Aborted' },\n        { id: 3, label: 'Canceled' },\n        { id: 4, label: 'Completed' },\n    ],\n};\nexport const statusScanTimeMsec23: StatusMetadata = {\n    id: 23,\n    label: 'Scan time msec',\n    description: 'The time, in milliseconds since boot that the WiFi Access Point scan completed',\n    type: 'integer',\n    values: [],\n};\nexport const statusProvisionStatus24: StatusMetadata = {\n    id: 24,\n    label: 'Provision status',\n    description: 'WiFi AP provisioning state',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Never started' },\n        { id: 1, label: 'Started' },\n        { id: 2, label: 'Aborted' },\n        { id: 3, label: 'Canceled' },\n        { id: 4, label: 'Completed' },\n    ],\n};\nexport const statusRemoteControlVersion26: StatusMetadata = {\n    id: 26,\n    label: 'Remote control version',\n    description: 'Wireless remote control version',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemoteControlConnected27: StatusMetadata = {\n    id: 27,\n    label: 'Remote control connected',\n    description: 'Is a wireless remote control connected?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusPairing28: StatusMetadata = {\n    id: 28,\n    label: 'Pairing',\n    description: 'Wireless Pairing State',\n    type: 'integer',\n    values: [],\n};\nexport const statusWlanSsid29: StatusMetadata = {\n    id: 29,\n    label: 'Wlan ssid',\n    description: 'Provisioned WIFI AP SSID. On BLE connection, value is big-endian byte-encoded int',\n    type: 'string',\n    values: [],\n};\nexport const statusApSsid30: StatusMetadata = {\n    id: 30,\n    label: 'Ap ssid',\n    description: `Camera's WIFI SSID. On BLE connection, value is big-endian byte-encoded int`,\n    type: 'string',\n    values: [],\n};\nexport const statusAppCount31: StatusMetadata = {\n    id: 31,\n    label: 'App count',\n    description: 'The number of wireless devices connected to the camera',\n    type: 'integer',\n    values: [],\n};\nexport const statusEnable32: StatusMetadata = { id: 32, label: 'Enable', description: 'Is Preview Stream enabled?', type: 'boolean', values: booleanValue };\nexport const statusSdStatus33: StatusMetadata = {\n    id: 33,\n    label: 'Sd status',\n    description: 'Primary Storage Status',\n    type: 'integer',\n    values: [\n        { id: -1, label: 'Unknown' },\n        { id: 0, label: 'OK' },\n        { id: 1, label: 'SD Card Full' },\n        { id: 2, label: 'SD Card Removed' },\n        { id: 3, label: 'SD Card Format Error' },\n        { id: 4, label: 'SD Card Busy' },\n        { id: 8, label: 'SD Card Swapped' },\n    ],\n};\nexport const statusRemainingPhotos34: StatusMetadata = {\n    id: 34,\n    label: 'Remaining photos',\n    description: 'How many photos can be taken before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingVideoTime35: StatusMetadata = {\n    id: 35,\n    label: 'Remaining video time',\n    description: 'How many minutes of video can be captured with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumGroupPhotos36: StatusMetadata = {\n    id: 36,\n    label: 'Num group photos',\n    description: 'How many group photos can be taken with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumGroupVideos37: StatusMetadata = {\n    id: 37,\n    label: 'Num group videos',\n    description: 'Total number of group videos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalPhotos38: StatusMetadata = {\n    id: 38,\n    label: 'Num total photos',\n    description: 'Total number of photos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalVideos39: StatusMetadata = {\n    id: 39,\n    label: 'Num total videos',\n    description: 'Total number of videos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusDateTime40: StatusMetadata = {\n    id: 40,\n    label: 'Date time',\n    description: 'Current date/time (format: %YY%MM%DD%HH%MM%SS, all values in hex)',\n    type: 'string',\n    values: [],\n};\nexport const statusOtaStatus41: StatusMetadata = {\n    id: 41,\n    label: 'Ota status',\n    description: 'The current status of Over The Air (OTA) update',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Idle' },\n        { id: 1, label: 'Downloading' },\n        { id: 2, label: 'Verifying' },\n        { id: 3, label: 'Download Failed' },\n        { id: 4, label: 'Verify Failed' },\n        { id: 5, label: 'Ready' },\n        { id: 6, label: 'GoPro App: Downloading' },\n        { id: 7, label: 'GoPro App: Verifying' },\n        { id: 8, label: 'GoPro App: Download Failed' },\n        { id: 9, label: 'GoPro App: Verify Failed' },\n        { id: 10, label: 'GoPro App: Ready' },\n    ],\n};\nexport const statusDownloadCancelRequestPending42: StatusMetadata = {\n    id: 42,\n    label: 'Download cancel request pending',\n    description: 'Is there a pending request to cancel a firmware update download?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\n/*\nwhen USB connected:\n43: 7\n44: 255\n */\n\nexport const statusCameraLocateActive45: StatusMetadata = {\n    id: 45,\n    label: 'Camera locate active',\n    description: 'Is locate camera feature active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMultiShotCountDown49: StatusMetadata = {\n    id: 49,\n    label: 'Multi shot count down',\n    description: 'The current timelapse interval countdown value (e.g. 5...4...3...2...1...)',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingSpace54: StatusMetadata = {\n    id: 54,\n    label: 'Remaining space',\n    description: 'Remaining space on the sdcard in Kilobytes',\n    type: 'integer',\n    values: [],\n};\nexport const statusSupported55: StatusMetadata = {\n    id: 55,\n    label: 'Supported',\n    description: 'Is preview stream supported in current recording/flatmode/secondary-stream?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusWifiBars56: StatusMetadata = {\n    id: 56,\n    label: 'Wifi bars',\n    description: 'WiFi signal strength in bars',\n    type: 'integer',\n    values: [],\n};\nexport const statusCurrentTimeMsec57: StatusMetadata = {\n    id: 57,\n    label: 'Current time msec',\n    description: 'System time in milliseconds since system was booted',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumHilights58: StatusMetadata = {\n    id: 58,\n    label: 'Num hilights',\n    description: 'The number of hilights in encoding video (set to 0 when encoding stops)',\n    type: 'integer',\n    values: [],\n};\nexport const statusLastHilightTimeMsec59: StatusMetadata = {\n    id: 59,\n    label: 'Last hilight time msec',\n    description: 'Time since boot (msec) of most recent hilight in encoding video (set to 0 when encoding stops)',\n    type: 'integer',\n    values: [],\n};\nexport const statusNextPollMsec60: StatusMetadata = {\n    id: 60,\n    label: 'Next poll msec',\n    description: 'The min time between camera status updates (msec). Do not poll for status more often than this',\n    type: 'integer',\n    values: [],\n};\nexport const statusInContextualMenu63: StatusMetadata = {\n    id: 63,\n    label: 'In contextual menu',\n    description: 'Is the camera currently in a contextual menu (e.g. Preferences)?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusRemainingTimelapseTime64: StatusMetadata = {\n    id: 64,\n    label: 'Remaining timelapse time',\n    description: 'How many min of Timelapse video can be captured with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusExposureSelectType65: StatusMetadata = {\n    id: 65,\n    label: 'Exposure select type',\n    description: 'Liveview Exposure Select Mode',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Disabled' },\n        { id: 1, label: 'Auto' },\n        { id: 2, label: 'ISO Lock' },\n        { id: 3, label: 'Hemisphere' },\n    ],\n};\nexport const statusExposureSelectX66: StatusMetadata = {\n    id: 66,\n    label: 'Exposure select x',\n    description: 'Liveview Exposure Select: x-coordinate (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusExposureSelectY67: StatusMetadata = {\n    id: 67,\n    label: 'Exposure select y',\n    description: 'Liveview Exposure Select: y-coordinate (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusGpsStatus68: StatusMetadata = {\n    id: 68,\n    label: 'Gps status',\n    description: 'Does the camera currently have a GPS lock?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusApState69: StatusMetadata = { id: 69, label: 'Ap state', description: 'Is the WiFi radio enabled?', type: 'boolean', values: booleanValue };\nexport const statusInternalBatteryPercentage70: StatusMetadata = {\n    id: 70,\n    label: 'Internal battery percentage',\n    description: 'Internal battery level (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusAccMicStatus74: StatusMetadata = {\n    id: 74,\n    label: 'Acc mic status',\n    description: 'Microphone Accesstory status',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Microphone mod not connected' },\n        { id: 1, label: 'Microphone mod connected' },\n        { id: 2, label: 'Microphone mod connected and microphone plugged into Microphone mod' },\n    ],\n};\nexport const statusDigitalZoom75: StatusMetadata = {\n    id: 75,\n    label: 'Digital zoom',\n    description: 'Digital Zoom level (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusWirelessBand76: StatusMetadata = {\n    id: 76,\n    label: 'Wireless band',\n    description: 'Wireless Band',\n    type: 'integer',\n    values: [\n        { id: 0, label: '2.4 GHz' },\n        { id: 1, label: '5 GHz' },\n        { id: 2, label: 'Max' },\n    ],\n};\nexport const statusDigitalZoomActive77: StatusMetadata = {\n    id: 77,\n    label: 'Digital zoom active',\n    description: 'Is Digital Zoom feature available?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMobileFriendlyVideo78: StatusMetadata = {\n    id: 78,\n    label: 'Mobile friendly video',\n    description: 'Are current video settings mobile friendly? (related to video compression and frame rate)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusFirstTimeUse79: StatusMetadata = {\n    id: 79,\n    label: 'First time use',\n    description: 'Is the camera currently in First Time Use (FTU) UI flow?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusBand5ghzAvail81: StatusMetadata = { id: 81, label: 'Band 5ghz avail', description: 'Is 5GHz wireless band available?', type: 'boolean', values: booleanValue };\nexport const statusSystemReady82: StatusMetadata = {\n    id: 82,\n    label: 'System ready',\n    description: 'Is the system ready to accept commands?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusBattOkayForOta83: StatusMetadata = {\n    id: 83,\n    label: 'Batt okay for ota',\n    description: 'Is the internal battery charged sufficiently to start Over The Air (OTA) update?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusVideoLowTempAlert85: StatusMetadata = {\n    id: 85,\n    label: 'Video low temp alert',\n    description: 'Is the camera getting too cold to continue recording?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusActualOrientation86: StatusMetadata = {\n    id: 86,\n    label: 'Actual orientation',\n    description: 'The rotational orientation of the camera',\n    type: 'integer',\n    values: [\n        { id: 0, label: '0 degrees (upright)' },\n        { id: 1, label: '180 degrees (upside down)' },\n        { id: 2, label: '90 degrees (laying on right side)' },\n        { id: 3, label: '270 degrees (laying on left side)' },\n    ],\n};\nexport const statusThermalMitigationMode87: StatusMetadata = {\n    id: 87,\n    label: 'Thermal mitigation mode',\n    description: 'Can camera use high resolution/fps (based on temperature)? (HERO7 Silver/White only)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusZoomWhileEncoding88: StatusMetadata = {\n    id: 88,\n    label: 'Zoom while encoding',\n    description: 'Is this camera capable of zooming while encoding (static value based on model, not settings)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusCurrentMode89: StatusMetadata = {\n    id: 89,\n    label: 'Current mode',\n    description: 'Current flatmode ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusLogsReady91: StatusMetadata = { id: 91, label: 'Logs ready', description: 'Are system logs ready to be downloaded?', type: 'boolean', values: booleanValue };\nexport const statusTimewarp1xActive92: StatusMetadata = { id: 92, label: 'Timewarp 1x active', description: 'Is Timewarp 1x active?', type: 'boolean', values: booleanValue };\nexport const statusActiveVideoPresets93: StatusMetadata = {\n    id: 93,\n    label: 'Active video presets',\n    description: 'Current Video Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePhotoPresets94: StatusMetadata = {\n    id: 94,\n    label: 'Active photo presets',\n    description: 'Current Photo Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActiveTimelapsePresets95: StatusMetadata = {\n    id: 95,\n    label: 'Active timelapse presets',\n    description: 'Current Timelapse Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePresetsGroup96: StatusMetadata = {\n    id: 96,\n    label: 'Active presets group',\n    description: 'Current Preset Group (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePreset97: StatusMetadata = {\n    id: 97,\n    label: 'Active preset',\n    description: 'Current Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusPresetModified98: StatusMetadata = {\n    id: 98,\n    label: 'Preset modified',\n    description: 'Preset Modified Status, which contains an event ID and a preset (group) ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingLiveBursts99: StatusMetadata = {\n    id: 99,\n    label: 'Remaining live bursts',\n    description: 'How many Live Bursts can be captured before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalLiveBursts100: StatusMetadata = {\n    id: 100,\n    label: 'Num total live bursts',\n    description: 'Total number of Live Bursts on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusCaptureDelayActive101: StatusMetadata = {\n    id: 101,\n    label: 'Capture delay active',\n    description: 'Is Capture Delay currently active (i.e. counting down)?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMediaModMicStatus102: StatusMetadata = {\n    id: 102,\n    label: 'Media mod mic status',\n    description: 'Media mod State',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Media mod microphone removed' },\n        { id: 2, label: 'Media mod microphone only' },\n        { id: 3, label: 'Media mod microphone with external microphone' },\n    ],\n};\nexport const statusTimewarpSpeedRampActive103: StatusMetadata = {\n    id: 103,\n    label: 'Timewarp speed ramp active',\n    description: 'Time Warp Speed',\n    type: 'integer',\n    values: [\n        { id: 0, label: '15x' },\n        { id: 1, label: '30x' },\n        { id: 2, label: '60x' },\n        { id: 3, label: '150x' },\n        { id: 4, label: '300x' },\n        { id: 5, label: '900x' },\n        { id: 6, label: '1800x' },\n        { id: 7, label: '2x' },\n        { id: 8, label: '5x' },\n        { id: 9, label: '10x' },\n        { id: 10, label: 'Auto' },\n        { id: 11, label: '1x (realtime)' },\n        { id: 12, label: '1/2x (slow-motion)' },\n    ],\n};\nexport const statusLinuxCoreActive104: StatusMetadata = {\n    id: 104,\n    label: 'Linux core active',\n    description: `Is the system's Linux core active?`,\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusCameraLensType105: StatusMetadata = {\n    id: 105,\n    label: 'Camera lens type',\n    description: 'Camera lens type (reflects changes to setting 162)',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Default' },\n        { id: 1, label: 'Max Lens' },\n    ],\n};\nexport const statusVideoHindsightCaptureActive106: StatusMetadata = {\n    id: 106,\n    label: 'Video hindsight capture active',\n    description: 'Is Video Hindsight Capture Active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusScheduledPreset107: StatusMetadata = {\n    id: 107,\n    label: 'Scheduled preset',\n    description: 'Scheduled Capture Preset ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusScheduledEnabled108: StatusMetadata = { id: 108, label: 'Scheduled enabled', description: 'Is Scheduled Capture set?', type: 'boolean', values: booleanValue };\nexport const statusCreatingPreset109: StatusMetadata = {\n    id: 109,\n    label: 'Creating preset',\n    description: 'Is the camera in the process of creating a custom preset?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMediaModStatus110: StatusMetadata = {\n    id: 110,\n    label: 'Media mod status',\n    description: 'Media Mode Status (bitmasked)',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Display (selfie) mod: 0, HDMI: 0, Media Mod Connected: False' },\n        { id: 1, label: 'Display (selfie) mod: 0, HDMI: 0, Media Mod Connected: True' },\n        { id: 2, label: 'Display (selfie) mod: 0, HDMI: 1, Media Mod Connected: False' },\n        { id: 3, label: 'Display (selfie) mod: 0, HDMI: 1, Media Mod Connected: True' },\n        { id: 4, label: 'Display (selfie) mod: 1, HDMI: 0, Media Mod Connected: False' },\n        { id: 5, label: 'Display (selfie) mod: 1, HDMI: 0, Media Mod Connected: True' },\n        { id: 6, label: 'Display (selfie) mod: 1, HDMI: 1, Media Mod Connected: False' },\n        { id: 7, label: 'Display (selfie) mod: 1, HDMI: 1, Media Mod Connected: True' },\n    ],\n};\nexport const statusTurboTransfer113: StatusMetadata = { id: 113, label: 'Turbo transfer', description: 'Is Turbo Transfer active?', type: 'boolean', values: booleanValue };\n\nexport const allKnownStatuses: StatusMetadata[] = [\n    statusInternalCameraPresent1,\n    statusInternalBatteryLevel2,\n    statusExternalBatteryPresent3,\n    statusExternalBatteryLevel4,\n    statusSystemHot6,\n    statusSystemBusy8,\n    statusQuickCaptureActive9,\n    statusEncodingActive10,\n    statusLcdLockActive11,\n    statusVideoProgressCounter13,\n    statusEnable17,\n    statusState19,\n    statusType20,\n    statusPairTime21,\n    statusState22,\n    statusScanTimeMsec23,\n    statusProvisionStatus24,\n    statusRemoteControlVersion26,\n    statusRemoteControlConnected27,\n    statusPairing28,\n    statusWlanSsid29,\n    statusApSsid30,\n    statusAppCount31,\n    statusEnable32,\n    statusSdStatus33,\n    statusRemainingPhotos34,\n    statusRemainingVideoTime35,\n    statusNumGroupPhotos36,\n    statusNumGroupVideos37,\n    statusNumTotalPhotos38,\n    statusNumTotalVideos39,\n    statusDateTime40,\n    statusOtaStatus41,\n    statusDownloadCancelRequestPending42,\n    statusCameraLocateActive45,\n    statusMultiShotCountDown49,\n    statusRemainingSpace54,\n    statusSupported55,\n    statusWifiBars56,\n    statusCurrentTimeMsec57,\n    statusNumHilights58,\n    statusLastHilightTimeMsec59,\n    statusNextPollMsec60,\n    statusInContextualMenu63,\n    statusRemainingTimelapseTime64,\n    statusExposureSelectType65,\n    statusExposureSelectX66,\n    statusExposureSelectY67,\n    statusGpsStatus68,\n    statusApState69,\n    statusInternalBatteryPercentage70,\n    statusAccMicStatus74,\n    statusDigitalZoom75,\n    statusWirelessBand76,\n    statusDigitalZoomActive77,\n    statusMobileFriendlyVideo78,\n    statusFirstTimeUse79,\n    statusBand5ghzAvail81,\n    statusSystemReady82,\n    statusBattOkayForOta83,\n    statusVideoLowTempAlert85,\n    statusActualOrientation86,\n    statusThermalMitigationMode87,\n    statusZoomWhileEncoding88,\n    statusCurrentMode89,\n    statusLogsReady91,\n    statusTimewarp1xActive92,\n    statusActiveVideoPresets93,\n    statusActivePhotoPresets94,\n    statusActiveTimelapsePresets95,\n    statusActivePresetsGroup96,\n    statusActivePreset97,\n    statusPresetModified98,\n    statusRemainingLiveBursts99,\n    statusNumTotalLiveBursts100,\n    statusCaptureDelayActive101,\n    statusMediaModMicStatus102,\n    statusTimewarpSpeedRampActive103,\n    statusLinuxCoreActive104,\n    statusCameraLensType105,\n    statusVideoHindsightCaptureActive106,\n    statusScheduledPreset107,\n    statusScheduledEnabled108,\n    statusCreatingPreset109,\n    statusMediaModStatus110,\n    statusTurboTransfer113,\n];\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { bluetoothDeviceState } from './goproBleServiceState';\n\nexport interface SettingValue {\n    value: number;\n    /** Length in bytes */\n    length: number;\n}\n\ninterface Settings {\n    [key: number]: SettingValue;\n}\n\ninterface Statuses {\n    [key: number]: number | string;\n}\n\nexport interface GoproSettingsState {\n    settings: Settings;\n    statuses: Statuses;\n    isFetching: boolean;\n}\n\nconst initialState: GoproSettingsState = {\n    settings: {},\n    statuses: {},\n    isFetching: false,\n};\n\nexport const goproSettingsSlice = createSlice({\n    name: 'goproSettings',\n    initialState,\n    reducers: {\n        settingsReceived: (state, action: PayloadAction<Settings>) => {\n            state.settings = { ...state.settings, ...action.payload };\n        },\n        settingsRequested: (state) => {\n            state.isFetching = true;\n        },\n        settingsRequestFailed: (state) => {\n            state.isFetching = false;\n        },\n        statusesReceived: (state, action: PayloadAction<Statuses>) => {\n            state.statuses = { ...state.statuses, ...action.payload };\n        },\n    },\n});\n\nexport const goproSettingsReducer = goproSettingsSlice.reducer;\n\nexport const fetchSettings = createAsyncThunk('goproSettings/fetchSettings', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await queryCharacteristic.writeValue(new Uint8Array([0x01, 0x12]));\n});\n","/* eslint-disable no-bitwise */\nimport { allKnownStatuses } from 'store/goproBluetoothServiceActions/goproStatusMetadata';\nimport { goproSettingsSlice, GoproSettingsState } from 'store/goproSettingsSlice';\nimport { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\nexport function queryResponseReceiverProvider(dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    return (packetData: PacketData) => {\n        const queryResponse = parseQueryResponse(packetData);\n        dispatchQueryResponse(dispatch, queryResponse);\n    };\n}\n\nexport interface QueryResponse {\n    errorCode: CommandResponseCode;\n    statusesOrSettings: StatusOrSetting[];\n    queryId: number;\n}\n\nfunction parseQueryResponse(packetData: PacketData): QueryResponse {\n    if (packetData.length < 2) throw new Error('command response too short');\n    const queryId = packetData[0];\n    const errorCode = parseQueryResponseCode(packetData[1]);\n    const statusesOrSettings = parseStatusesOrSettingsFromData(packetData.slice(2));\n    return {\n        queryId,\n        errorCode,\n        statusesOrSettings,\n    };\n}\n\nfunction parseStatusesOrSettingsFromData(data: number[]) {\n    const settings: StatusOrSetting[] = [];\n    let dataIndex = 0;\n    while (dataIndex < data.length) {\n        const setting = readOneStatusOrSetting(data.slice(dataIndex));\n        settings.push(setting);\n        dataIndex += setting.value.length + 2;\n    }\n    return settings;\n}\n\nexport interface StatusOrSetting {\n    id: number;\n    /** Length in bytes */\n    length: number;\n    value: number[];\n}\n\nfunction readOneStatusOrSetting(data: number[]): StatusOrSetting {\n    const settingId = data[0];\n    const dataLength = data[1];\n    const settingValue = data.slice(2, dataLength + 2);\n    return {\n        id: settingId,\n        length: dataLength,\n        value: settingValue,\n    };\n}\n\nfunction parseQueryResponseCode(responseCode: number) {\n    // Probably same as query, not sure. Not in docs.\n    switch (responseCode) {\n        case 0:\n            return CommandResponseCode.success;\n        case 1:\n            return CommandResponseCode.error;\n        case 2:\n            return CommandResponseCode.invalidParameter;\n        default:\n            return CommandResponseCode.unknown;\n    }\n}\n\nenum CommandResponseCode {\n    unknown,\n    success,\n    error,\n    invalidParameter,\n}\n\nenum QueryId {\n    /*\n0x12 \tGet setting value \t02:12:xx \txx -> Setting ID\n0x12 \tGet all setting values \t01:12\n0x13 \tGet status value \t02:13:xx \txx -> status code\n0x13 \tGet all status values \t01:13\n0x52 \tRegister for setting updates \tnn:52:xx:… \tnn -> message length \\n xx -> setting id\n0x53 \tRegister for status updates \tnn:53:xx:… \tnn -> message length \\n xx -> status code\n0x72 \tUnregister for setting updates \tnn:72:xx:… \tnn -> message length \\n xx -> setting id\n0x73 \tUnregister for status updates \tnn:73:xx:… \tnn -> message length \\n xx -> status code\n */\n    getSettingValue = 0x12,\n    getStatusValue = 0x13,\n    registerForSettingUpdates = 0x52,\n    registerForStatusUpdates = 0x53,\n    unregisterForSettingUpdates = 0x72,\n    unregisterForStatusUpdates = 0x73,\n    // The Query ID for settings/status push notifications replaces the upper 4 bits with 1001 (nine).\n    settingUpdate = 0x92,\n    statusUpdate = 0x93,\n}\n\nconst receivedSettingsReduceToKeyValue = (statusesOrSettings: StatusOrSetting[]): GoproSettingsState['settings'] =>\n    statusesOrSettings.reduce((acc, setting) => {\n        // unused settings will have length of 0\n        if (setting.value.length === 0) return acc;\n        const value = setting.value.reduce((sAcc, sCur) => (sAcc << 8) + sCur);\n        const { length } = setting;\n        acc[setting.id] = {\n            value,\n            length,\n        };\n        return acc;\n    }, {} as GoproSettingsState['settings']);\n\nconst receivedStatusesReduceToKeyValue = (statusesOrSettings: StatusOrSetting[]): GoproSettingsState['statuses'] =>\n    statusesOrSettings.reduce((acc, status) => {\n        const valueLength = status.value.length;\n        const knownStatus = allKnownStatuses.find((s) => s.id === status.id);\n        if (knownStatus?.type === 'string' || valueLength > 4) {\n            const valueStr = status.value.map((v) => String.fromCharCode(v)).join('');\n            acc[status.id] = valueStr;\n            return acc;\n        }\n        // unused statuses will have length of 0\n        if (status.value.length === 0) return acc;\n        const value = status.value.reduce((sAcc, sCur) => (sAcc << 8) + sCur);\n        acc[status.id] = value;\n        return acc;\n    }, {} as GoproSettingsState['statuses']);\n\nfunction dispatchQueryResponse(dispatch: ThunkDispatch<RootState, unknown, AnyAction>, queryResponse: QueryResponse) {\n    switch (queryResponse.queryId) {\n        case QueryId.getSettingValue:\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.registerForSettingUpdates:\n            // When registering to settings updates, it sends current values as response to the register command.\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.settingUpdate:\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.getStatusValue:\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.registerForStatusUpdates:\n            // When registering to status updates, it sends current values as response to the register command.\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.statusUpdate:\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        default:\n            break;\n    }\n}\n","import { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function settingsResponseReceiverProvider(_dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return (_packetData: PacketData) => {\n        // const settings = parseSettings(packetData);\n        // dispatchSettings(dispatch, settings);\n    };\n}\n","import { toast } from 'react-toastify';\n\nexport type PacketData = number[];\n\ntype PacketDataReceiver = (response: PacketData) => void;\n\nexport function goproBlePacketDataReaderProvider(onPacket: PacketDataReceiver) {\n    let packetDataAccumulator: number[] = [];\n    let messageLength = 0;\n    return (ev: Event) => {\n        const characteristic = ev.target as BluetoothRemoteGATTCharacteristic;\n        async function tryParsingSinglePacket(): Promise<PacketData | undefined> {\n            const { value } = characteristic;\n            if (!value) {\n                throw new Error('This should not be possible, empty response value');\n            }\n            const packet = readSinglePacket(value);\n            if (packet.header.isStart) {\n                messageLength = packet.header.messageLength;\n                packetDataAccumulator = packet.data;\n            } else {\n                // TODO consider using continuationIndex\n                packetDataAccumulator.push(...packet.data);\n            }\n            if (packetDataAccumulator.length === messageLength) {\n                // Message complete, last packet, return concatenated data\n                return packetDataAccumulator;\n            }\n            if (packetDataAccumulator.length > messageLength) throw new Error('Did response messages get out of sync?');\n            return undefined;\n        }\n        tryParsingSinglePacket()\n            .then((packetData) => {\n                if (!packetData) return;\n                onPacket(packetData);\n                console.log('packet dump', packetData);\n            })\n            .catch((error) => {\n                // dispatch()\n                toast(`Error while parsing response message ${error}`);\n            });\n    };\n}\n\nfunction readSinglePacket(value: DataView) {\n    const packetHeader = parsePacketHeader(value);\n    const data = Array.from(new Uint8Array(value.buffer)).slice(packetHeader.headerSizeBytes);\n    return { header: packetHeader, data };\n}\n\nfunction parsePacketHeader(data: DataView) {\n    const byte1 = data.getUint8(0);\n    let headerSizeBytes = 1;\n    // eslint-disable-next-line no-bitwise\n    const isStart = (byte1 & 0b10000000) >> 7 === 0b0;\n    if (!isStart) {\n        // Continuation packet\n        // eslint-disable-next-line no-bitwise\n        const continuationIndex = byte1 & 0b01111111;\n        return {\n            isStart: false,\n            headerSizeBytes: 1,\n            continuationIndex,\n        } as const;\n    }\n    // eslint-disable-next-line no-bitwise\n    const startType = (byte1 & 0b01100000) >> 5;\n    let messageLength: number;\n    if (startType === 0b00) {\n        // eslint-disable-next-line no-bitwise\n        messageLength = byte1 & 0b00011111;\n    } else if (startType === 0b01) {\n        headerSizeBytes = 2;\n        const byte2 = data.getUint8(1);\n        // eslint-disable-next-line no-bitwise\n        messageLength = ((byte1 & 0b00011111) << 8) | byte2;\n    } else if (startType === 0b10) {\n        headerSizeBytes = 3;\n        const byte2 = data.getUint8(1);\n        const byte3 = data.getUint8(2);\n        // eslint-disable-next-line no-bitwise\n        messageLength = (byte2 << 8) | byte3;\n    } else if (startType === 0b11) {\n        messageLength = 0;\n    } else {\n        throw new Error('IMPOSSIBLE');\n    }\n    return {\n        isStart: true,\n        headerSizeBytes,\n        messageLength,\n    } as const;\n}\n","/* eslint-disable no-bitwise */\nimport { toast } from 'react-toastify';\nimport { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { goproBluetoothSlice, goproGetHardwareInfoCommand, openGoProGetVersion } from 'store/goproBluetoothSlice';\nimport { commandResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderCommand';\nimport { queryResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderQuery';\nimport { settingsResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderSetting';\nimport { RootState } from 'store/store';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { goproBlePacketDataReaderProvider } from '../packetParsing/goproPacketReader';\n\nimport { statusEncodingActive10, statusSystemBusy8, statusSystemReady82 } from './goproStatusMetadata';\n\ninterface SelectDeviceResult {\n    deviceName: string;\n}\n\nexport const requestDevice = createAsyncThunk<SelectDeviceResult, void, { state: RootState }>('bluetoothDevice/requestDevice', async (_, { dispatch }) => {\n    const device = await navigator.bluetooth.requestDevice({\n        filters: [{ services: ['0000fea6-0000-1000-8000-00805f9b34fb'] }],\n        optionalServices: ['0000fea6-0000-1000-8000-00805f9b34fb', 'b5f90001-aa8d-11e3-9046-0002a5d5c51b'],\n    });\n    device.ongattserverdisconnected = () => {\n        // On disconnect, invalidate all GATT services and characteristics https://web.dev/bluetooth/#disconnect\n        bluetoothDeviceState.characteristics = undefined;\n        bluetoothDeviceState.gattServer = undefined;\n\n        dispatch(goproBluetoothSlice.actions.gattDisconnected('Connection lost'));\n        toast.error('Gopro disconnected, connection lost');\n    };\n    bluetoothDeviceState.device = device;\n    dispatch(gattConnect());\n    return {\n        deviceName: device.name ?? device.id,\n    };\n});\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface GattConnectResult {}\n\nexport const gattConnect = createAsyncThunk<GattConnectResult, void, { state: RootState }>('bluetoothDevice/gattConnect', async (_, { dispatch }) => {\n    const { device } = bluetoothDeviceState;\n    if (!device) throw new Error('device not found to connect to');\n    if (!device?.gatt) throw new Error(`gatt missing for this device ${device.name ?? device.id}`);\n    const gattServer = await device.gatt.connect();\n\n    const wifiApServicePromise = gattServer.getPrimaryService('b5f90001-aa8d-11e3-9046-0002a5d5c51b');\n    const wifiApSsidCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90002-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApPasswordCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90003-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApPowerCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90004-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApStateCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90005-aa8d-11e3-9046-0002a5d5c51b'));\n\n    const cqServicePromise = gattServer.getPrimaryService('0000fea6-0000-1000-8000-00805f9b34fb');\n    const commandCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90072-aa8d-11e3-9046-0002a5d5c51b'));\n    const commandResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90073-aa8d-11e3-9046-0002a5d5c51b'));\n    const settingsCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90074-aa8d-11e3-9046-0002a5d5c51b'));\n    const settingsResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90075-aa8d-11e3-9046-0002a5d5c51b'));\n    const queryCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90076-aa8d-11e3-9046-0002a5d5c51b'));\n    const queryResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90077-aa8d-11e3-9046-0002a5d5c51b'));\n\n    bluetoothDeviceState.gattServer = gattServer;\n    bluetoothDeviceState.characteristics = {\n        wifiApSsidCharacteristic: await wifiApSsidCharacteristicPromise,\n        wifiApPasswordCharacteristic: await wifiApPasswordCharacteristicPromise,\n        wifiApPowerCharacteristic: await wifiApPowerCharacteristicPromise,\n        wifiApStateCharacteristic: await wifiApStateCharacteristicPromise,\n        commandCharacteristic: await commandCharacteristicPromise,\n        commandResponseCharacteristic: await commandResponseCharacteristicPromise,\n        settingsCharacteristic: await settingsCharacteristicPromise,\n        settingsResponseCharacteristic: await settingsResponseCharacteristicPromise,\n        queryCharacteristic: await queryCharacteristicPromise,\n        queryResponseCharacteristic: await queryResponseCharacteristicPromise,\n    };\n    bluetoothDeviceState.characteristics.commandResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(commandResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.commandResponseCharacteristic.startNotifications();\n    bluetoothDeviceState.characteristics.queryResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(queryResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.queryResponseCharacteristic.startNotifications();\n    bluetoothDeviceState.characteristics.settingsResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(settingsResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.settingsResponseCharacteristic.startNotifications();\n\n    // Explicitly first subscribe to ones needed to know of we can send commands\n    await dispatch(subscribeToStatusChanges([statusSystemReady82.id, statusEncodingActive10.id, statusSystemBusy8.id]));\n\n    // Subscribe to status and setting changes, will be useful to know when the device is ready to receive commands\n    await dispatch(subscribeToStatusChanges([...new Array(88).keys()]));\n    await dispatch(subscribeToSettingsChanges([...new Array(112).keys()]));\n\n    await dispatch(openGoProGetVersion());\n    await dispatch(goproGetHardwareInfoCommand());\n    // TODO maybe subscribe only when UI requires it? With current interface we literally always need it...\n    // For now subscribe to all known settings, last setting ID is 112, last status id is 88\n});\n\nasync function writeGoProPacketDataRaw(characteristic: BluetoothRemoteGATTCharacteristic, data: number[]) {\n    // console.log('writing raw data', data);\n    return characteristic.writeValue(new Uint8Array(data));\n}\n\nfunction getPacketHeaderForData(dataLength: number, chunkIndex: number) {\n    if (chunkIndex > 0) return [0b10000000 + (chunkIndex & 0b00111111)];\n    if (dataLength <= 0x1f) return [dataLength & 0b00011111];\n    if (dataLength <= 0x1fff) return [0b00100000 + ((dataLength >> 8) & 0b00011111), dataLength & 0b11111111];\n    if (dataLength <= 0xffff) return [0b01000000, (dataLength >> 8) & 0b11111111, dataLength & 0b11111111];\n\n    toast.error('packet too large');\n    throw new Error('data length too large');\n}\n\nexport async function writeGoProPacketData(characteristic: BluetoothRemoteGATTCharacteristic, data: number[]) {\n    console.log('writing data, before appending headers', data);\n    const dataCopy = [...data];\n    let chunkIndex = 0;\n    while (dataCopy.length > 0) {\n        dataCopy.unshift(...getPacketHeaderForData(data.length, chunkIndex));\n        const chunk = dataCopy.splice(0, 20);\n        // Intentional await inside loop, this can only be done synchronously\n        // eslint-disable-next-line no-await-in-loop\n        await writeGoProPacketDataRaw(characteristic, chunk);\n        chunkIndex++;\n    }\n    return undefined;\n}\n\nexport const subscribeToSettingsChanges = createAsyncThunk<void, number[], { state: RootState }>('bluetoothDevice/subscribeToSettingsChanges', async (settingsIds) => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x52, ...settingsIds]);\n});\n\nexport const subscribeToStatusChanges = createAsyncThunk<void, number[], { state: RootState }>('bluetoothDevice/subscribeToStatusChanges', async (statusIds) => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x53, ...statusIds]);\n});\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { gattConnect, requestDevice, writeGoProPacketData } from './goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { bluetoothDeviceState } from './goproBleServiceState';\nimport { RootState, store } from './store';\nimport { statusEncodingActive10, statusSystemBusy8, statusSystemReady82 } from './goproBluetoothServiceActions/goproStatusMetadata';\n\nexport const tempSettingsDump = createAsyncThunk('bluetoothDevice/tempSettingsDump', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await queryCharacteristic.writeValue(new Uint8Array([0x01, 0x12]));\n});\n\nexport const tempStatusesDump = createAsyncThunk('bluetoothDevice/tempStatusesDump', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await queryCharacteristic.writeValue(new Uint8Array([0x01, 0x13]));\n});\n\n// async function listenForResponse(characteristic: BluetoothRemoteGATTCharacteristic) {\n//     let resolvePromise: (value: PacketResponse | PromiseLike<PacketResponse>) => void;\n//     let rejectPromise: (reason: Error) => void;\n//     const promise = new Promise<PacketResponse>((resolve, reject) => {\n//         resolvePromise = resolve;\n//         rejectPromise = reject;\n//     });\n//     const timeoutHandle = setTimeout(() => {\n//         rejectPromise(new Error('Timeout'));\n//     }, 1000);\n//     let responseDataAccumulator: number[] = [];\n//     let messageLengthLeft = 0;\n//     const onCharacteristicValueChanged = async () => {\n//         const { value } = characteristic;\n//         if (!value) {\n//             // Should not be possible...\n//             rejectPromise(new Error('This should not be possible, empty response value'));\n//             return;\n//         }\n//         const packetHeader = parsePacketHeader(value);\n//         if (packetHeader.isStart) {\n//             responseDataAccumulator = Array.from(new Uint8Array(value.buffer)).slice(packetHeader.headerSizeBytes);\n//             messageLengthLeft = packetHeader.messageLength;\n//             messageLengthLeft -= responseDataAccumulator.length;\n//         } else {\n//             // TODO consider using continuationIndex\n//             const continuationData = Array.from(new Uint8Array(value.buffer)).slice(packetHeader.headerSizeBytes);\n//             messageLengthLeft -= continuationData.length;\n//             responseDataAccumulator.push(...continuationData);\n//         }\n//         if (messageLengthLeft === 0) {\n//             resolvePromise(responseDataAccumulator);\n//         }\n//         if (messageLengthLeft < 0) rejectPromise(new Error('Did response messages get out of sync?'));\n//     };\n//     promise.finally(() => {\n//         characteristic.removeEventListener('characteristicvaluechanged', onCharacteristicValueChanged);\n//         clearTimeout(timeoutHandle);\n//     });\n//     characteristic.addEventListener('characteristicvaluechanged', onCharacteristicValueChanged);\n//     return promise;\n// }\n\nconst lastQueuedPromiseArr: { context: unknown; promise: Promise<void> }[] = [];\n/**\n * Enqueue a function to be called after the current function has finished.\n */\nexport async function functionQueue(func: () => Promise<void>, context: unknown) {\n    let lastQueuedPromise = lastQueuedPromiseArr.find((p) => p.context === context);\n    if (!lastQueuedPromise) {\n        lastQueuedPromise = { context, promise: Promise.resolve() };\n        lastQueuedPromiseArr.push(lastQueuedPromise);\n    }\n    lastQueuedPromise.promise = lastQueuedPromise.promise.then(() => func());\n    await lastQueuedPromise.promise;\n}\n\nfunction isDeviceReady() {\n    const { statuses } = store.getState().goproSettingsReducer;\n    const systemBusy = statuses[statusSystemBusy8.id];\n    const encodingActive = statuses[statusEncodingActive10.id];\n    const systemReady = statuses[statusSystemReady82.id];\n    const canSendCommand = !systemBusy && !encodingActive && systemReady;\n    return canSendCommand;\n}\n\n/**\n * GoPro will reject command if it's busy, encoding or system is not ready.\n */\nasync function waitUntilDeviceReady() {\n    if (isDeviceReady()) return;\n\n    await new Promise<void>((resolve) => {\n        const unsubscribe = store.subscribe(() => {\n            if (isDeviceReady()) {\n                unsubscribe();\n                resolve();\n            }\n        });\n    });\n}\n\ntype CommandData = number[];\nexport async function sendCommand(commandData: CommandData) {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { commandCharacteristic } = characteristics;\n    await waitUntilDeviceReady();\n    await functionQueue(async () => {\n        await writeGoProPacketData(commandCharacteristic, commandData);\n    }, commandCharacteristic);\n}\n\nconst sendCommandAction = createAsyncThunk<void, CommandData, { state: RootState }>('bluetoothDevice/goproSleepCommand', async (commandData) => {\n    await sendCommand(commandData);\n});\n\n// Non-standard commands\nexport const goproForceShutdownCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/goproForceShutdownCommand', async (_, { dispatch }) => {\n    // Force shutdown GoPro, not documented in OpenGoPro\n    // Bluetooth will be offline after this command\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x04]));\n});\n\nexport const goproHiLightTagCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/goproHiLightTagCommand', async (_, { dispatch }) => {\n    // HiLight current moment on GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x18]));\n});\n\nexport const goproLocateOnCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/goproLocateOnCommand', async (_, { dispatch }) => {\n    // Locate mode on for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x16, 0x01, 0x01]));\n});\n\nexport const goproLocateOffCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/goproLocateOffCommand', async (_, { dispatch }) => {\n    // Locate mode off for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x16, 0x01, 0x00]));\n});\n\nexport const goproLegacyPresetsLoadGroupVideoCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/goproLegacyPresetsLoadGroupVideoCommand', async (_, { dispatch }) => {\n    // Load video group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x00]));\n});\n\nexport const goproLegacyPresetsLoadGroupPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/goproLegacyPresetsLoadGroupPhotoCommand', async (_, { dispatch }) => {\n    // Load photo group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x01]));\n});\n\nexport const goproLegacyPresetsLoadGroupTimelapseCommand = createAsyncThunk<void, void, { state: RootState }>(\n    'bluetoothDevice/goproLegacyPresetsLoadGroupTimelapseCommand',\n    async (_, { dispatch }) => {\n        // Load timelapse group for GoPro, not documented in OpenGoPro\n        // Tested with Hero 7 Black\n        await dispatch(sendCommandAction([0x02, 0x01, 0x02]));\n    }\n);\n\n/*\n\n// These are available for previous gopros like gopro hero 7\n// that dont support open gopro\nclass Mode:\n    Video = bytearray(0x03,0x02,0x01,0x00)\n    Photo = bytearray(0x03,0x02,0x01,0x01)\n    Timelapse = bytearray(0x03,0x02,0x01,0x02)\nclass Submode:\n    class Video:\n        Single =    bytearray(0x05,0x03,0x01,0x00,0x01,0x00)\n        Looping =    bytearray(0x05,0x03,0x01,0x00,0x01,0x03)\n        TimeLapse = bytearray(0x05,0x03,0x01,0x00,0x01,0x01)\n    class Photo:\n        Single = bytearray(0x05,0x03,0x01,0x01,0x01,0x01)\n        Night = bytearray(0x05,0x03,0x01,0x01,0x01,0x02)\n    class Timelapse:\n        Burst =      bytearray(0x05,0x03,0x01,0x02,0x01,0x00)\n        TimeLapse =  bytearray(0x05,0x03,0x01,0x02,0x01,0x01)\n        NightLapse = bytearray(0x05,0x03,0x01,0x02,0x01,0x02)\n\n\n\nmore commands from  https://gethypoxic.com/blogs/technical/gopro-hero5-interfaces\n\n// Not sure which characteristic, though, probably command, needs testing\nVIDEO_PROTUNE_RESET (0x03 0x10, 0x01, 0x01),\nMULTISHOT_VIDEO_PROTUNE_RESET(0x03, 0x11, 0x01, 0x01),\nPHOTO_PROTUNE_RESET(0x03, 0x12, 0x01, 0x01),\n\n\n\n\n*/\n\n// Standard commands\nexport const goproSleepCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/goproSleepCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x05]));\n});\n\nexport const goproGetHardwareInfoCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/getHardwareInfoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3c]));\n});\n\nexport const setShutterOffCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/setShutterOffCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x01, 0x01, 0x00]));\n});\n\nexport const setShutterOnCommand = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/setShutterOnCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x01, 0x01, 0x01]));\n});\n\nexport const apControlWiFiApOff = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/apControlWiFiApOff', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x17, 0x01, 0x00]));\n});\n\nexport const apControlWiFiApOn = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/apControlWiFiApOn', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x17, 0x01, 0x01]));\n});\n// all next ones not work on hero 7\n\nexport const presetsLoadGroupVideo = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadGroupVideo', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xe8]));\n});\n\nexport const presetsLoadGroupPhoto = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadGroupPhoto', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xe9]));\n});\n\nexport const presetsLoadGroupTimelapse = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadGroupTimelapse', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xea]));\n});\n\nexport const presetsLoadStandard = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadStandard', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x00]));\n});\n\nexport const presetsLoadActivity = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadActivity', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x01]));\n});\n\nexport const presetsLoadCinematic = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadCinematic', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x02]));\n});\n\nexport const presetsLoadUltraSloMo = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadUltraSloMo', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x04]));\n});\n\nexport const presetsLoadBasic = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadBasic', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x05]));\n});\n\nexport const presetsLoadPhoto = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadPhoto', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x00]));\n});\n\nexport const presetsLoadLiveBurst = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadLiveBurst', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x01]));\n});\n\nexport const presetsLoadBurstPhoto = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadBurstPhoto', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x02]));\n});\n\nexport const presetsLoadNightPhoto = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadNightPhoto', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x03]));\n});\n\nexport const presetsLoadTimeWarp = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadTimeWarp', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x00]));\n});\n\nexport const presetsLoadTimeLapse = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadTimeLapse', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x01]));\n});\n\nexport const presetsLoadNightLapse = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadNightLapse', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x02]));\n});\n\nexport const presetsLoadStandardEB = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadStandardEB', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x00]));\n});\n\nexport const presetsLoadActivityEB = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadActivityEB', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x01]));\n});\n\nexport const presetsLoadCinematicEB = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadCinematicEB', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x02]));\n});\n\nexport const presetsLoadSloMoEB = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoadSloMoEB', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x03]));\n});\n\nexport const presetsLoad4KTripod = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoad4KTripod', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x09, 0x00, 0x00]));\n});\n\nexport const presetsLoad53KTripod = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/presetsLoad53KTripod', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x09, 0x00, 0x01]));\n});\n\nexport const analyticsSetThirdPartyClient = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/analyticsSetThirdPartyClient', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x50]));\n});\n\nexport const openGoProGetVersion = createAsyncThunk<void, void, { state: RootState }>('bluetoothDevice/openGoProGetVersion', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x51]));\n});\n\nexport interface OpenGoProVersionState {\n    majorVersion: number;\n    minorVersion: number;\n}\n\nexport interface GetHardwareInfoState {\n    modelNumber: number[];\n    modelName: string;\n    boardType: string;\n    firmwareVersion: string;\n    serialNumber: string;\n    apSsid: string;\n    apMacAddress: string;\n}\n\ninterface GoproBluetoothDeviceCommandsState {\n    isCommandInAction: boolean;\n    getHardwareInfo?: GetHardwareInfoState;\n    openGoProVersion?: OpenGoProVersionState;\n}\n\ninterface GoproBluetoothDeviceState {\n    isRequestingDevice: boolean;\n    isDeviceSelected: boolean;\n    deviceName: string;\n    error?: string;\n    isGattConnecting: boolean;\n    gattConnected: boolean;\n    goproBluetoothDeviceCommandsState: GoproBluetoothDeviceCommandsState;\n}\n\nexport const initialState: GoproBluetoothDeviceState = {\n    isRequestingDevice: false,\n    isDeviceSelected: false,\n    gattConnected: false,\n    isGattConnecting: false,\n    deviceName: 'unknown',\n    goproBluetoothDeviceCommandsState: {\n        isCommandInAction: false,\n    },\n};\n\nexport const goproBluetoothSlice = createSlice({\n    name: 'bluetoothDevice',\n    initialState,\n    reducers: {\n        gattDisconnected: (state, action: PayloadAction<string | undefined>) => {\n            state.gattConnected = false;\n            state.error = action.payload;\n        },\n        getHardwareInfoResponse: (state, action: PayloadAction<GetHardwareInfoState>) => {\n            state.goproBluetoothDeviceCommandsState.getHardwareInfo = action.payload;\n            // Let's override device name when we know wifi ssid\n            state.deviceName = action.payload.apSsid;\n        },\n        openGoProGetVersionResponse: (state, action: PayloadAction<OpenGoProVersionState>) => {\n            state.goproBluetoothDeviceCommandsState.openGoProVersion = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(requestDevice.pending, (state) => {\n            bluetoothDeviceState.device = undefined;\n            state.isRequestingDevice = true;\n            state.isDeviceSelected = false;\n            state.error = undefined;\n        });\n        builder.addCase(requestDevice.fulfilled, (state, action) => {\n            state.isRequestingDevice = false;\n            state.isDeviceSelected = true;\n            state.error = undefined;\n            state.deviceName = action.payload.deviceName;\n        });\n        builder.addCase(requestDevice.rejected, (state, action) => {\n            bluetoothDeviceState.device = undefined;\n            state.isRequestingDevice = false;\n            state.isDeviceSelected = false;\n            state.error = action.error.message ?? 'unknown error';\n        });\n        builder.addCase(gattConnect.pending, (state) => {\n            state.isGattConnecting = true;\n            state.gattConnected = false;\n        });\n        builder.addCase(gattConnect.fulfilled, (state) => {\n            state.isGattConnecting = false;\n            state.gattConnected = true;\n        });\n        builder.addCase(gattConnect.rejected, (state, action) => {\n            state.isGattConnecting = false;\n            state.gattConnected = false;\n            state.error = action.error.message ?? 'unknown error';\n        });\n    },\n});\n\nexport const goproBluetoothReducer = goproBluetoothSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { goproBluetoothReducer } from './goproBluetoothSlice';\nimport { goproSettingsReducer } from './goproSettingsSlice';\n\nexport const store = configureStore({\n    reducer: {\n        goproBluetoothReducer,\n        goproSettingsReducer,\n    },\n    devTools: true,\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createMakeAndWithStyles } from 'tss-react';\n\nimport { useTheme } from '@mui/material';\n\nexport const { makeStyles, withStyles } = createMakeAndWithStyles({ useTheme });\n","/* eslint-disable no-bitwise */\nexport interface SettingValueMetadata {\n    id: number;\n    label: string;\n}\n\nexport interface SettingMetadata {\n    id: number;\n    label: string;\n    length: number;\n    values: SettingValueMetadata[];\n}\n\nexport const settingResolution2: SettingMetadata = {\n    id: 0x2,\n    label: 'Resolution',\n    length: 1,\n    values: [\n        {\n            id: 0x12, // 18\n            label: '4K (4:3)',\n        },\n        {\n            id: 0x6,\n            label: '2.7K (4:3)',\n        },\n        {\n            id: 0x7,\n            label: '1440 (4:3)',\n        },\n        {\n            id: 0xa, // 10\n            label: '960 (4:3)',\n        },\n        {\n            id: 0x1,\n            label: '4K',\n        },\n        {\n            id: 0x4,\n            label: '2.7K',\n        },\n        {\n            id: 0x9,\n            label: '1080',\n        },\n        {\n            id: 0xc, // 12\n            label: '720',\n        },\n    ],\n};\n\nexport const settingFps3: SettingMetadata = {\n    id: 0x3,\n    label: 'FPS',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '240',\n        },\n        {\n            id: 0x1,\n            label: '120',\n        },\n        {\n            id: 0x5,\n            label: '60',\n        },\n        {\n            id: 0x8,\n            label: '30',\n        },\n        {\n            id: 0xa, // 10\n            label: '24',\n        },\n    ],\n};\n\nexport const settingFov4: SettingMetadata = {\n    id: 0x4,\n    label: 'FOV',\n    length: 1,\n    values: [\n        {\n            id: 0x4,\n            label: 'Linear',\n        },\n        {\n            id: 0x0,\n            label: 'Wide',\n        },\n        {\n            id: 0x3,\n            label: 'Super view',\n        },\n    ],\n};\n\nexport const settingLowLight8: SettingMetadata = {\n    id: 0x8,\n    label: 'Low light',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Auto',\n        },\n    ],\n};\n\nexport const settingProtune10: SettingMetadata = {\n    id: 0xa, // 10\n    label: 'Protune',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingWhiteBalance11: SettingMetadata = {\n    id: 0xb, // 11\n    label: 'White Balance',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Auto' },\n        { id: 0x8, label: '2300K' },\n        { id: 0x9, label: '2800K' },\n        {\n            id: 0xa, // 10\n            label: '3200K',\n        },\n        { id: 0x5, label: '4000K' },\n        {\n            id: 0xb, // 11\n            label: '4500K',\n        },\n        {\n            id: 0xc, // 12\n            label: '5000K',\n        },\n        { id: 0x2, label: '5500K' },\n        { id: 0x7, label: '6000K' },\n        { id: 0x3, label: '6500K' },\n        { id: 0x4, label: 'Native' },\n    ],\n};\n\nexport const settingColor12: SettingMetadata = {\n    id: 0xc, // 12\n    label: 'Color',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'GoPro',\n        },\n        {\n            id: 0x1,\n            label: 'Flat',\n        },\n    ],\n};\n\nexport const settingIsoMax13: SettingMetadata = {\n    id: 0xd, // 13\n    label: 'ISO max',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '6400',\n        },\n        {\n            id: 0x3,\n            label: '3200',\n        },\n        {\n            id: 0x1,\n            label: '1600',\n        },\n        {\n            id: 0x4,\n            label: '800',\n        },\n        {\n            id: 0x2,\n            label: '400',\n        },\n        {\n            id: 0x7,\n            label: '200',\n        },\n        {\n            id: 0x8,\n            label: '100',\n        },\n    ],\n};\n\nexport const settingSharpness14: SettingMetadata = {\n    id: 0xe, // 14\n    label: 'Sharpness',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'High',\n        },\n        {\n            id: 0x1,\n            label: 'Medium',\n        },\n        {\n            id: 0x2,\n            label: 'Low',\n        },\n    ],\n};\n\nexport const settingEvComp15: SettingMetadata = {\n    id: 0xf, // 15\n    label: 'EV comp',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '+2',\n        },\n        {\n            id: 0x1,\n            label: '+1.5',\n        },\n        {\n            id: 0x2,\n            label: '+1',\n        },\n        {\n            id: 0x3,\n            label: '+0.5',\n        },\n        {\n            id: 0x4,\n            label: '0',\n        },\n        {\n            id: 0x5,\n            label: '-0.5',\n        },\n        {\n            id: 0x6,\n            label: '-1',\n        },\n        {\n            id: 0x7,\n            label: '-1.5',\n        },\n        {\n            id: 0x8,\n            label: '-2',\n        },\n    ],\n};\n\nexport const settingShutter73: SettingMetadata = {\n    id: 0x49, // 73\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x8,\n            label: '1/60',\n        },\n        {\n            id: 0xd, // 13\n            label: '1/120',\n        },\n        {\n            id: 0x12, // 18\n            label: '1/240',\n        },\n        {\n            id: 0x16, // 22\n            label: '1/480',\n        },\n        {\n            id: 0x17, // 23\n            label: '1/960',\n        },\n    ],\n};\n\nexport const settingStabilization78: SettingMetadata = {\n    id: 0x4e, // 78\n    label: 'Stabilization',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Off' },\n        { id: 0x1, label: 'Auto' },\n    ],\n};\n\nexport const settingMicrophone80: SettingMetadata = {\n    id: 0x50, // 80\n    label: 'Microphone',\n    length: 1,\n    values: [\n        {\n            id: 0x2,\n            label: 'Auto',\n        },\n        {\n            id: 0x1,\n            label: 'Wind',\n        },\n        {\n            id: 0x0,\n            label: 'Stereo',\n        },\n    ],\n};\n\nexport const settingRawAudio81: SettingMetadata = {\n    id: 0x51, // 81\n    label: 'Raw audio',\n    length: 1,\n    values: [\n        {\n            id: 0x3,\n            label: 'Off',\n        },\n        {\n            id: 0x0,\n            label: 'Low',\n        },\n        {\n            id: 0x1,\n            label: 'Medium',\n        },\n        {\n            id: 0x2,\n            label: 'High',\n        },\n    ],\n};\n\nexport const settingIsoMin102: SettingMetadata = {\n    id: 0x66, // 102\n    label: 'ISO min',\n    length: settingIsoMax13.length,\n    values: settingIsoMax13.values,\n};\n\nexport const settingVideoTimer107: SettingMetadata = {\n    id: 0x6b, // 107\n    label: 'Video Timer',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Off' },\n        { id: 0x1, label: '15s' },\n        { id: 0x2, label: '30s' },\n    ],\n};\n\nexport const settingResolutionFormat108: SettingMetadata = {\n    id: 0x6c, // 108\n    label: 'Resolution format',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '4:3',\n        },\n        {\n            id: 0x1,\n            label: '16:9',\n        },\n    ],\n};\n\nexport const videoModeKnownSettings: SettingMetadata[] = [\n    settingResolution2,\n    settingFps3,\n    settingFov4,\n    settingLowLight8,\n    settingStabilization78,\n    settingProtune10,\n    settingShutter73,\n    settingEvComp15,\n    settingWhiteBalance11,\n    settingIsoMin102,\n    settingIsoMax13,\n    settingSharpness14,\n    settingColor12,\n    settingRawAudio81,\n    settingMicrophone80,\n    settingVideoTimer107,\n    settingResolutionFormat108,\n];\n\nexport const settingInterval6: SettingMetadata = {\n    id: 0x6,\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'MAX',\n        },\n        {\n            id: 0x1,\n            label: '5m',\n        },\n        {\n            id: 0x2,\n            label: '20m',\n        },\n        {\n            id: 0x3,\n            label: '60m',\n        },\n        {\n            id: 0x4,\n            label: '120m',\n        },\n    ],\n};\n\nexport const loopingModeKnownSettings: SettingMetadata[] = [settingResolution2, settingFps3, settingFov4, settingInterval6, settingLowLight8, settingStabilization78];\n\nexport const settingSpeed111: SettingMetadata = {\n    id: 0x6f, // 111\n    label: 'Speed',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '15x',\n        },\n        {\n            id: 0x1,\n            label: '30x',\n        },\n        {\n            id: 0x7,\n            label: '2x',\n        },\n        {\n            id: 0x8,\n            label: '5x',\n        },\n        {\n            id: 0x9,\n            label: '10x',\n        },\n    ],\n};\n\nexport const timewarpModeKnownSettings: SettingMetadata[] = [\n    settingResolution2,\n    settingSpeed111,\n    // But limited to \"Wide\" only\n    settingFov4,\n];\n\nexport const settingInterval5: SettingMetadata = {\n    id: 0x5,\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '0.5s',\n        },\n        {\n            id: 0x1,\n            label: '1s',\n        },\n        {\n            id: 0x2,\n            label: '2s',\n        },\n\n        {\n            id: 0x3,\n            label: '5s',\n        },\n        {\n            id: 0x4,\n            label: '10s',\n        },\n        {\n            id: 0x5,\n            label: '30s',\n        },\n        {\n            id: 0x6,\n            label: '60s',\n        },\n    ],\n};\n\nexport const timelapseVideoModeKnownSettings: SettingMetadata[] = [settingResolution2, settingFov4, settingInterval5];\n\nexport const settingInterval30: SettingMetadata = {\n    id: 0x1e, // 30\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '0.5s',\n        },\n        {\n            id: 0x1,\n            label: '1s',\n        },\n        {\n            id: 0x2,\n            label: '2s',\n        },\n        {\n            id: 0x5,\n            label: '5s',\n        },\n        {\n            id: 0xa, // 10\n            label: '10s',\n        },\n        {\n            id: 0x1e, // 30\n            label: '30s',\n        },\n        {\n            id: 0x3c, // 60\n            label: '60s',\n        },\n    ],\n};\n\nexport const settingFov28: SettingMetadata = {\n    id: 0x1c,\n    label: 'FOV',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Wide',\n        },\n        {\n            id: 0xa, // 10\n            label: 'Linear',\n        },\n    ],\n};\n\nexport const settingEvComp39: SettingMetadata = {\n    id: 0x27, // 39\n    label: settingEvComp15.label,\n    length: settingEvComp15.length,\n    values: settingEvComp15.values,\n};\n\nexport const settingWhiteBalance35: SettingMetadata = {\n    id: 0x23, // 35\n    label: settingWhiteBalance11.label,\n    length: settingWhiteBalance11.length,\n    values: settingWhiteBalance11.values,\n};\n\nexport const settingIsoMin76: SettingMetadata = {\n    id: 0x4c, // 76\n    label: settingIsoMin102.label,\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '800',\n        },\n        {\n            id: 0x1,\n            label: '400',\n        },\n        {\n            id: 0x2,\n            label: '200',\n        },\n        {\n            id: 0x3,\n            label: '100',\n        },\n        {\n            id: 0x4,\n            label: '1600',\n        },\n        {\n            id: 0x5,\n            label: '3200',\n        },\n    ],\n};\n\nexport const settingIsoMax37: SettingMetadata = {\n    id: 0x25, // 37\n    label: settingIsoMax13.label,\n    length: settingIsoMin76.length,\n    values: settingIsoMin76.values,\n};\n\nexport const settingSharpness38: SettingMetadata = {\n    id: 0x26, // 38\n    label: settingSharpness14.label,\n    length: settingSharpness14.length,\n    values: settingSharpness14.values,\n};\n\nexport const settingColor36: SettingMetadata = {\n    id: 0x24, // 36\n    label: settingColor12.label,\n    length: settingColor12.length,\n    values: settingColor12.values,\n};\n\nexport const settingProtune34: SettingMetadata = {\n    id: 0x22, // 34\n    label: settingProtune10.label,\n    length: settingProtune10.length,\n    values: settingProtune10.values,\n};\n\nexport const timelapsePhotoModeKnownSettings: SettingMetadata[] = [\n    settingInterval30,\n    settingFov28,\n    settingEvComp39,\n    settingWhiteBalance35,\n    settingIsoMin76,\n    settingIsoMax37,\n    settingSharpness38,\n    settingColor36,\n    settingProtune34,\n];\n\nexport const settingShutter31: SettingMetadata = {\n    id: 0x1f, // 31\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x6,\n            label: '30s',\n        },\n        {\n            id: 0x5,\n            label: '20s',\n        },\n        {\n            id: 0x4,\n            label: '15s',\n        },\n        {\n            id: 0x3,\n            label: '10s',\n        },\n        {\n            id: 0x2,\n            label: '5s',\n        },\n        {\n            id: 0x1,\n            label: '2s',\n        },\n    ],\n};\n\nexport const settingInterval32: SettingMetadata = {\n    id: 0x20, // 32\n    label: 'Interval',\n    length: 4,\n    values: [\n        {\n            id: (0xe << 8) + 0x11,\n            label: 'Auto',\n        },\n        {\n            id: (0x0 << 8) + 0x4,\n            label: '4s',\n        },\n        {\n            id: (0x0 << 8) + 0x5,\n            label: '5s',\n        },\n        {\n            id: (0x0 << 8) + 0xa,\n            label: '10s',\n        },\n        {\n            id: (0x0 << 8) + 0x14,\n            label: '20s',\n        },\n        {\n            id: (0x0 << 8) + 0x3c,\n            label: '1m',\n        },\n        {\n            id: (0x0 << 8) + 0x78,\n            label: '2m',\n        },\n        {\n            id: (0x1 << 8) + 0x2c,\n            label: '5m',\n        },\n        {\n            id: (0x7 << 8) + 0x8,\n            label: '30m',\n        },\n        {\n            id: (0xe << 8) + 0x10,\n            label: '60m',\n        },\n    ],\n};\n\nexport const settingRaw99: SettingMetadata = {\n    id: 0x63, // 99\n    label: 'RAW',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const nightlapseModeKnownSettings: SettingMetadata[] = [\n    settingIsoMin76,\n    settingIsoMax37,\n    settingShutter31,\n    settingInterval32,\n    settingFov28,\n    settingProtune34,\n    settingWhiteBalance35,\n    settingRaw99,\n];\n\nexport const settingShutter19: SettingMetadata = {\n    id: 0x13, // 19\n    label: settingShutter31.label,\n    length: settingShutter31.length,\n    values: settingShutter31.values,\n};\n\nexport const settingFov17: SettingMetadata = {\n    id: 0x11, // 17\n    label: settingFov28.label,\n    length: settingFov28.length,\n    values: settingFov28.values,\n};\n\nexport const settingEvComp26: SettingMetadata = {\n    id: 0x1a, // 26\n    label: settingEvComp15.label,\n    length: settingEvComp15.length,\n    values: settingEvComp15.values,\n};\n\nexport const settingWhiteBalance22: SettingMetadata = {\n    id: 0x16, // 22\n    label: settingWhiteBalance11.label,\n    length: settingWhiteBalance11.length,\n    values: settingWhiteBalance11.values,\n};\n\nexport const settingIsoMin75: SettingMetadata = {\n    id: 0x4b, // 75\n    label: settingIsoMin76.label,\n    length: settingIsoMin76.length,\n    values: settingIsoMin76.values,\n};\n\nexport const settingIsoMax24: SettingMetadata = {\n    id: 0x18, // 24\n    label: settingIsoMax37.label,\n    length: settingIsoMax37.length,\n    values: settingIsoMax37.values,\n};\n\nexport const settingSharpness25: SettingMetadata = {\n    id: 0x19, // 25\n    label: settingSharpness14.label,\n    length: settingSharpness14.length,\n    values: settingSharpness14.values,\n};\n\nexport const settingColor23: SettingMetadata = {\n    id: 0x17, // 23\n    label: settingColor36.label,\n    length: settingColor36.length,\n    values: settingColor36.values,\n};\n\nexport const settingProtune21: SettingMetadata = {\n    id: 0x15, // 21\n    label: settingProtune10.label,\n    length: settingProtune10.length,\n    values: settingProtune10.values,\n};\n\nexport const settingRaw98: SettingMetadata = {\n    id: 0x62, // 98\n    label: settingRaw99.label,\n    length: settingRaw99.length,\n    values: settingRaw99.values,\n};\n\nexport const photoNightModeKnownSettings: SettingMetadata[] = [\n    settingShutter19,\n    settingFov17,\n    settingEvComp26,\n    settingWhiteBalance22,\n    settingIsoMin75,\n    settingIsoMax24,\n    settingSharpness25,\n    settingColor23,\n    settingProtune21,\n    settingRaw98,\n];\n\nconst settingBurstRate29: SettingMetadata = {\n    id: 0x1d, // 29\n    label: 'Burst Rate',\n    length: 1,\n    values: [\n        {\n            id: 0x9,\n            label: 'Auto',\n        },\n        {\n            id: 0x8,\n            label: '30/6s',\n        },\n        {\n            id: 0x7,\n            label: '30/3s',\n        },\n        {\n            id: 0x6,\n            label: '30/2s',\n        },\n        {\n            id: 0x5,\n            label: '30/1s',\n        },\n        {\n            id: 0x4,\n            label: '10/3s',\n        },\n        {\n            id: 0x3,\n            label: '10/2s',\n        },\n        {\n            id: 0x2,\n            label: '10/1s',\n        },\n        {\n            id: 0x1,\n            label: '5/1s',\n        },\n        {\n            id: 0x0,\n            label: '3/1s',\n        },\n    ],\n};\n\nexport const photoBurstModeKnownSettings: SettingMetadata[] = [\n    settingBurstRate29,\n    settingFov28,\n    settingProtune34,\n    settingEvComp39,\n    settingWhiteBalance35,\n    settingIsoMin76,\n    settingIsoMax37,\n    settingSharpness38,\n    settingColor36,\n];\n\nexport const settingSuperPhoto109: SettingMetadata = {\n    id: 0x6d, // 109\n    label: 'Super Photo',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Auto',\n        },\n        {\n            id: 0x2,\n            label: 'HDR On',\n        },\n    ],\n};\n\nexport const settingShutter97: SettingMetadata = {\n    id: 0x61, // 97\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x1,\n            label: '1/125',\n        },\n        {\n            id: 0x2,\n            label: '1/250',\n        },\n        {\n            id: 0x3,\n            label: '1/500',\n        },\n        {\n            id: 0x4,\n            label: '1/1000',\n        },\n        {\n            id: 0x5,\n            label: '1/2000',\n        },\n    ],\n};\n\nexport const photoSingleModeKnownSettings: SettingMetadata[] = [\n    settingFov17,\n    settingSuperPhoto109,\n    settingProtune21,\n    settingShutter97,\n    settingEvComp26,\n    settingWhiteBalance22,\n    settingIsoMin75,\n    settingIsoMax24,\n    settingSharpness25,\n    settingColor23,\n];\n\nexport const settingBeeps87: SettingMetadata = {\n    id: 0x57, // 87\n    label: 'Beeps',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Mute',\n        },\n        {\n            id: 0x64, // 100\n            label: 'High',\n        },\n        {\n            id: 0x46, // 70\n            label: 'Medium',\n        },\n        {\n            id: 0x28, // 40\n            label: 'Low',\n        },\n    ],\n};\n\nexport const settingDefaultMode89: SettingMetadata = {\n    id: 0x59, // 89\n    label: 'Default Mode',\n    length: 1,\n    values: [\n        {\n            id: 0xc, // 12\n            label: 'Video',\n        },\n        {\n            id: 0xf, // 15\n            label: 'Looping',\n        },\n        {\n            id: 0x11, // 17\n            label: 'Photo',\n        },\n        {\n            id: 0x12, // 18\n            label: 'Night',\n        },\n        {\n            id: 0x13, // 19\n            label: 'Burst',\n        },\n        {\n            id: 0x18, // 24\n            label: 'Timewarp Video',\n        },\n        {\n            id: 0xd, // 13\n            label: 'Timelapse Video',\n        },\n        {\n            id: 0x14, // 20\n            label: 'Timelapse Photo',\n        },\n        {\n            id: 0x15, // 21\n            label: 'Nightlapse Photo',\n        },\n    ],\n};\n\nexport const settingLeds91: SettingMetadata = {\n    id: 0x5b, // 91\n    label: 'LEDs',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'All Off',\n        },\n        {\n            id: 0x1,\n            label: 'Front Off Only',\n        },\n        {\n            id: 0x2,\n            label: 'All On',\n        },\n    ],\n};\n\nexport const settingVideoCompression106: SettingMetadata = {\n    id: 0x6a, // 106\n    label: 'Video Compression',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'H264',\n        },\n        {\n            id: 0x1,\n            label: 'HEVC',\n        },\n    ],\n};\n\nexport const settingVoiceControl86: SettingMetadata = {\n    id: 0x56, // 86\n    label: 'Voice Control',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingWakeOnVoice104: SettingMetadata = {\n    id: 0x68, // 104\n    label: 'Wake On Voice',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingVoiceControlLanguage85: SettingMetadata = {\n    id: 0x55, // 85\n    label: 'Voice Control Language',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'English (US)',\n        },\n        {\n            id: 0x1,\n            label: 'English (UK)',\n        },\n        {\n            id: 0xd,\n            label: 'English (India)',\n        },\n        // TODO\n    ],\n};\n\nexport const settingTouchDisplayLandscapeLock112: SettingMetadata = {\n    id: 0x70, // 112\n    label: 'Touch Display Landscape Lock',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Up',\n        },\n        {\n            id: 0x2,\n            label: 'Down',\n        },\n    ],\n};\n\nexport const settingTouchDisplayScreenSaver51: SettingMetadata = {\n    id: 0x33, // 51\n    label: 'Touch Display Screen Saver',\n    length: 1,\n    values: [\n        {\n            id: 0x1,\n            label: '1min',\n        },\n        {\n            id: 0x2,\n            label: '2min',\n        },\n        {\n            id: 0x3,\n            label: '3min',\n        },\n        {\n            id: 0x0,\n            label: 'Never',\n        },\n    ],\n};\n\nexport const settingTouchDisplayBrightness88: SettingMetadata = {\n    id: 0x58, // 88\n    label: 'Touch Display Brightness',\n    length: 1,\n    values: [\n        {\n            id: 0x64, // 100\n            label: '100%',\n        },\n        {\n            id: 0x50, // 80\n            label: '80%',\n        },\n        {\n            id: 0xa,\n            label: '10%',\n        },\n        // TODO This is supposed to be slider\n    ],\n};\n\nexport const settingRegionalGps83: SettingMetadata = {\n    id: 0x53, // 83\n    label: 'Regional GPS',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingRegionalLanguage84: SettingMetadata = {\n    id: 0x54, // 84\n    label: 'Regional Language',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'English',\n        },\n        {\n            id: 0x6,\n            label: 'French',\n        },\n        // TODO\n    ],\n};\n\n/*\nRegional Video format\n    NTSC\n    PAL\n    TODO CHANGED VALUES:\n        // Not sure which one means this setting\n        42 = 5 -> 6\n        57 = 0 -> 1\n\n*/\n\nexport const generalSettings: SettingMetadata[] = [\n    settingBeeps87,\n    settingDefaultMode89,\n    settingLeds91,\n    settingVideoCompression106,\n    settingVoiceControl86,\n    settingWakeOnVoice104,\n    settingVoiceControlLanguage85,\n    settingTouchDisplayLandscapeLock112,\n    settingTouchDisplayScreenSaver51,\n    settingTouchDisplayBrightness88,\n    settingRegionalGps83,\n    settingRegionalLanguage84,\n];\n\nexport const allKnownSettings: SettingMetadata[] = [\n    ...videoModeKnownSettings,\n    ...loopingModeKnownSettings,\n    ...timewarpModeKnownSettings,\n    ...timelapseVideoModeKnownSettings,\n    ...timelapsePhotoModeKnownSettings,\n    ...nightlapseModeKnownSettings,\n    ...photoNightModeKnownSettings,\n    ...photoBurstModeKnownSettings,\n    ...photoSingleModeKnownSettings,\n    ...generalSettings,\n];\n","import { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { functionQueue } from 'store/goproBluetoothSlice';\nimport { RootState } from 'store/store';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { SettingMetadata } from './goproSettingsMetadata';\n\ntype CommandData = number[];\nexport async function sendSettingCommand(commandData: CommandData) {\n    await functionQueue(async () => {\n        const { characteristics } = bluetoothDeviceState;\n        if (!characteristics) throw new Error('no characteristics');\n        const { settingsCharacteristic } = characteristics;\n        await settingsCharacteristic.writeValue(new Uint8Array(commandData));\n    }, sendSettingCommand);\n}\n\nexport const setSettingValue = createAsyncThunk<void, { setting: SettingMetadata; valueId: number }, { state: RootState }>('goproSettings/setSettingValue', async (props) => {\n    const commandData: number[] = [];\n    commandData.push(props.setting.length + 2);\n    commandData.push(props.setting.id);\n    commandData.push(props.setting.length);\n    for (let i = 0; i < props.setting.length; i++) {\n        // eslint-disable-next-line no-bitwise\n        commandData.push((props.valueId >> (i * 8)) & 0xff);\n    }\n    await sendSettingCommand(commandData);\n});\n","import { useState } from 'react';\nimport { SettingMetadata, videoModeKnownSettings } from 'store/goproBluetoothServiceActions/goproSettingsMetadata';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport { Container, Dialog, DialogTitle, FormControl, InputLabel, MenuItem, Paper, Select, SelectChangeEvent } from '@mui/material';\nimport { setSettingValue } from 'store/goproBluetoothServiceActions/goproSettingsActions';\n\nconst useStyles = makeStyles()({\n    temp: {\n        display: 'flex',\n    },\n});\n\nconst SettingsPreview: React.FC = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const handleCloseModal = () => setIsModalOpen(false);\n    const handleOpenModal = () => setIsModalOpen(true);\n    const [previewElevation, setPreviewElevation] = useState(1);\n    useStyles();\n    return (\n        <>\n            <SettingsPreviewModal isOpen={isModalOpen} onClose={handleCloseModal} settings={videoModeKnownSettings} />\n            <Container maxWidth=\"sm\" sx={{ width: 'fit-content', minWidth: '40vw' }}>\n                <Paper elevation={previewElevation} onMouseOver={() => setPreviewElevation(3)} onMouseOut={() => setPreviewElevation(1)} onClick={handleOpenModal}>\n                    <p style={{ textAlign: 'center' }}>\n                        2.7K|60|W\n                        <br />\n                        PT, ICON, ICON\n                    </p>\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\ninterface IPropss {\n    isOpen: boolean;\n    onClose: () => void;\n    settings: SettingMetadata[];\n}\n\nconst SettingsPreviewModal: React.FC<IPropss> = (props) => {\n    const { isOpen, onClose, settings } = props;\n    return (\n        <>\n            <Dialog open={isOpen} onClose={onClose}>\n                <DialogTitle>Change current mode settings</DialogTitle>\n                {settings.map((setting) => (\n                    <SingleSetting key={setting.id} setting={setting} />\n                ))}\n                <div>actual view todo</div>\n            </Dialog>\n        </>\n    );\n};\n\nexport default SettingsPreview;\n\ninterface IProps {\n    setting: SettingMetadata;\n}\n\nconst SingleSetting: React.FC<IProps> = (props) => {\n    const dispatch = useAppDispatch();\n    const { settings: settings2 } = useAppSelector((state) => state.goproSettingsReducer);\n    // goproBluetooth.goproBluetoothDeviceCommandsState\n\n    const { setting } = props;\n    const currentSettingValue = settings2[setting.id];\n\n    const handleChange = (event: SelectChangeEvent) => {\n        const selectedSettingValue = parseInt(event.target.value, 10);\n        dispatch(setSettingValue({ setting, valueId: selectedSettingValue }));\n        // TODO redux state update\n        // setAge(event.target.value);\n        // TODO this is on click setting change\n        // dispatch setting change, input setting and value\n\n        // TODO subscribe to settings changes\n    };\n    useStyles();\n\n    if (!currentSettingValue) return <div>something went wrong... known setting missing</div>;\n    return (\n        <>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                <InputLabel id=\"demo-simple-select-standard-label\">{setting.label}</InputLabel>\n                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={currentSettingValue.value.toString()} onChange={handleChange} label={setting.label}>\n                    {setting.values.map((value) => (\n                        <MenuItem key={value.id} value={value.id}>\n                            {value.label}\n                        </MenuItem>\n                    ))}\n                    {/* <MenuItem value={10}>Ten</MenuItem>\n                    <MenuItem value={20}>Twenty</MenuItem>\n                    <MenuItem value={30}>Thirty</MenuItem> */}\n                </Select>\n            </FormControl>\n        </>\n    );\n};\n","import { statusApState69, statusInternalBatteryPercentage70 } from 'store/goproBluetoothServiceActions/goproStatusMetadata';\nimport {\n    apControlWiFiApOff,\n    apControlWiFiApOn,\n    goproLegacyPresetsLoadGroupPhotoCommand,\n    goproLegacyPresetsLoadGroupTimelapseCommand,\n    goproLegacyPresetsLoadGroupVideoCommand,\n    goproSleepCommand,\n} from 'store/goproBluetoothSlice';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\nimport RecordInactiveIcon from '@mui/icons-material/RadioButtonChecked';\n// import SignalWifi0BarIcon from '@mui/icons-material/SignalWifi0Bar';\n// import SignalWifi1BarIcon from '@mui/icons-material/SignalWifi1Bar';\n// import SignalWifi2BarIcon from '@mui/icons-material/SignalWifi2Bar';\n// import SignalWifi3BarIcon from '@mui/icons-material/SignalWifi3Bar';\n// import SignalWifi4BarIcon from '@mui/icons-material/SignalWifi4Bar';\nimport SignalWifiOffIcon from '@mui/icons-material/SignalWifiOff';\nimport TimelapseVideoIcon from '@mui/icons-material/SwitchVideo';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport WifiIcon from '@mui/icons-material/Wifi';\nimport { Button, Container, IconButton, Paper, Typography } from '@mui/material';\n\nimport SettingsPreview from './SettingsPreview';\n\nconst useStyles = makeStyles()({\n    pageWrapper: {\n        display: 'flex',\n        height: '100%',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    topControls: {\n        width: '100%',\n    },\n    bottomControls: {\n        width: '100%',\n    },\n    bottomCenteredButtons: {\n        width: '100%',\n        alignSelf: 'flex-end',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        flexDirection: 'row',\n    },\n    alignLeftToRight: {\n        display: 'flex',\n    },\n    button: {\n        margin: '0.5rem',\n    },\n    recordButton: {\n        margin: '0.5rem',\n        '& svg': {\n            fontSize: '5rem',\n        },\n    },\n    floatLeft: {\n        flex: 1,\n    },\n    floatRight: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\n// Material ui button with camera icon in it\nconst MainModeView: React.FC = () => {\n    const { classes } = useStyles();\n    const statuses = useAppSelector((state) => state.goproSettingsReducer.statuses);\n    const isWifiApEnabled = statuses[statusApState69.id] === 1;\n    const batteryPercentage = statuses[statusInternalBatteryPercentage70.id];\n    const dispatch = useAppDispatch();\n    const handlePowerButtonClick = () => {\n        dispatch(goproSleepCommand());\n    };\n    const handleWiFiButtonClick = () => {\n        if (isWifiApEnabled) {\n            dispatch(apControlWiFiApOff());\n        } else {\n            dispatch(apControlWiFiApOn());\n        }\n    };\n    const handlePhotoModeButtonClick = () => {\n        dispatch(goproLegacyPresetsLoadGroupPhotoCommand());\n    };\n    const handleVideoModeButtonClick = () => {\n        dispatch(goproLegacyPresetsLoadGroupVideoCommand());\n    };\n    const handleTimelapseModeButtonClick = () => {\n        dispatch(goproLegacyPresetsLoadGroupTimelapseCommand());\n    };\n\n    return (\n        <>\n            <div className={classes.pageWrapper}>\n                <div className={classes.topControls}>\n                    <br />\n                    <Container sx={{ width: 'fit-content' }}>\n                        <Paper sx={{ padding: '0.4em' }} elevation={2}>\n                            <Typography variant=\"h4\">Le camera</Typography>\n                        </Paper>\n                        <IconButton onClick={handlePowerButtonClick}>\n                            <PowerSettingsNewIcon />\n                        </IconButton>\n                        <IconButton onClick={handleWiFiButtonClick}>{isWifiApEnabled ? <WifiIcon /> : <SignalWifiOffIcon />}</IconButton>\n                        <p>Mode: Video</p>\n                        <p>Storage left: 07:23</p>\n                        <p>Battery: {batteryPercentage}%</p>\n                    </Container>\n                </div>\n                <div className={classes.bottomControls}>\n                    <SettingsPreview />\n                    <div className={classes.bottomCenteredButtons}>\n                        <Button onClick={handleTimelapseModeButtonClick} className={classes.button} aria-label=\"Timelapse mode\" color=\"primary\" variant=\"contained\">\n                            <TimelapseVideoIcon />\n                        </Button>\n\n                        <Button onClick={handleVideoModeButtonClick} className={classes.button} aria-label=\"Video mode\" color=\"primary\" variant=\"contained\">\n                            <VideocamIcon />\n                        </Button>\n                        <Button onClick={handlePhotoModeButtonClick} className={classes.button} aria-label=\"Photo mode\" color=\"primary\" variant=\"contained\">\n                            <PhotoCameraIcon />\n                        </Button>\n                    </div>\n                    <div className={classes.alignLeftToRight}>\n                        <div className={classes.floatLeft} />\n                        <div className={classes.recordButton}>\n                            <IconButton aria-label=\"Record button\" color=\"error\">\n                                <RecordInactiveIcon />\n                            </IconButton>\n                        </div>\n                        <div className={classes.floatRight}>\n                            <Typography variant=\"h6\">01:14</Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default MainModeView;\n","import { Button } from '@mui/material';\n\nimport {\n    analyticsSetThirdPartyClient,\n    apControlWiFiApOff,\n    apControlWiFiApOn,\n    goproForceShutdownCommand,\n    goproGetHardwareInfoCommand,\n    goproHiLightTagCommand,\n    goproLocateOffCommand,\n    goproLocateOnCommand,\n    goproSleepCommand,\n    openGoProGetVersion,\n    presetsLoad4KTripod,\n    presetsLoad53KTripod,\n    presetsLoadActivity,\n    presetsLoadActivityEB,\n    presetsLoadBasic,\n    presetsLoadBurstPhoto,\n    presetsLoadCinematic,\n    presetsLoadCinematicEB,\n    presetsLoadGroupPhoto,\n    presetsLoadGroupTimelapse,\n    presetsLoadGroupVideo,\n    presetsLoadLiveBurst,\n    presetsLoadNightLapse,\n    presetsLoadNightPhoto,\n    presetsLoadPhoto,\n    presetsLoadSloMoEB,\n    presetsLoadStandard,\n    presetsLoadStandardEB,\n    presetsLoadTimeLapse,\n    presetsLoadTimeWarp,\n    presetsLoadUltraSloMo,\n    setShutterOffCommand,\n    setShutterOnCommand,\n} from '../store/goproBluetoothSlice';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\n\nconst AllCommandsButtons: React.FC = () => {\n    const goproBluetooth = useAppSelector((state) => state.goproBluetoothReducer);\n    const dispatch = useAppDispatch();\n    return (\n        <>\n            <div>{JSON.stringify(goproBluetooth.goproBluetoothDeviceCommandsState.getHardwareInfo)}</div>\n            <Button onClick={() => dispatch(goproSleepCommand())}>Sleep command</Button>\n            <Button onClick={() => dispatch(goproForceShutdownCommand())}>goproForceShutdownCommand</Button>\n            <Button onClick={() => dispatch(goproHiLightTagCommand())}>goproHiLightTagCommand</Button>\n            <Button onClick={() => dispatch(goproLocateOnCommand())}>goproLocateOnCommand</Button>\n            <Button onClick={() => dispatch(goproLocateOffCommand())}>goproLocateOffCommand</Button>\n            <Button onClick={() => dispatch(goproGetHardwareInfoCommand())}>Get hardware info command</Button>\n            <Button onClick={() => dispatch(setShutterOnCommand())}>setShutterOnCommand</Button>\n            <Button onClick={() => dispatch(setShutterOffCommand())}>setShutterOffCommand</Button>\n            <Button onClick={() => dispatch(apControlWiFiApOff())}>apControlWiFiApOff</Button>\n            <Button onClick={() => dispatch(apControlWiFiApOn())}>apControlWiFiApOn</Button>\n            <Button onClick={() => dispatch(presetsLoadGroupVideo())}>presetsLoadGroupVideo</Button>\n            <Button onClick={() => dispatch(presetsLoadGroupPhoto())}>presetsLoadGroupPhoto</Button>\n            <Button onClick={() => dispatch(presetsLoadGroupTimelapse())}>presetsLoadGroupTimelapse</Button>\n            <Button onClick={() => dispatch(presetsLoadStandard())}>presetsLoadStandard</Button>\n            <Button onClick={() => dispatch(presetsLoadActivity())}>presetsLoadActivity</Button>\n            <Button onClick={() => dispatch(presetsLoadCinematic())}>presetsLoadCinematic</Button>\n            <Button onClick={() => dispatch(presetsLoadUltraSloMo())}>presetsLoadUltraSloMo</Button>\n            <Button onClick={() => dispatch(presetsLoadBasic())}>presetsLoadBasic</Button>\n            <Button onClick={() => dispatch(presetsLoadPhoto())}>presetsLoadPhoto</Button>\n            <Button onClick={() => dispatch(presetsLoadLiveBurst())}>presetsLoadLiveBurst</Button>\n            <Button onClick={() => dispatch(presetsLoadBurstPhoto())}>presetsLoadBurstPhoto</Button>\n            <Button onClick={() => dispatch(presetsLoadNightPhoto())}>presetsLoadNightPhoto</Button>\n            <Button onClick={() => dispatch(presetsLoadTimeWarp())}>presetsLoadTimeWarp</Button>\n            <Button onClick={() => dispatch(presetsLoadTimeLapse())}>presetsLoadTimeLapse</Button>\n            <Button onClick={() => dispatch(presetsLoadNightLapse())}>presetsLoadNightLapse</Button>\n            <Button onClick={() => dispatch(presetsLoadStandardEB())}>presetsLoadStandardEB</Button>\n            <Button onClick={() => dispatch(presetsLoadActivityEB())}>presetsLoadActivityEB</Button>\n            <Button onClick={() => dispatch(presetsLoadCinematicEB())}>presetsLoadCinematicEB</Button>\n            <Button onClick={() => dispatch(presetsLoadSloMoEB())}>presetsLoadSloMoEB</Button>\n            <Button onClick={() => dispatch(presetsLoad4KTripod())}>presetsLoad4KTripod</Button>\n            <Button onClick={() => dispatch(presetsLoad53KTripod())}>presetsLoad53KTripod</Button>\n            <Button onClick={() => dispatch(analyticsSetThirdPartyClient())}>analyticsSetThirdPartyClient</Button>\n            <Button onClick={() => dispatch(openGoProGetVersion())}>openGoProGetVersion</Button>\n        </>\n    );\n};\n\nexport default AllCommandsButtons;\n","import MainModeView from 'components/MainModeView';\nimport React from 'react';\nimport { gattConnect, requestDevice } from 'store/goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { tempSettingsDump, tempStatusesDump } from 'store/goproBluetoothSlice';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport { Box, Button, Container, Typography } from '@mui/material';\n\nimport AllCommandsButtons from './components/AllCommandsButtons';\nimport { useAppDispatch, useAppSelector } from './store/hooks';\n\nconst useStyles = makeStyles()({\n    flexContent: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        maxHeight: '-webkit-fill-available',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nconst App: React.FC = () => {\n    const { classes } = useStyles();\n    const goproBluetooth = useAppSelector((state) => state.goproBluetoothReducer);\n    const dispatch = useAppDispatch();\n    if (window.location.protocol === 'http:') {\n        return <div>Bluetooth is not supported for http pages</div>;\n    }\n    if (typeof navigator.bluetooth === 'undefined') {\n        return <div>bluetooth not found for this browser</div>;\n    }\n    if (!goproBluetooth.isDeviceSelected) {\n        if (goproBluetooth.isRequestingDevice) {\n            return <div>Select Gopro bluetooth device from prompt</div>;\n        }\n        return (\n            <div className={classes.flexContent}>\n                <Container maxWidth=\"sm\">\n                    <Box sx={{ my: 4 }}>\n                        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                            Search for GoPro\n                        </Typography>\n                        <Button onClick={() => dispatch(requestDevice())}>Search</Button>\n                        {goproBluetooth.error ? <div>{goproBluetooth.error}</div> : null}\n                    </Box>\n                </Container>\n                <MainModeView />\n            </div>\n        );\n    }\n    if (!goproBluetooth.gattConnected) {\n        if (goproBluetooth.isGattConnecting) {\n            return <div>Connecting to bluetooth device</div>;\n        }\n        return (\n            <div>\n                <Container maxWidth=\"sm\">\n                    <Box sx={{ my: 4 }}>\n                        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                            Connect to {goproBluetooth.deviceName}\n                        </Typography>\n                        <Button onClick={() => dispatch(gattConnect())}>Connect</Button>\n                        {goproBluetooth.error ? <div>{goproBluetooth.error}</div> : null}\n                    </Box>\n                </Container>\n            </div>\n        );\n    }\n    // TODO need a concept how could switching between modes look\n    // Imitating Gopro UI doesn't really work, since we don't have preview here\n    return (\n        <div className={classes.flexContent}>\n            <Container maxWidth=\"sm\">\n                <Box sx={{ my: 4 }}>\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                        Connected to &quot;{goproBluetooth.deviceName}&quot;\n                    </Typography>\n                    <Button onClick={() => dispatch(tempSettingsDump())}>settings dump</Button>\n                    <Button onClick={() => dispatch(tempStatusesDump())}>statuses dump</Button>\n                    {(window as unknown as { allButtons: boolean }).allButtons ? <AllCommandsButtons /> : null}\n                </Box>\n            </Container>\n            <MainModeView />\n            {/* <div columns=\"1fr\" rows=\"65px 1fr 45px\" areas={['header', 'content', 'footer']}>\n                <div area=\"header\">\n                    <Header />\n                </div>\n                <div area=\"content\">\n                    <Content />\n                    <FindCamera />\n                </div>\n                <div area=\"footer\">Footer</div>\n            </div> */}\n        </div>\n    );\n};\n\nexport default App;\n","import { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport { ThemeProvider, useTheme } from '@mui/material';\n\nimport { store } from './store/store';\nimport App from './App';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const AppProvider: React.FC = () => {\n    const theme = useTheme();\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <ToastContainer />\n                <App />\n            </ThemeProvider>\n        </Provider>\n    );\n};\n","// src/client/build/register.ts\nimport { Workbox, messageSW } from \"workbox-window\";\nvar autoUpdateMode = \"false\";\nvar auto = autoUpdateMode === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n  let wb;\n  let registration;\n  const updateServiceWorker = async (reloadPage = true) => {\n    if (!auto) {\n      if (reloadPage) {\n        wb == null ? void 0 : wb.addEventListener(\"controlling\", (event) => {\n          if (event.isUpdate)\n            window.location.reload();\n        });\n      }\n      if (registration && registration.waiting) {\n        await messageSW(registration.waiting, { type: \"SKIP_WAITING\" });\n      }\n    }\n  };\n  if (\"serviceWorker\" in navigator) {\n    wb = new Workbox(\"/Gopro-Bluetooth-Remote/sw.js\", { scope: \"/Gopro-Bluetooth-Remote/\" });\n    wb.addEventListener(\"activated\", (event) => {\n      if (event.isUpdate)\n        auto && window.location.reload();\n      else\n        onOfflineReady == null ? void 0 : onOfflineReady();\n    });\n    if (!auto) {\n      const showSkipWaitingPrompt = () => {\n        onNeedRefresh == null ? void 0 : onNeedRefresh();\n      };\n      wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n      wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n    }\n    wb.register({ immediate }).then((r) => {\n      registration = r;\n      onRegistered == null ? void 0 : onRegistered(r);\n    }).catch((e) => {\n      onRegisterError == null ? void 0 : onRegisterError(e);\n    });\n  }\n  return updateServiceWorker;\n}\nexport {\n  registerSW\n};\n","/// <reference types=\"vite/client\" />\n/// <reference types=\"vite-plugin-pwa/client\" />\n\nimport { AppProvider } from 'AppProvider';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line import/no-unresolved\nimport { registerSW } from 'virtual:pwa-register';\n\n// import * as serviceWorker from './serviceWorker';\n\nconst intervalMS = 60 * 60 * 1000;\n\n// eslint-disable-next-line react-hooks/rules-of-hooks\nregisterSW({\n    onRegistered(r) {\n        if (!r) return;\n        setInterval(() => {\n            r.update();\n        }, intervalMS);\n    },\n});\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"names":["bluetoothDeviceState","dispatch","packetData","commandResponse","parseCommandResponse","responseCode","CommandResponseCode","success","error","invalidParameter","unknown","response","length","Error","commandId","errorCode","parseCommandResponseCode","data","slice","CommandId","SetShutter","Sleep","APControl","GetHardwareInfo","PresetsLoadGroup","PresetsLoad","Analytics","OpenGoProGetVersion","goproGetHardwareInfoCommand","goproBluetoothSlice","actions","getHardwareInfoResponse","parseGetHardwareInfoResponse","openGoProGetVersion","openGoProGetVersionResponse","majorVersion","minorVersion","parseOpenGoProGetVersionResponse","dataIndex","lengthOfModelNumber","modelNumber","Array","fill","map","lengthOfModelName","modelName","String","fromCharCode","join","lengthOfBoardType","boardType","lengthOfFirmwareVersion","firmwareVersion","lengthOfSerialNumber","serialNumber","lengthOfApSsid","apSsid","lengthOfApMacAddress","apMacAddress","lengthOfMajorVersion","reduce","acc","cur","lengthOfMinorVersion","booleanValue","id","label","statusInternalCameraPresent1","description","type","values","statusInternalBatteryLevel2","statusExternalBatteryPresent3","statusExternalBatteryLevel4","statusSystemHot6","statusSystemBusy8","statusQuickCaptureActive9","statusEncodingActive10","statusLcdLockActive11","statusVideoProgressCounter13","statusEnable17","statusState19","statusType20","statusPairTime21","statusState22","statusScanTimeMsec23","statusProvisionStatus24","statusRemoteControlVersion26","statusRemoteControlConnected27","statusPairing28","statusWlanSsid29","statusApSsid30","statusAppCount31","statusEnable32","statusSdStatus33","statusRemainingPhotos34","statusRemainingVideoTime35","statusNumGroupPhotos36","statusNumGroupVideos37","statusNumTotalPhotos38","statusNumTotalVideos39","statusDateTime40","statusOtaStatus41","statusDownloadCancelRequestPending42","statusCameraLocateActive45","statusMultiShotCountDown49","statusRemainingSpace54","statusSupported55","statusWifiBars56","statusCurrentTimeMsec57","statusNumHilights58","statusLastHilightTimeMsec59","statusNextPollMsec60","statusInContextualMenu63","statusRemainingTimelapseTime64","statusExposureSelectType65","statusExposureSelectX66","statusExposureSelectY67","statusGpsStatus68","statusApState69","statusInternalBatteryPercentage70","statusAccMicStatus74","statusDigitalZoom75","statusWirelessBand76","statusDigitalZoomActive77","statusMobileFriendlyVideo78","statusFirstTimeUse79","statusBand5ghzAvail81","statusSystemReady82","statusBattOkayForOta83","statusVideoLowTempAlert85","statusActualOrientation86","statusThermalMitigationMode87","statusZoomWhileEncoding88","statusCurrentMode89","statusLogsReady91","statusTimewarp1xActive92","statusActiveVideoPresets93","statusActivePhotoPresets94","statusActiveTimelapsePresets95","statusActivePresetsGroup96","statusActivePreset97","statusPresetModified98","statusRemainingLiveBursts99","statusNumTotalLiveBursts100","statusCaptureDelayActive101","statusMediaModMicStatus102","statusTimewarpSpeedRampActive103","statusLinuxCoreActive104","statusCameraLensType105","statusVideoHindsightCaptureActive106","statusScheduledPreset107","statusScheduledEnabled108","statusCreatingPreset109","statusMediaModStatus110","statusTurboTransfer113","allKnownStatuses","initialState","settings","statuses","isFetching","goproSettingsSlice","createSlice","name","reducers","settingsReceived","state","action","payload","settingsRequested","settingsRequestFailed","statusesReceived","goproSettingsReducer","reducer","createAsyncThunk","characteristics","queryCharacteristic","writeValue","Uint8Array","queryResponse","parseQueryResponse","queryId","parseQueryResponseCode","statusesOrSettings","parseStatusesOrSettingsFromData","setting","readOneStatusOrSetting","push","value","settingId","dataLength","settingValue","QueryId","getSettingValue","getStatusValue","registerForSettingUpdates","registerForStatusUpdates","unregisterForSettingUpdates","unregisterForStatusUpdates","settingUpdate","statusUpdate","receivedSettingsReduceToKeyValue","sAcc","sCur","receivedStatusesReduceToKeyValue","status","valueLength","knownStatus","find","s","valueStr","v","_dispatch","_packetData","onPacket","packetDataAccumulator","messageLength","ev","characteristic","target","packet","readSinglePacket","header","isStart","then","log","catch","packetHeader","parsePacketHeader","from","buffer","headerSizeBytes","byte1","getUint8","continuationIndex","startType","byte2","byte3","requestDevice","_","device","navigator","bluetooth","filters","services","optionalServices","ongattserverdisconnected","undefined","gattServer","gattDisconnected","gattConnect","deviceName","gatt","connect","wifiApServicePromise","getPrimaryService","wifiApSsidCharacteristicPromise","x","getCharacteristic","wifiApPasswordCharacteristicPromise","wifiApPowerCharacteristicPromise","wifiApStateCharacteristicPromise","cqServicePromise","commandCharacteristicPromise","commandResponseCharacteristicPromise","settingsCharacteristicPromise","settingsResponseCharacteristicPromise","queryCharacteristicPromise","queryResponseCharacteristicPromise","wifiApSsidCharacteristic","wifiApPasswordCharacteristic","wifiApPowerCharacteristic","wifiApStateCharacteristic","commandCharacteristic","commandResponseCharacteristic","settingsCharacteristic","settingsResponseCharacteristic","queryResponseCharacteristic","oncharacteristicvaluechanged","goproBlePacketDataReaderProvider","commandResponseReceiverProvider","startNotifications","queryResponseReceiverProvider","settingsResponseReceiverProvider","subscribeToStatusChanges","keys","subscribeToSettingsChanges","chunkIndex","dataCopy","unshift","getPacketHeaderForData","chunk","splice","writeGoProPacketDataRaw","settingsIds","writeGoProPacketData","statusIds","tempSettingsDump","tempStatusesDump","lastQueuedPromiseArr","func","context","lastQueuedPromise","p","promise","Promise","resolve","store","getState","systemBusy","encodingActive","systemReady","isDeviceReady","unsubscribe","subscribe","commandData","waitUntilDeviceReady","functionQueue","sendCommandAction","sendCommand","goproForceShutdownCommand","goproHiLightTagCommand","goproLocateOnCommand","goproLocateOffCommand","goproLegacyPresetsLoadGroupVideoCommand","goproLegacyPresetsLoadGroupPhotoCommand","goproLegacyPresetsLoadGroupTimelapseCommand","goproSleepCommand","setShutterOffCommand","setShutterOnCommand","apControlWiFiApOff","apControlWiFiApOn","presetsLoadGroupVideo","presetsLoadGroupPhoto","presetsLoadGroupTimelapse","presetsLoadStandard","presetsLoadActivity","presetsLoadCinematic","presetsLoadUltraSloMo","presetsLoadBasic","presetsLoadPhoto","presetsLoadLiveBurst","presetsLoadBurstPhoto","presetsLoadNightPhoto","presetsLoadTimeWarp","presetsLoadTimeLapse","presetsLoadNightLapse","presetsLoadStandardEB","presetsLoadActivityEB","presetsLoadCinematicEB","presetsLoadSloMoEB","presetsLoad4KTripod","presetsLoad53KTripod","analyticsSetThirdPartyClient","isRequestingDevice","isDeviceSelected","gattConnected","isGattConnecting","goproBluetoothDeviceCommandsState","isCommandInAction","getHardwareInfo","openGoProVersion","extraReducers","builder","addCase","pending","fulfilled","rejected","message","goproBluetoothReducer","configureStore","devTools","useAppDispatch","useDispatch","useAppSelector","useSelector","makeStyles","withStyles","createMakeAndWithStyles","useTheme","settingResolution2","settingFps3","settingFov4","settingLowLight8","settingProtune10","settingWhiteBalance11","settingColor12","settingIsoMax13","settingSharpness14","settingEvComp15","settingShutter73","settingStabilization78","settingMicrophone80","settingRawAudio81","settingIsoMin102","settingVideoTimer107","settingResolutionFormat108","videoModeKnownSettings","settingInterval6","loopingModeKnownSettings","settingSpeed111","timewarpModeKnownSettings","settingInterval5","timelapseVideoModeKnownSettings","settingInterval30","settingFov28","settingEvComp39","settingWhiteBalance35","settingIsoMin76","settingIsoMax37","settingSharpness38","settingColor36","settingProtune34","timelapsePhotoModeKnownSettings","settingShutter31","settingInterval32","settingRaw99","nightlapseModeKnownSettings","settingShutter19","settingFov17","settingEvComp26","settingWhiteBalance22","settingIsoMin75","settingIsoMax24","settingSharpness25","settingColor23","settingProtune21","settingRaw98","photoNightModeKnownSettings","settingBurstRate29","photoBurstModeKnownSettings","settingSuperPhoto109","settingShutter97","photoSingleModeKnownSettings","settingBeeps87","settingDefaultMode89","settingLeds91","settingVideoCompression106","settingVoiceControl86","settingWakeOnVoice104","settingVoiceControlLanguage85","settingTouchDisplayLandscapeLock112","settingTouchDisplayScreenSaver51","settingTouchDisplayBrightness88","settingRegionalGps83","settingRegionalLanguage84","generalSettings","sendSettingCommand","setSettingValue","props","i","valueId","useStyles","temp","display","SettingsPreview","isModalOpen","setIsModalOpen","useState","handleCloseModal","handleOpenModal","previewElevation","setPreviewElevation","width","minWidth","textAlign","SettingsPreviewModal","isOpen","onClose","SingleSetting","settings2","currentSettingValue","handleChange","event","selectedSettingValue","parseInt","m","toString","pageWrapper","height","flexDirection","justifyContent","alignItems","topControls","bottomControls","bottomCenteredButtons","alignSelf","alignLeftToRight","button","margin","recordButton","fontSize","floatLeft","flex","floatRight","MainModeView","classes","isWifiApEnabled","batteryPercentage","handlePowerButtonClick","handleWiFiButtonClick","handlePhotoModeButtonClick","handleVideoModeButtonClick","handleTimelapseModeButtonClick","padding","PowerSettingsNewIcon","WifiIcon","SignalWifiOffIcon","TimelapseVideoIcon","VideocamIcon","PhotoCameraIcon","RecordInactiveIcon","AllCommandsButtons","goproBluetooth","JSON","stringify","flexContent","position","maxHeight","App","window","location","protocol","my","allButtons","AppProvider","theme","messageSW","Workbox","intervalMS","registerSW","onRegistered","r","update","ReactDOM","render","document","getElementById"],"mappings":"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"}