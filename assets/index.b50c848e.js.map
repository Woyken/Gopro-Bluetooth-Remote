{"version":3,"file":"index.b50c848e.js","sources":["../../vite/modulepreload-polyfill","../../src/theme/makeStyles.ts","../../src/components/pwa/ReloadToastContent.tsx","../../vite/preload-helper","../../src/components/pwa/useImportPwaRegisterModule.ts","../../src/components/pwa/ServiceWorkerContainer.tsx","../../src/store/goproBleServiceState.ts","../../src/utilities/functionQueue.ts","../../src/store/goproBluetoothServiceActions/goproStatusMetadata.ts","../../src/store/goproBluetoothServiceActions/commands/commands.ts","../../src/store/packetParsing/goproPacketReaderCommand.ts","../../src/store/goproSettingsSlice.ts","../../src/store/packetParsing/goproPacketReaderQuery.ts","../../src/store/packetParsing/goproPacketReaderSetting.ts","../../src/store/packetParsing/goproPacketReader.ts","../../src/store/goproBluetoothServiceActions/commands/queryCommands.ts","../../src/store/goproBluetoothServiceActions/goproBluetoothServiceActions.ts","../../src/store/goproBluetoothSlice.ts","../../src/store/store.ts","../../src/store/hooks.ts","../../src/components/contentPages/ConnectToGoProPage.tsx","../../src/components/contentPages/ErrorPage.tsx","../../src/components/contentPages/SearchForGoProPage.tsx","../../src/hooks/pwaInstallPrompt.ts","../../src/components/InstallPwaButton.tsx","../../src/components/Header.tsx","../../src/store/selectors/bluetoothStateSelectors.ts","../../src/store/goproBluetoothServiceActions/goproSettingsMetadata.ts","../../src/store/selectors/settingsSelectors.ts","../../src/store/selectors/statusSelectors.ts","../../src/components/BatteryPercentageIcon.tsx","../../src/store/goproBluetoothServiceActions/commands/settingsCommands.ts","../../src/components/SettingsPreview.tsx","../../src/components/MainModeView.tsx","../../src/App.tsx","../../src/AppProvider.tsx","../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { createMakeAndWithStyles } from 'tss-react';\n\nimport { useTheme } from '@mui/material';\n\nexport const { makeStyles, withStyles } = createMakeAndWithStyles({ useTheme });\n","import { makeStyles } from 'theme/makeStyles';\n\nimport { Box, Button, Typography } from '@mui/material';\n\nconst useStyles = makeStyles()({\n    flexContent: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n});\n\ninterface IProps {\n    updateServiceWorker: (force: boolean) => void;\n}\n\nexport const ReloadToastContent: React.FC<IProps> = (props) => {\n    const { classes } = useStyles();\n    const handleReloadButton = () => {\n        props.updateServiceWorker(true);\n    };\n    return (\n        <Box className={classes.flexContent}>\n            <Typography variant=\"body1\">App was updated, reload to see the changes</Typography>\n            <Button style={{ display: 'inline' }} onClick={handleReloadButton}>\n                Reload\n            </Button>\n        </Box>\n    );\n};\n","const scriptRel = 'modulepreload';const seen = {};const base = '/Gopro-Bluetooth-Remote/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","/* eslint-disable import/no-unresolved */\nimport { useEffect, useState } from 'react';\n\nexport type ModuleVirtualPwaRegisterReact = typeof import('virtual:pwa-register/react');\n\nexport function useImportPwaRegisterModule() {\n    const [module, setModule] = useState<ModuleVirtualPwaRegisterReact>();\n    useEffect(() => {\n        // Jest will complain a lot about missing virtual:pwa-register module\n        // It's complicated marrying those two together.\n        // Those virtual functions are injected via vite, so they are not available for jest.\n        if (process.env.JEST_WORKER_ID !== undefined) return;\n        import('virtual:pwa-register/react').then(setModule);\n    }, [setModule]);\n    return module;\n}\n","import React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { ReloadToastContent } from './ReloadToastContent';\nimport { ModuleVirtualPwaRegisterReact, useImportPwaRegisterModule } from './useImportPwaRegisterModule';\n\n// It's unlikely that someone will use this app for long periods, but just in case, let's check for updates once in a while.\nconst updateCheckIntervalMS = 60 * 60 * 1000;\n\nexport const ServiceWorkerContainer: React.FC = () => {\n    const pwaRegisterModule = useImportPwaRegisterModule();\n\n    if (!pwaRegisterModule) return null;\n    return <ServiceWorkerContainerSafe pwaRegisterModule={pwaRegisterModule} />;\n};\n\ninterface IProps {\n    pwaRegisterModule: ModuleVirtualPwaRegisterReact;\n}\n\nexport const ServiceWorkerContainerSafe: React.FC<IProps> = ({ pwaRegisterModule }) => {\n    const {\n        offlineReady: [offlineReady],\n        needRefresh: [needRefresh],\n        updateServiceWorker,\n    } = pwaRegisterModule.useRegisterSW({\n        immediate: true,\n        onRegistered(registration) {\n            console.log('SW registered', registration);\n            if (!registration) return;\n            setInterval(() => {\n                registration.update();\n            }, updateCheckIntervalMS);\n        },\n        onRegisterError(error) {\n            console.log('SW registration error', error);\n        },\n    });\n\n    useEffect(() => {\n        if (offlineReady) toast('App was installed and now will work offline');\n    }, [offlineReady]);\n    useEffect(() => {\n        if (needRefresh) toast(<ReloadToastContent updateServiceWorker={updateServiceWorker} />, { autoClose: false });\n    }, [needRefresh, updateServiceWorker]);\n\n    return <div />;\n};\n","interface BluetoothDeviceState {\n    device?: BluetoothDevice;\n    gattServer?: BluetoothRemoteGATTServer;\n    characteristics?: {\n        wifiApSsidCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApPasswordCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApPowerCharacteristic: BluetoothRemoteGATTCharacteristic;\n        wifiApStateCharacteristic: BluetoothRemoteGATTCharacteristic;\n        commandCharacteristic: BluetoothRemoteGATTCharacteristic;\n        commandResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n        settingsCharacteristic: BluetoothRemoteGATTCharacteristic;\n        settingsResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n        queryCharacteristic: BluetoothRemoteGATTCharacteristic;\n        queryResponseCharacteristic: BluetoothRemoteGATTCharacteristic;\n    };\n}\n\nexport const bluetoothDeviceState: BluetoothDeviceState = {};\n","export const lastQueuedPromiseArr: { context: unknown; promise: Promise<void> }[] = [];\n\n/**\n * Enqueue a function to be called after the current function has finished.\n */\nexport async function functionQueue(func: () => Promise<void>, context: unknown) {\n    let lastQueuedPromise = lastQueuedPromiseArr.find((p) => p.context === context);\n    if (!lastQueuedPromise) {\n        lastQueuedPromise = { context, promise: Promise.resolve() };\n        lastQueuedPromiseArr.push(lastQueuedPromise);\n    }\n    lastQueuedPromise.promise = lastQueuedPromise.promise.then(() => func());\n    await lastQueuedPromise.promise;\n}\n","export interface StatusValueMetadata {\n    id: number;\n    label: string;\n}\n\nexport interface StatusMetadata {\n    id: number;\n    label: string;\n    description: string;\n    type: string;\n    values: StatusValueMetadata[];\n}\n\nconst booleanValue: StatusValueMetadata[] = [\n    { id: 0, label: 'False' },\n    { id: 1, label: 'True' },\n];\n\nexport const statusInternalCameraPresent1: StatusMetadata = {\n    id: 1,\n    label: 'Internal camera present',\n    description: 'Is the internal camera present?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusInternalBatteryLevel2: StatusMetadata = {\n    id: 2,\n    label: 'Internal battery level',\n    description: 'Rough approximation of internal battery level in bars',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Zero',\n        },\n        {\n            id: 1,\n            label: 'One',\n        },\n        {\n            id: 2,\n            label: 'Two',\n        },\n        {\n            id: 3,\n            label: 'Three',\n        },\n        {\n            id: 4,\n            label: 'Charging',\n        },\n    ],\n};\n\nexport const statusExternalBatteryPresent3: StatusMetadata = {\n    id: 3,\n    label: 'External battery present',\n    description: 'Is an external battery connected?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusExternalBatteryLevel4: StatusMetadata = {\n    id: 4,\n    label: 'External battery level',\n    description: 'External battery power level in percent',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\n\nexport const statusSystemHot6: StatusMetadata = {\n    id: 6,\n    label: 'System hot',\n    description: 'Is the system currently overheating?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusSystemBusy8: StatusMetadata = {\n    id: 8,\n    label: 'System busy',\n    description: 'Is the camera busy?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusQuickCaptureActive9: StatusMetadata = {\n    id: 9,\n    label: 'Quick capture active',\n    description: 'Is Quick Capture feature enabled?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusEncodingActive10: StatusMetadata = {\n    id: 10,\n    label: 'Encoding active',\n    description: 'Is the system encoding right now?',\n    type: 'boolean',\n    values: booleanValue,\n};\n\nexport const statusLcdLockActive11: StatusMetadata = {\n    id: 11,\n    label: 'Lcd lock active',\n    description: 'Is LCD lock active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusVideoProgressCounter13: StatusMetadata = {\n    id: 13,\n    label: 'Video progress counter',\n    description: 'When encoding video, this is the duration (seconds) of the video so far; 0 otherwise',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: '0s',\n        },\n        {\n            id: 59,\n            label: '59s',\n        },\n    ],\n};\nexport const statusEnable17: StatusMetadata = { id: 17, label: 'Enable', description: 'Are Wireless Connections enabled?', type: 'boolean', values: booleanValue };\nexport const statusState19: StatusMetadata = {\n    id: 19,\n    label: 'State',\n    description: 'The pairing state of the camera',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Success',\n        },\n        {\n            id: 1,\n            label: 'In Progress',\n        },\n        {\n            id: 2,\n            label: 'Failed',\n        },\n        {\n            id: 3,\n            label: 'Stopped',\n        },\n    ],\n};\nexport const statusType20: StatusMetadata = {\n    id: 20,\n    label: 'Type',\n    description: 'The last type of pairing that the camera was engaged in',\n    type: 'integer',\n    values: [\n        {\n            id: 0,\n            label: 'Not Pairing',\n        },\n        {\n            id: 1,\n            label: 'Pairing App',\n        },\n        {\n            id: 2,\n            label: 'Pairing Remote Control',\n        },\n        {\n            id: 3,\n            label: 'Pairing Bluetooth Device',\n        },\n    ],\n};\nexport const statusPairTime21: StatusMetadata = {\n    id: 21,\n    label: 'Pair time',\n    description: 'Time (milliseconds) since boot of last successful pairing complete action',\n    type: 'integer',\n    values: [],\n};\nexport const statusState22: StatusMetadata = {\n    id: 22,\n    label: 'State',\n    description: 'State of current scan for WiFi Access Points. Appears to only change for CAH-related scans',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Never started' },\n        { id: 1, label: 'Started' },\n        { id: 2, label: 'Aborted' },\n        { id: 3, label: 'Canceled' },\n        { id: 4, label: 'Completed' },\n    ],\n};\nexport const statusScanTimeMsec23: StatusMetadata = {\n    id: 23,\n    label: 'Scan time msec',\n    description: 'The time, in milliseconds since boot that the WiFi Access Point scan completed',\n    type: 'integer',\n    values: [],\n};\nexport const statusProvisionStatus24: StatusMetadata = {\n    id: 24,\n    label: 'Provision status',\n    description: 'WiFi AP provisioning state',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Never started' },\n        { id: 1, label: 'Started' },\n        { id: 2, label: 'Aborted' },\n        { id: 3, label: 'Canceled' },\n        { id: 4, label: 'Completed' },\n    ],\n};\nexport const statusRemoteControlVersion26: StatusMetadata = {\n    id: 26,\n    label: 'Remote control version',\n    description: 'Wireless remote control version',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemoteControlConnected27: StatusMetadata = {\n    id: 27,\n    label: 'Remote control connected',\n    description: 'Is a wireless remote control connected?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusPairing28: StatusMetadata = {\n    id: 28,\n    label: 'Pairing',\n    description: 'Wireless Pairing State',\n    type: 'integer',\n    values: [],\n};\nexport const statusWlanSsid29: StatusMetadata = {\n    id: 29,\n    label: 'Wlan ssid',\n    description: 'Provisioned WIFI AP SSID. On BLE connection, value is big-endian byte-encoded int',\n    type: 'string',\n    values: [],\n};\nexport const statusApSsid30: StatusMetadata = {\n    id: 30,\n    label: 'Ap ssid',\n    description: `Camera's WIFI SSID. On BLE connection, value is big-endian byte-encoded int`,\n    type: 'string',\n    values: [],\n};\nexport const statusAppCount31: StatusMetadata = {\n    id: 31,\n    label: 'App count',\n    description: 'The number of wireless devices connected to the camera',\n    type: 'integer',\n    values: [],\n};\nexport const statusEnable32: StatusMetadata = { id: 32, label: 'Enable', description: 'Is Preview Stream enabled?', type: 'boolean', values: booleanValue };\nexport const statusSdStatus33: StatusMetadata = {\n    id: 33,\n    label: 'Sd status',\n    description: 'Primary Storage Status',\n    type: 'integer',\n    values: [\n        { id: -1, label: 'Unknown' },\n        { id: 0, label: 'OK' },\n        { id: 1, label: 'SD Card Full' },\n        { id: 2, label: 'SD Card Removed' },\n        { id: 3, label: 'SD Card Format Error' },\n        { id: 4, label: 'SD Card Busy' },\n        { id: 8, label: 'SD Card Swapped' },\n    ],\n};\nexport const statusRemainingPhotos34: StatusMetadata = {\n    id: 34,\n    label: 'Remaining photos',\n    description: 'How many photos can be taken before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingVideoTime35: StatusMetadata = {\n    id: 35,\n    label: 'Remaining video time',\n    description: 'How many minutes of video can be captured with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumGroupPhotos36: StatusMetadata = {\n    id: 36,\n    label: 'Num group photos',\n    description: 'How many group photos can be taken with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumGroupVideos37: StatusMetadata = {\n    id: 37,\n    label: 'Num group videos',\n    description: 'Total number of group videos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalPhotos38: StatusMetadata = {\n    id: 38,\n    label: 'Num total photos',\n    description: 'Total number of photos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalVideos39: StatusMetadata = {\n    id: 39,\n    label: 'Num total videos',\n    description: 'Total number of videos on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusDateTime40: StatusMetadata = {\n    id: 40,\n    label: 'Date time',\n    description: 'Current date/time (format: %YY%MM%DD%HH%MM%SS, all values in hex)',\n    type: 'string',\n    values: [],\n};\nexport const statusOtaStatus41: StatusMetadata = {\n    id: 41,\n    label: 'Ota status',\n    description: 'The current status of Over The Air (OTA) update',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Idle' },\n        { id: 1, label: 'Downloading' },\n        { id: 2, label: 'Verifying' },\n        { id: 3, label: 'Download Failed' },\n        { id: 4, label: 'Verify Failed' },\n        { id: 5, label: 'Ready' },\n        { id: 6, label: 'GoPro App: Downloading' },\n        { id: 7, label: 'GoPro App: Verifying' },\n        { id: 8, label: 'GoPro App: Download Failed' },\n        { id: 9, label: 'GoPro App: Verify Failed' },\n        { id: 10, label: 'GoPro App: Ready' },\n    ],\n};\nexport const statusDownloadCancelRequestPending42: StatusMetadata = {\n    id: 42,\n    label: 'Download cancel request pending',\n    description: 'Is there a pending request to cancel a firmware update download?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusLegacyCurrentPresetGroup43: StatusMetadata = {\n    id: 43,\n    label: 'Current open preset group',\n    description: 'Looks like legacy status, that represented UI group, doesnt match current UI, probably manually mapped to new UI...',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Legacy Video Group' },\n        { id: 1, label: 'Legacy Photo Group' },\n        { id: 2, label: 'Legacy Multishot Group' },\n    ],\n};\nexport const statusLegacyCurrentPresetGroupChild44: StatusMetadata = {\n    id: 44,\n    label: 'Current open preset group child',\n    description: 'Looks like legacy status, that represented UI group child mode, doesnt match current UI, probably manually mapped to new UI...',\n    type: 'integer',\n    values: [\n        { id: 0, label: '1st child by group (group 0 - video, group 1 - ???, group 2 - burst photo)' },\n        { id: 1, label: '2nd child by group (group 0 - timelapse video, group 1 - photo, group 2 - timelapse photo)' },\n        { id: 2, label: '3rd child by group (group 0 - ???, group 1 - night photo, group 2 - nightlapse photo)' },\n        { id: 3, label: '4th child by group (group 0 - looping video)' },\n        { id: 4, label: '5th child by group (group 0 - timewarp)' },\n    ],\n};\n// status values when changing UI on device\n// photo            44 1 43 1 72 17\n// burst            44 0 43 2 72 19\n// night            44 2 43 1 72 18\n// video            44 0 43 0 71 12\n// looping          44 3 43 0 71 15\n// timewarp         44 4 43 0 73 24\n// timelapse video  44 1 43 0 73 13\n// timelapse photo  44 1 43 2 73 20\n// nightlapse photo 44 2 43 2 73 21\n\n/*\nwhen USB connected:\n43: 7\n44: 255\n */\n\nexport const statusCameraLocateActive45: StatusMetadata = {\n    id: 45,\n    label: 'Camera locate active',\n    description: 'Is locate camera feature active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMultiShotCountDown49: StatusMetadata = {\n    id: 49,\n    label: 'Multi shot count down',\n    description: 'The current timelapse interval countdown value (e.g. 5...4...3...2...1...)',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingSpace54: StatusMetadata = {\n    id: 54,\n    label: 'Remaining space',\n    description: 'Remaining space on the sdcard in Kilobytes',\n    type: 'integer',\n    values: [],\n};\nexport const statusSupported55: StatusMetadata = {\n    id: 55,\n    label: 'Supported',\n    description: 'Is preview stream supported in current recording/flatmode/secondary-stream?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusWifiBars56: StatusMetadata = {\n    id: 56,\n    label: 'Wifi bars',\n    description: 'WiFi signal strength in bars',\n    type: 'integer',\n    values: [],\n};\nexport const statusCurrentTimeMsec57: StatusMetadata = {\n    id: 57,\n    label: 'Current time msec',\n    description: 'System time in milliseconds since system was booted',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumHilights58: StatusMetadata = {\n    id: 58,\n    label: 'Num hilights',\n    description: 'The number of hilights in encoding video (set to 0 when encoding stops)',\n    type: 'integer',\n    values: [],\n};\nexport const statusLastHilightTimeMsec59: StatusMetadata = {\n    id: 59,\n    label: 'Last hilight time msec',\n    description: 'Time since boot (msec) of most recent hilight in encoding video (set to 0 when encoding stops)',\n    type: 'integer',\n    values: [],\n};\nexport const statusNextPollMsec60: StatusMetadata = {\n    id: 60,\n    label: 'Next poll msec',\n    description: 'The min time between camera status updates (msec). Do not poll for status more often than this',\n    type: 'integer',\n    values: [],\n};\nexport const statusInContextualMenu63: StatusMetadata = {\n    id: 63,\n    label: 'In contextual menu',\n    description: 'Is the camera currently in a contextual menu (e.g. Preferences)?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusRemainingTimelapseTime64: StatusMetadata = {\n    id: 64,\n    label: 'Remaining timelapse time',\n    description: 'How many min of Timelapse video can be captured with current settings before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusExposureSelectType65: StatusMetadata = {\n    id: 65,\n    label: 'Exposure select type',\n    description: 'Liveview Exposure Select Mode',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Disabled' },\n        { id: 1, label: 'Auto' },\n        { id: 2, label: 'ISO Lock' },\n        { id: 3, label: 'Hemisphere' },\n    ],\n};\nexport const statusExposureSelectX66: StatusMetadata = {\n    id: 66,\n    label: 'Exposure select x',\n    description: 'Liveview Exposure Select: x-coordinate (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusExposureSelectY67: StatusMetadata = {\n    id: 67,\n    label: 'Exposure select y',\n    description: 'Liveview Exposure Select: y-coordinate (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusGpsStatus68: StatusMetadata = {\n    id: 68,\n    label: 'Gps status',\n    description: 'Does the camera currently have a GPS lock?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusApState69: StatusMetadata = { id: 69, label: 'Ap state', description: 'Is the WiFi radio enabled?', type: 'boolean', values: booleanValue };\nexport const statusInternalBatteryPercentage70: StatusMetadata = {\n    id: 70,\n    label: 'Internal battery percentage',\n    description: 'Internal battery level (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusLegacyLastPhotoMode72: StatusMetadata = {\n    id: 72,\n    label: 'Last photo mode',\n    description: 'Last photo mode in UI',\n    type: 'integer',\n    values: [\n        { id: 17, label: 'Photo' },\n        { id: 19, label: 'Burst' },\n        { id: 18, label: 'Night' },\n    ],\n};\nexport const statusLegacyLastVideoMode71: StatusMetadata = {\n    id: 71,\n    label: 'Last video mode',\n    description: 'Last video mode in UI',\n    type: 'integer',\n    values: [\n        { id: 12, label: 'Video' },\n        { id: 15, label: 'Looping' },\n    ],\n};\nexport const statusLegacyLastTimelapseMode73: StatusMetadata = {\n    id: 73,\n    label: 'Last timelapse mode',\n    description: 'Last timelapse mode in UI',\n    type: 'integer',\n    values: [\n        { id: 24, label: 'Timewarp' },\n        { id: 13, label: 'Timelapse Video' },\n        { id: 20, label: 'Timelapse Photo' },\n        { id: 21, label: 'Nightlapse Photo' },\n    ],\n};\nexport const statusAccMicStatus74: StatusMetadata = {\n    id: 74,\n    label: 'Acc mic status',\n    description: 'Microphone Accesstory status',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Microphone mod not connected' },\n        { id: 1, label: 'Microphone mod connected' },\n        { id: 2, label: 'Microphone mod connected and microphone plugged into Microphone mod' },\n    ],\n};\nexport const statusDigitalZoom75: StatusMetadata = {\n    id: 75,\n    label: 'Digital zoom',\n    description: 'Digital Zoom level (percent)',\n    type: 'percent',\n    values: [\n        { id: 0, label: '0%' },\n        { id: 100, label: '100%' },\n    ],\n};\nexport const statusWirelessBand76: StatusMetadata = {\n    id: 76,\n    label: 'Wireless band',\n    description: 'Wireless Band',\n    type: 'integer',\n    values: [\n        { id: 0, label: '2.4 GHz' },\n        { id: 1, label: '5 GHz' },\n        { id: 2, label: 'Max' },\n    ],\n};\nexport const statusDigitalZoomActive77: StatusMetadata = {\n    id: 77,\n    label: 'Digital zoom active',\n    description: 'Is Digital Zoom feature available?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMobileFriendlyVideo78: StatusMetadata = {\n    id: 78,\n    label: 'Mobile friendly video',\n    description: 'Are current video settings mobile friendly? (related to video compression and frame rate)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusFirstTimeUse79: StatusMetadata = {\n    id: 79,\n    label: 'First time use',\n    description: 'Is the camera currently in First Time Use (FTU) UI flow?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusBand5ghzAvail81: StatusMetadata = { id: 81, label: 'Band 5ghz avail', description: 'Is 5GHz wireless band available?', type: 'boolean', values: booleanValue };\nexport const statusSystemReady82: StatusMetadata = {\n    id: 82,\n    label: 'System ready',\n    description: 'Is the system ready to accept commands?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusBattOkayForOta83: StatusMetadata = {\n    id: 83,\n    label: 'Batt okay for ota',\n    description: 'Is the internal battery charged sufficiently to start Over The Air (OTA) update?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusVideoLowTempAlert85: StatusMetadata = {\n    id: 85,\n    label: 'Video low temp alert',\n    description: 'Is the camera getting too cold to continue recording?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusActualOrientation86: StatusMetadata = {\n    id: 86,\n    label: 'Actual orientation',\n    description: 'The rotational orientation of the camera',\n    type: 'integer',\n    values: [\n        { id: 0, label: '0 degrees (upright)' },\n        { id: 1, label: '180 degrees (upside down)' },\n        { id: 2, label: '90 degrees (laying on right side)' },\n        { id: 3, label: '270 degrees (laying on left side)' },\n    ],\n};\nexport const statusThermalMitigationMode87: StatusMetadata = {\n    id: 87,\n    label: 'Thermal mitigation mode',\n    description: 'Can camera use high resolution/fps (based on temperature)? (HERO7 Silver/White only)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusZoomWhileEncoding88: StatusMetadata = {\n    id: 88,\n    label: 'Zoom while encoding',\n    description: 'Is this camera capable of zooming while encoding (static value based on model, not settings)',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusCurrentMode89: StatusMetadata = {\n    id: 89,\n    label: 'Current mode',\n    description: 'Current flatmode ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusLogsReady91: StatusMetadata = { id: 91, label: 'Logs ready', description: 'Are system logs ready to be downloaded?', type: 'boolean', values: booleanValue };\nexport const statusTimewarp1xActive92: StatusMetadata = { id: 92, label: 'Timewarp 1x active', description: 'Is Timewarp 1x active?', type: 'boolean', values: booleanValue };\nexport const statusActiveVideoPresets93: StatusMetadata = {\n    id: 93,\n    label: 'Active video presets',\n    description: 'Current Video Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePhotoPresets94: StatusMetadata = {\n    id: 94,\n    label: 'Active photo presets',\n    description: 'Current Photo Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActiveTimelapsePresets95: StatusMetadata = {\n    id: 95,\n    label: 'Active timelapse presets',\n    description: 'Current Timelapse Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePresetsGroup96: StatusMetadata = {\n    id: 96,\n    label: 'Active presets group',\n    description: 'Current Preset Group (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusActivePreset97: StatusMetadata = {\n    id: 97,\n    label: 'Active preset',\n    description: 'Current Preset (ID)',\n    type: 'integer',\n    values: [],\n};\nexport const statusPresetModified98: StatusMetadata = {\n    id: 98,\n    label: 'Preset modified',\n    description: 'Preset Modified Status, which contains an event ID and a preset (group) ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusRemainingLiveBursts99: StatusMetadata = {\n    id: 99,\n    label: 'Remaining live bursts',\n    description: 'How many Live Bursts can be captured before sdcard is full',\n    type: 'integer',\n    values: [],\n};\nexport const statusNumTotalLiveBursts100: StatusMetadata = {\n    id: 100,\n    label: 'Num total live bursts',\n    description: 'Total number of Live Bursts on sdcard',\n    type: 'integer',\n    values: [],\n};\nexport const statusCaptureDelayActive101: StatusMetadata = {\n    id: 101,\n    label: 'Capture delay active',\n    description: 'Is Capture Delay currently active (i.e. counting down)?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMediaModMicStatus102: StatusMetadata = {\n    id: 102,\n    label: 'Media mod mic status',\n    description: 'Media mod State',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Media mod microphone removed' },\n        { id: 2, label: 'Media mod microphone only' },\n        { id: 3, label: 'Media mod microphone with external microphone' },\n    ],\n};\nexport const statusTimewarpSpeedRampActive103: StatusMetadata = {\n    id: 103,\n    label: 'Timewarp speed ramp active',\n    description: 'Time Warp Speed',\n    type: 'integer',\n    values: [\n        { id: 0, label: '15x' },\n        { id: 1, label: '30x' },\n        { id: 2, label: '60x' },\n        { id: 3, label: '150x' },\n        { id: 4, label: '300x' },\n        { id: 5, label: '900x' },\n        { id: 6, label: '1800x' },\n        { id: 7, label: '2x' },\n        { id: 8, label: '5x' },\n        { id: 9, label: '10x' },\n        { id: 10, label: 'Auto' },\n        { id: 11, label: '1x (realtime)' },\n        { id: 12, label: '1/2x (slow-motion)' },\n    ],\n};\nexport const statusLinuxCoreActive104: StatusMetadata = {\n    id: 104,\n    label: 'Linux core active',\n    description: `Is the system's Linux core active?`,\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusCameraLensType105: StatusMetadata = {\n    id: 105,\n    label: 'Camera lens type',\n    description: 'Camera lens type (reflects changes to setting 162)',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Default' },\n        { id: 1, label: 'Max Lens' },\n    ],\n};\nexport const statusVideoHindsightCaptureActive106: StatusMetadata = {\n    id: 106,\n    label: 'Video hindsight capture active',\n    description: 'Is Video Hindsight Capture Active?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusScheduledPreset107: StatusMetadata = {\n    id: 107,\n    label: 'Scheduled preset',\n    description: 'Scheduled Capture Preset ID',\n    type: 'integer',\n    values: [],\n};\nexport const statusScheduledEnabled108: StatusMetadata = { id: 108, label: 'Scheduled enabled', description: 'Is Scheduled Capture set?', type: 'boolean', values: booleanValue };\nexport const statusCreatingPreset109: StatusMetadata = {\n    id: 109,\n    label: 'Creating preset',\n    description: 'Is the camera in the process of creating a custom preset?',\n    type: 'boolean',\n    values: booleanValue,\n};\nexport const statusMediaModStatus110: StatusMetadata = {\n    id: 110,\n    label: 'Media mod status',\n    description: 'Media Mode Status (bitmasked)',\n    type: 'integer',\n    values: [\n        { id: 0, label: 'Display (selfie) mod: 0, HDMI: 0, Media Mod Connected: False' },\n        { id: 1, label: 'Display (selfie) mod: 0, HDMI: 0, Media Mod Connected: True' },\n        { id: 2, label: 'Display (selfie) mod: 0, HDMI: 1, Media Mod Connected: False' },\n        { id: 3, label: 'Display (selfie) mod: 0, HDMI: 1, Media Mod Connected: True' },\n        { id: 4, label: 'Display (selfie) mod: 1, HDMI: 0, Media Mod Connected: False' },\n        { id: 5, label: 'Display (selfie) mod: 1, HDMI: 0, Media Mod Connected: True' },\n        { id: 6, label: 'Display (selfie) mod: 1, HDMI: 1, Media Mod Connected: False' },\n        { id: 7, label: 'Display (selfie) mod: 1, HDMI: 1, Media Mod Connected: True' },\n    ],\n};\nexport const statusTurboTransfer113: StatusMetadata = { id: 113, label: 'Turbo transfer', description: 'Is Turbo Transfer active?', type: 'boolean', values: booleanValue };\n\nexport const allKnownStatuses: StatusMetadata[] = [\n    statusInternalCameraPresent1,\n    statusInternalBatteryLevel2,\n    statusExternalBatteryPresent3,\n    statusExternalBatteryLevel4,\n    statusSystemHot6,\n    statusSystemBusy8,\n    statusQuickCaptureActive9,\n    statusEncodingActive10,\n    statusLcdLockActive11,\n    statusVideoProgressCounter13,\n    statusEnable17,\n    statusState19,\n    statusType20,\n    statusPairTime21,\n    statusState22,\n    statusScanTimeMsec23,\n    statusProvisionStatus24,\n    statusRemoteControlVersion26,\n    statusRemoteControlConnected27,\n    statusPairing28,\n    statusWlanSsid29,\n    statusApSsid30,\n    statusAppCount31,\n    statusEnable32,\n    statusSdStatus33,\n    statusRemainingPhotos34,\n    statusRemainingVideoTime35,\n    statusNumGroupPhotos36,\n    statusNumGroupVideos37,\n    statusNumTotalPhotos38,\n    statusNumTotalVideos39,\n    statusDateTime40,\n    statusOtaStatus41,\n    statusDownloadCancelRequestPending42,\n    statusCameraLocateActive45,\n    statusMultiShotCountDown49,\n    statusRemainingSpace54,\n    statusSupported55,\n    statusWifiBars56,\n    statusCurrentTimeMsec57,\n    statusNumHilights58,\n    statusLastHilightTimeMsec59,\n    statusNextPollMsec60,\n    statusInContextualMenu63,\n    statusRemainingTimelapseTime64,\n    statusExposureSelectType65,\n    statusExposureSelectX66,\n    statusExposureSelectY67,\n    statusGpsStatus68,\n    statusApState69,\n    statusInternalBatteryPercentage70,\n    statusAccMicStatus74,\n    statusDigitalZoom75,\n    statusWirelessBand76,\n    statusDigitalZoomActive77,\n    statusMobileFriendlyVideo78,\n    statusFirstTimeUse79,\n    statusBand5ghzAvail81,\n    statusSystemReady82,\n    statusBattOkayForOta83,\n    statusVideoLowTempAlert85,\n    statusActualOrientation86,\n    statusThermalMitigationMode87,\n    statusZoomWhileEncoding88,\n    statusCurrentMode89,\n    statusLogsReady91,\n    statusTimewarp1xActive92,\n    statusActiveVideoPresets93,\n    statusActivePhotoPresets94,\n    statusActiveTimelapsePresets95,\n    statusActivePresetsGroup96,\n    statusActivePreset97,\n    statusPresetModified98,\n    statusRemainingLiveBursts99,\n    statusNumTotalLiveBursts100,\n    statusCaptureDelayActive101,\n    statusMediaModMicStatus102,\n    statusTimewarpSpeedRampActive103,\n    statusLinuxCoreActive104,\n    statusCameraLensType105,\n    statusVideoHindsightCaptureActive106,\n    statusScheduledPreset107,\n    statusScheduledEnabled108,\n    statusCreatingPreset109,\n    statusMediaModStatus110,\n    statusTurboTransfer113,\n];\n","import { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { RootState, store } from 'store/store';\nimport { functionQueue } from 'utilities/functionQueue';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { writeGoProPacketData } from '../goproBluetoothServiceActions';\nimport { statusSystemReady82 } from '../goproStatusMetadata';\n\nfunction isDeviceReady() {\n    const { statuses } = store.getState().goproSettingsReducer;\n    const canSendCommand = statuses[statusSystemReady82.id];\n    return canSendCommand;\n}\n\n/**\n * GoPro will reject command if it's busy, encoding or system is not ready.\n */\nasync function waitUntilDeviceReady() {\n    if (isDeviceReady()) return;\n\n    await new Promise<void>((resolve) => {\n        const unsubscribe = store.subscribe(() => {\n            if (isDeviceReady()) {\n                unsubscribe();\n                resolve();\n            }\n        });\n    });\n}\n\ntype CommandData = number[];\nexport async function sendCommand(commandData: CommandData) {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { commandCharacteristic } = characteristics;\n    await waitUntilDeviceReady();\n    await functionQueue(async () => {\n        await writeGoProPacketData(commandCharacteristic, commandData);\n    }, commandCharacteristic);\n}\n\nconst sendCommandAction = createAsyncThunk<void, CommandData, { state: RootState }>('commands/sendCommandAction', async (commandData) => {\n    await sendCommand(commandData);\n});\n\n// Non-standard commands\nexport const forceShutdownCommand = createAsyncThunk<void, void, { state: RootState }>('commands/forceShutdownCommand', async (_, { dispatch }) => {\n    // Force shutdown GoPro, not documented in OpenGoPro\n    // Bluetooth will be offline after this command\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x04]));\n});\n\nexport const hiLightTagCommand = createAsyncThunk<void, void, { state: RootState }>('commands/hiLightTagCommand', async (_, { dispatch }) => {\n    // HiLight current moment on GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x18]));\n});\n\nexport const locateOnCommand = createAsyncThunk<void, void, { state: RootState }>('commands/locateOnCommand', async (_, { dispatch }) => {\n    // Locate mode on for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x16, 0x01, 0x01]));\n});\n\nexport const locateOffCommand = createAsyncThunk<void, void, { state: RootState }>('commands/locateOffCommand', async (_, { dispatch }) => {\n    // Locate mode off for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x16, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadGroupVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadGroupVideoCommand', async (_, { dispatch }) => {\n    // Load video group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadGroupPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadGroupPhotoCommand', async (_, { dispatch }) => {\n    // Load photo group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadGroupMultishotCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadGroupMultishotCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x02, 0x01, 0x02]));\n});\n\nexport const legacyPresetsLoadPresetVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetVideoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadPresetTimeLapseVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetTimeLapseVideoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadPresetLoopingVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetLoopingVideoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x03]));\n});\n\nexport const legacyPresetsLoadPresetTimewarpCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetTimewarpCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x00, 0x01, 0x04]));\n});\n\nexport const legacyPresetsLoadPresetPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetPhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x01, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadPresetNightPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetNightPhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x01, 0x01, 0x02]));\n});\n\nexport const legacyPresetsLoadPresetBurstPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetBurstPhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x02, 0x01, 0x00]));\n});\n\nexport const legacyPresetsLoadPresetTimeLapsePhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetTimeLapsePhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x02, 0x01, 0x01]));\n});\n\nexport const legacyPresetsLoadPresetNightLapsePhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/legacyPresetsLoadPresetNightLapsePhotoCommand', async (_, { dispatch }) => {\n    // Load timelapse group for GoPro, not documented in OpenGoPro\n    // Tested with Hero 7 Black\n    await dispatch(sendCommandAction([0x03, 0x01, 0x02, 0x01, 0x02]));\n});\n\n/*\nmore old gopro commands from  https://gethypoxic.com/blogs/technical/gopro-hero5-interfaces\n\n// Not sure which characteristic, though, probably command, needs testing\nVIDEO_PROTUNE_RESET (0x03 0x10, 0x01, 0x01),\nMULTISHOT_VIDEO_PROTUNE_RESET(0x03, 0x11, 0x01, 0x01),\nPHOTO_PROTUNE_RESET(0x03, 0x12, 0x01, 0x01),\n*/\n\n// Standard commands\nexport const sleepCommand = createAsyncThunk<void, void, { state: RootState }>('commands/sleepCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x05]));\n});\n\nexport const getHardwareInfoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/getHardwareInfoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3c]));\n});\n\nexport const setShutterOffCommand = createAsyncThunk<void, void, { state: RootState }>('commands/setShutterOffCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x01, 0x01, 0x00]));\n});\n\nexport const setShutterOnCommand = createAsyncThunk<void, void, { state: RootState }>('commands/setShutterOnCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x01, 0x01, 0x01]));\n});\n\nexport const apControlWiFiApOffCommand = createAsyncThunk<void, void, { state: RootState }>('commands/apControlWiFiApOffCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x17, 0x01, 0x00]));\n});\n\nexport const apControlWiFiApOnCommand = createAsyncThunk<void, void, { state: RootState }>('commands/apControlWiFiApOnCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x17, 0x01, 0x01]));\n});\n// all next ones not work on hero 7\n\nexport const presetsLoadGroupVideoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadGroupVideoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xe8]));\n});\n\nexport const presetsLoadGroupPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadGroupPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xe9]));\n});\n\nexport const presetsLoadGroupTimelapseCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadGroupTimelapseCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x3e, 0x02, 0x03, 0xea]));\n});\n\nexport const presetsLoadStandardCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadStandardCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x00]));\n});\n\nexport const presetsLoadActivityCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadActivityCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x01]));\n});\n\nexport const presetsLoadCinematicCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadCinematicCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x02]));\n});\n\nexport const presetsLoadUltraSloMoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadUltraSloMoCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x04]));\n});\n\nexport const presetsLoadBasicCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadBasicCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x00, 0x00, 0x05]));\n});\n\nexport const presetsLoadPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x00]));\n});\n\nexport const presetsLoadLiveBurstCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadLiveBurstCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x01]));\n});\n\nexport const presetsLoadBurstPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadBurstPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x02]));\n});\n\nexport const presetsLoadNightPhotoCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadNightPhotoCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x01, 0x00, 0x03]));\n});\n\nexport const presetsLoadTimeWarpCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadTimeWarpCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x00]));\n});\n\nexport const presetsLoadTimeLapseCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadTimeLapseCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x01]));\n});\n\nexport const presetsLoadNightLapseCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadNightLapseCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x02, 0x00, 0x02]));\n});\n\nexport const presetsLoadStandardEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadStandardEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x00]));\n});\n\nexport const presetsLoadActivityEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadActivityEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x01]));\n});\n\nexport const presetsLoadCinematicEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadCinematicEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x02]));\n});\n\nexport const presetsLoadSloMoEBCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoadSloMoEBCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x08, 0x00, 0x03]));\n});\n\nexport const presetsLoad4KTripodCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoad4KTripodCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x09, 0x00, 0x00]));\n});\n\nexport const presetsLoad53KTripodCommand = createAsyncThunk<void, void, { state: RootState }>('commands/presetsLoad53KTripodCommand', async (_, { dispatch }) => {\n    // firmware >= v01.16.00\n    await dispatch(sendCommandAction([0x40, 0x04, 0x00, 0x09, 0x00, 0x01]));\n});\n\nexport const analyticsSetThirdPartyClientCommand = createAsyncThunk<void, void, { state: RootState }>('commands/analyticsSetThirdPartyClientCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x50]));\n});\n\nexport const openGoProGetVersionCommand = createAsyncThunk<void, void, { state: RootState }>('commands/openGoProGetVersionCommand', async (_, { dispatch }) => {\n    await dispatch(sendCommandAction([0x51]));\n});\n","import { getHardwareInfoCommand, openGoProGetVersionCommand } from 'store/goproBluetoothServiceActions/commands/commands';\nimport { GetHardwareInfoState, goproBluetoothSlice, OpenGoProVersionState } from 'store/goproBluetoothSlice';\nimport { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\nexport function commandResponseReceiverProvider(dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    return (packetData: PacketData) => {\n        // TODO parse actual command messages and update state\n        const commandResponse = parseCommandResponse(packetData);\n        dispatchCommandResponse(dispatch, commandResponse);\n    };\n}\n\nfunction parseCommandResponseCode(responseCode: number) {\n    switch (responseCode) {\n        case 0:\n            return CommandResponseCode.success;\n        case 1:\n            return CommandResponseCode.error;\n        case 2:\n            return CommandResponseCode.invalidParameter;\n        default:\n            return CommandResponseCode.unknown;\n    }\n}\n\nenum CommandResponseCode {\n    unknown,\n    success,\n    error,\n    invalidParameter,\n}\n\ninterface CommandResponse {\n    commandId: number;\n    errorCode: CommandResponseCode;\n    data: number[];\n}\n\nfunction parseCommandResponse(response: PacketData): CommandResponse {\n    if (response.length < 2) throw new Error('command response too short');\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const commandId = response[0]!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const errorCode = parseCommandResponseCode(response[1]!);\n    const data = response.slice(2);\n    return {\n        commandId,\n        errorCode,\n        data,\n    };\n}\n\nenum CommandId {\n    SetShutter = 0x01,\n    Sleep = 0x05,\n    APControl = 0x17,\n    GetHardwareInfo = 0x3c,\n    PresetsLoadGroup = 0x3e,\n    PresetsLoad = 0x40,\n    Analytics = 0x50,\n    OpenGoProGetVersion = 0x51,\n}\n\nfunction dispatchCommandResponse(dispatch: ThunkDispatch<RootState, unknown, AnyAction>, commandResponse: CommandResponse) {\n    // TODO handle regular command response?\n    // At least show error toast on failure?\n    switch (commandResponse.commandId) {\n        case CommandId.GetHardwareInfo: {\n            if (commandResponse.errorCode === CommandResponseCode.error) {\n                // Error occured during get hardware info? Sometimes this happens while GoPro is in the middle of booting up.\n                dispatch(getHardwareInfoCommand());\n                break;\n            }\n            dispatch(goproBluetoothSlice.actions.getHardwareInfoResponse(parseGetHardwareInfoResponse(commandResponse)));\n            break;\n        }\n        case CommandId.OpenGoProGetVersion: {\n            if (commandResponse.errorCode === CommandResponseCode.error) {\n                // Error occured during open GoPro? Sometimes this happens while GoPro is in the middle of booting up.\n                dispatch(openGoProGetVersionCommand());\n                break;\n            }\n            if (commandResponse.errorCode === CommandResponseCode.invalidParameter) {\n                // Open GoPro unsupported\n                // Likely device older than GoPro Hero 9\n                dispatch(goproBluetoothSlice.actions.openGoProGetVersionResponse({ majorVersion: 0, minorVersion: 0 }));\n                break;\n            }\n            dispatch(goproBluetoothSlice.actions.openGoProGetVersionResponse(parseOpenGoProGetVersionResponse(commandResponse)));\n            break;\n        }\n        default:\n            break;\n    }\n}\n\nfunction parseGetHardwareInfoResponse(commandResponse: CommandResponse): GetHardwareInfoState {\n    const { data } = commandResponse;\n    let dataIndex = 0;\n    // model number\n    const lengthOfModelNumber = data[dataIndex++] ?? 0;\n    const modelNumber = new Array(lengthOfModelNumber).fill(0).map(() => data[dataIndex++] ?? 0);\n    // model name\n    const lengthOfModelName = data[dataIndex++] ?? 0;\n    const modelName = new Array(lengthOfModelName)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++] ?? 0))\n        .join('');\n    // board type\n    const lengthOfBoardType = data[dataIndex++] ?? 0;\n    const boardType = new Array(lengthOfBoardType)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++] ?? 0))\n        .join('');\n    // firmware version\n    const lengthOfFirmwareVersion = data[dataIndex++] ?? 0;\n    const firmwareVersion = new Array(lengthOfFirmwareVersion)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++] ?? 0))\n        .join('');\n    // serial number\n    const lengthOfSerialNumber = data[dataIndex++] ?? 0;\n    const serialNumber = new Array(lengthOfSerialNumber)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++] ?? 0))\n        .join('');\n    // AP SSID\n    const lengthOfApSsid = data[dataIndex++] ?? 0;\n    const apSsid = new Array(lengthOfApSsid)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++] ?? 0))\n        .join('');\n    // AP MAC Address\n    const lengthOfApMacAddress = data[dataIndex++] ?? 0;\n    const apMacAddress = new Array(lengthOfApMacAddress)\n        .fill(0)\n        .map(() => String.fromCharCode(data[dataIndex++] ?? 0))\n        .join('');\n    return {\n        modelNumber,\n        modelName,\n        boardType,\n        firmwareVersion,\n        serialNumber,\n        apSsid,\n        apMacAddress,\n    };\n}\n\nfunction parseOpenGoProGetVersionResponse(commandResponse: CommandResponse): OpenGoProVersionState {\n    const { data } = commandResponse;\n    let dataIndex = 0;\n    // Major version\n    const lengthOfMajorVersion = data[dataIndex++];\n    const majorVersion = new Array(lengthOfMajorVersion)\n        .fill(0)\n        .map(() => data[dataIndex++] ?? 0)\n        // eslint-disable-next-line no-bitwise\n        .reduce((acc, cur) => (acc << 8) + cur);\n    // Minor version\n    const lengthOfMinorVersion = data[dataIndex++];\n    const minorVersion = new Array(lengthOfMinorVersion)\n        .fill(0)\n        .map(() => data[dataIndex++] ?? 0)\n        // eslint-disable-next-line no-bitwise\n        .reduce((acc, cur) => (acc << 8) + cur);\n    return {\n        majorVersion,\n        minorVersion,\n    };\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { bluetoothDeviceState } from './goproBleServiceState';\n\nexport interface SettingValue {\n    value: number;\n    /** Length in bytes */\n    length: number;\n}\n\ninterface Settings {\n    [key: number]: SettingValue;\n}\n\nexport type StatusValue = number | string | undefined;\n\ninterface Statuses {\n    [key: number]: StatusValue;\n}\n\nexport interface GoproSettingsState {\n    settings: Settings;\n    statuses: Statuses;\n    isFetching: boolean;\n}\n\nconst initialState: GoproSettingsState = {\n    settings: {},\n    statuses: {},\n    isFetching: false,\n};\n\nexport const goproSettingsSlice = createSlice({\n    name: 'goproSettings',\n    initialState,\n    reducers: {\n        settingsReceived: (state, action: PayloadAction<Settings>) => {\n            state.settings = { ...state.settings, ...action.payload };\n        },\n        settingsRequested: (state) => {\n            state.isFetching = true;\n        },\n        settingsRequestFailed: (state) => {\n            state.isFetching = false;\n        },\n        statusesReceived: (state, action: PayloadAction<Statuses>) => {\n            state.statuses = { ...state.statuses, ...action.payload };\n        },\n    },\n});\n\nexport const goproSettingsReducer = goproSettingsSlice.reducer;\n\nexport const fetchSettings = createAsyncThunk('goproSettings/fetchSettings', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await queryCharacteristic.writeValue(new Uint8Array([0x01, 0x12]));\n});\n","/* eslint-disable no-bitwise */\nimport { allKnownStatuses } from 'store/goproBluetoothServiceActions/goproStatusMetadata';\nimport { goproSettingsSlice, GoproSettingsState } from 'store/goproSettingsSlice';\nimport { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\nexport function queryResponseReceiverProvider(dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    return (packetData: PacketData) => {\n        const queryResponse = parseQueryResponse(packetData);\n        dispatchQueryResponse(dispatch, queryResponse);\n    };\n}\n\nexport interface QueryResponse {\n    errorCode: CommandResponseCode;\n    statusesOrSettings: StatusOrSetting[];\n    queryId: number;\n}\n\nfunction parseQueryResponse(packetData: PacketData): QueryResponse {\n    if (packetData.length < 2) throw new Error('command response too short');\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const queryId = packetData[0]!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const errorCode = parseQueryResponseCode(packetData[1]!);\n    const statusesOrSettings = parseStatusesOrSettingsFromData(packetData.slice(2));\n    return {\n        queryId,\n        errorCode,\n        statusesOrSettings,\n    };\n}\n\nfunction parseStatusesOrSettingsFromData(data: number[]) {\n    const settings: StatusOrSetting[] = [];\n    let dataIndex = 0;\n    while (dataIndex < data.length) {\n        const setting = readOneStatusOrSetting(data.slice(dataIndex));\n        settings.push(setting);\n        dataIndex += setting.value.length + 2;\n    }\n    return settings;\n}\n\nexport interface StatusOrSetting {\n    id: number;\n    /** Length in bytes */\n    length: number;\n    value: number[];\n}\n\nfunction readOneStatusOrSetting(data: number[]): StatusOrSetting {\n    const settingId = data[0] ?? 0;\n    const dataLength = data[1] ?? 0;\n    const settingValue = data.slice(2, dataLength + 2);\n    return {\n        id: settingId,\n        length: dataLength,\n        value: settingValue,\n    };\n}\n\nfunction parseQueryResponseCode(responseCode: number) {\n    // Probably same as query, not sure. Not in docs.\n    switch (responseCode) {\n        case 0:\n            return CommandResponseCode.success;\n        case 1:\n            return CommandResponseCode.error;\n        case 2:\n            return CommandResponseCode.invalidParameter;\n        default:\n            return CommandResponseCode.unknown;\n    }\n}\n\nenum CommandResponseCode {\n    unknown,\n    success,\n    error,\n    invalidParameter,\n}\n\nenum QueryId {\n    /*\n0x12 \tGet setting value \t02:12:xx \txx -> Setting ID\n0x12 \tGet all setting values \t01:12\n0x13 \tGet status value \t02:13:xx \txx -> status code\n0x13 \tGet all status values \t01:13\n0x52 \tRegister for setting updates \tnn:52:xx:… \tnn -> message length \\n xx -> setting id\n0x53 \tRegister for status updates \tnn:53:xx:… \tnn -> message length \\n xx -> status code\n0x72 \tUnregister for setting updates \tnn:72:xx:… \tnn -> message length \\n xx -> setting id\n0x73 \tUnregister for status updates \tnn:73:xx:… \tnn -> message length \\n xx -> status code\n */\n    getSettingValue = 0x12,\n    getStatusValue = 0x13,\n    registerForSettingUpdates = 0x52,\n    registerForStatusUpdates = 0x53,\n    unregisterForSettingUpdates = 0x72,\n    unregisterForStatusUpdates = 0x73,\n    // The Query ID for settings/status push notifications replaces the upper 4 bits with 1001 (nine).\n    settingUpdate = 0x92,\n    statusUpdate = 0x93,\n}\n\nconst receivedSettingsReduceToKeyValue = (statusesOrSettings: StatusOrSetting[]): GoproSettingsState['settings'] =>\n    statusesOrSettings.reduce((acc, setting) => {\n        // unused settings will have length of 0\n        if (setting.value.length === 0) return acc;\n        const value = setting.value.reduce((sAcc, sCur) => (sAcc << 8) + sCur);\n        const { length } = setting;\n        acc[setting.id] = {\n            value,\n            length,\n        };\n        return acc;\n    }, {} as GoproSettingsState['settings']);\n\nconst receivedStatusesReduceToKeyValue = (statusesOrSettings: StatusOrSetting[]): GoproSettingsState['statuses'] =>\n    statusesOrSettings.reduce((acc, status) => {\n        const valueLength = status.value.length;\n        const knownStatus = allKnownStatuses.find((s) => s.id === status.id);\n        if (knownStatus?.type === 'string' || valueLength > 4) {\n            const valueStr = status.value.map((v) => String.fromCharCode(v)).join('');\n            acc[status.id] = valueStr;\n            return acc;\n        }\n        // unused statuses will have length of 0\n        if (status.value.length === 0) return acc;\n        const value = status.value.reduce((sAcc, sCur) => (sAcc << 8) + sCur);\n        acc[status.id] = value;\n        return acc;\n    }, {} as GoproSettingsState['statuses']);\n\nfunction dispatchQueryResponse(dispatch: ThunkDispatch<RootState, unknown, AnyAction>, queryResponse: QueryResponse) {\n    switch (queryResponse.queryId) {\n        case QueryId.getSettingValue:\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.registerForSettingUpdates:\n            // When registering to settings updates, it sends current values as response to the register command.\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.settingUpdate:\n            dispatch(goproSettingsSlice.actions.settingsReceived(receivedSettingsReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.getStatusValue:\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.registerForStatusUpdates:\n            // When registering to status updates, it sends current values as response to the register command.\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        case QueryId.statusUpdate:\n            dispatch(goproSettingsSlice.actions.statusesReceived(receivedStatusesReduceToKeyValue(queryResponse.statusesOrSettings)));\n            break;\n        default:\n            break;\n    }\n}\n","import { RootState } from 'store/store';\n\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nimport { PacketData } from './goproPacketReader';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function settingsResponseReceiverProvider(_dispatch: ThunkDispatch<RootState, unknown, AnyAction>) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return (_packetData: PacketData) => {\n        // const settings = parseSettings(packetData);\n        // dispatchSettings(dispatch, settings);\n    };\n}\n","import { toast } from 'react-toastify';\n\nexport type PacketData = number[];\n\ntype PacketDataReceiver = (response: PacketData) => void;\n\nexport function goproBlePacketDataReaderProvider(onPacket: PacketDataReceiver) {\n    let packetDataAccumulator: number[] = [];\n    let messageLength = 0;\n    return (ev: Event) => {\n        const characteristic = ev.target as BluetoothRemoteGATTCharacteristic;\n        async function tryParsingSinglePacket(): Promise<PacketData | undefined> {\n            const { value } = characteristic;\n            if (!value) {\n                throw new Error('This should not be possible, empty response value');\n            }\n            const packet = readSinglePacket(value);\n            if (packet.header.isStart) {\n                messageLength = packet.header.messageLength;\n                packetDataAccumulator = packet.data;\n            } else {\n                // TODO consider using continuationIndex\n                packetDataAccumulator.push(...packet.data);\n            }\n            if (packetDataAccumulator.length === messageLength) {\n                // Message complete, last packet, return concatenated data\n                return packetDataAccumulator;\n            }\n            if (packetDataAccumulator.length > messageLength) throw new Error('Did response messages get out of sync?');\n            return undefined;\n        }\n        tryParsingSinglePacket()\n            .then((packetData) => {\n                if (!packetData) return;\n                onPacket(packetData);\n                console.log('packet dump', packetData);\n            })\n            .catch((error) => {\n                // dispatch()\n                toast(`Error while parsing response message ${error}`);\n            });\n    };\n}\n\nfunction readSinglePacket(value: DataView) {\n    const packetHeader = parsePacketHeader(value);\n    const data = Array.from(new Uint8Array(value.buffer)).slice(packetHeader.headerSizeBytes);\n    return { header: packetHeader, data };\n}\n\nfunction parsePacketHeader(data: DataView) {\n    const byte1 = data.getUint8(0);\n    let headerSizeBytes = 1;\n    // eslint-disable-next-line no-bitwise\n    const isStart = (byte1 & 0b10000000) >> 7 === 0b0;\n    if (!isStart) {\n        // Continuation packet\n        // eslint-disable-next-line no-bitwise\n        const continuationIndex = byte1 & 0b01111111;\n        return {\n            isStart: false,\n            headerSizeBytes: 1,\n            continuationIndex,\n        } as const;\n    }\n    // eslint-disable-next-line no-bitwise\n    const startType = (byte1 & 0b01100000) >> 5;\n    let messageLength: number;\n    if (startType === 0b00) {\n        // eslint-disable-next-line no-bitwise\n        messageLength = byte1 & 0b00011111;\n    } else if (startType === 0b01) {\n        headerSizeBytes = 2;\n        const byte2 = data.getUint8(1);\n        // eslint-disable-next-line no-bitwise\n        messageLength = ((byte1 & 0b00011111) << 8) | byte2;\n    } else if (startType === 0b10) {\n        headerSizeBytes = 3;\n        const byte2 = data.getUint8(1);\n        const byte3 = data.getUint8(2);\n        // eslint-disable-next-line no-bitwise\n        messageLength = (byte2 << 8) | byte3;\n    } else if (startType === 0b11) {\n        messageLength = 0;\n    } else {\n        throw new Error('IMPOSSIBLE');\n    }\n    return {\n        isStart: true,\n        headerSizeBytes,\n        messageLength,\n    } as const;\n}\n","import { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { RootState } from 'store/store';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { writeGoProPacketData } from '../goproBluetoothServiceActions';\n\nexport const subscribeToSettingsChangesCommand = createAsyncThunk<void, number[], { state: RootState }>('queryCommands/subscribeToSettingsChangesCommand', async (settingsIds) => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x52, ...settingsIds]);\n});\n\nexport const subscribeToStatusChangesCommand = createAsyncThunk<void, number[], { state: RootState }>('queryCommands/subscribeToStatusChangesCommand', async (statusIds) => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x53, ...statusIds]);\n});\n\nexport const getSettingsCommand = createAsyncThunk('queryCommands/getSettingsCommand', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x12]);\n});\n\nexport const getStatusesCommand = createAsyncThunk('queryCommands/getStatusesCommand', async () => {\n    const { characteristics } = bluetoothDeviceState;\n    if (!characteristics) throw new Error('no characteristics');\n    const { queryCharacteristic } = characteristics;\n    await writeGoProPacketData(queryCharacteristic, [0x13]);\n});\n","/* eslint-disable no-bitwise */\nimport { toast } from 'react-toastify';\nimport { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { goproBluetoothSlice } from 'store/goproBluetoothSlice';\nimport { commandResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderCommand';\nimport { queryResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderQuery';\nimport { settingsResponseReceiverProvider } from 'store/packetParsing/goproPacketReaderSetting';\nimport { RootState } from 'store/store';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { goproBlePacketDataReaderProvider } from '../packetParsing/goproPacketReader';\n\nimport { getHardwareInfoCommand, openGoProGetVersionCommand } from './commands/commands';\nimport { subscribeToSettingsChangesCommand, subscribeToStatusChangesCommand } from './commands/queryCommands';\nimport { statusEncodingActive10, statusSystemBusy8, statusSystemReady82 } from './goproStatusMetadata';\n\ninterface SelectDeviceResult {\n    deviceName: string;\n}\n\nexport const requestDevice = createAsyncThunk<SelectDeviceResult, void, { state: RootState }>('bluetoothDevice/requestDevice', async (_, { dispatch }) => {\n    const device = await navigator.bluetooth.requestDevice({\n        filters: [{ services: ['0000fea6-0000-1000-8000-00805f9b34fb'] }],\n        optionalServices: ['0000fea6-0000-1000-8000-00805f9b34fb', 'b5f90001-aa8d-11e3-9046-0002a5d5c51b'],\n    });\n    device.ongattserverdisconnected = () => {\n        // On disconnect, invalidate all GATT services and characteristics https://web.dev/bluetooth/#disconnect\n        bluetoothDeviceState.characteristics = undefined;\n        bluetoothDeviceState.gattServer = undefined;\n\n        dispatch(goproBluetoothSlice.actions.gattDisconnected('Connection lost'));\n        toast.error('Gopro disconnected, connection lost');\n    };\n    bluetoothDeviceState.device = device;\n    dispatch(gattConnect());\n    return {\n        deviceName: device.name ?? device.id,\n    };\n});\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface GattConnectResult {}\n\nexport const gattConnect = createAsyncThunk<GattConnectResult, void, { state: RootState }>('bluetoothDevice/gattConnect', async (_, { dispatch }) => {\n    const { device } = bluetoothDeviceState;\n    if (!device) throw new Error('device not found to connect to');\n    if (!device?.gatt) throw new Error(`gatt missing for this device ${device.name ?? device.id}`);\n    const gattServer = await device.gatt.connect();\n\n    const wifiApServicePromise = gattServer.getPrimaryService('b5f90001-aa8d-11e3-9046-0002a5d5c51b');\n    const wifiApSsidCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90002-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApPasswordCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90003-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApPowerCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90004-aa8d-11e3-9046-0002a5d5c51b'));\n    const wifiApStateCharacteristicPromise = wifiApServicePromise.then((x) => x.getCharacteristic('b5f90005-aa8d-11e3-9046-0002a5d5c51b'));\n\n    const cqServicePromise = gattServer.getPrimaryService('0000fea6-0000-1000-8000-00805f9b34fb');\n    const commandCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90072-aa8d-11e3-9046-0002a5d5c51b'));\n    const commandResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90073-aa8d-11e3-9046-0002a5d5c51b'));\n    const settingsCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90074-aa8d-11e3-9046-0002a5d5c51b'));\n    const settingsResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90075-aa8d-11e3-9046-0002a5d5c51b'));\n    const queryCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90076-aa8d-11e3-9046-0002a5d5c51b'));\n    const queryResponseCharacteristicPromise = cqServicePromise.then((x) => x.getCharacteristic('b5f90077-aa8d-11e3-9046-0002a5d5c51b'));\n\n    bluetoothDeviceState.gattServer = gattServer;\n    bluetoothDeviceState.characteristics = {\n        wifiApSsidCharacteristic: await wifiApSsidCharacteristicPromise,\n        wifiApPasswordCharacteristic: await wifiApPasswordCharacteristicPromise,\n        wifiApPowerCharacteristic: await wifiApPowerCharacteristicPromise,\n        wifiApStateCharacteristic: await wifiApStateCharacteristicPromise,\n        commandCharacteristic: await commandCharacteristicPromise,\n        commandResponseCharacteristic: await commandResponseCharacteristicPromise,\n        settingsCharacteristic: await settingsCharacteristicPromise,\n        settingsResponseCharacteristic: await settingsResponseCharacteristicPromise,\n        queryCharacteristic: await queryCharacteristicPromise,\n        queryResponseCharacteristic: await queryResponseCharacteristicPromise,\n    };\n    bluetoothDeviceState.characteristics.commandResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(commandResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.commandResponseCharacteristic.startNotifications();\n    bluetoothDeviceState.characteristics.queryResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(queryResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.queryResponseCharacteristic.startNotifications();\n    bluetoothDeviceState.characteristics.settingsResponseCharacteristic.oncharacteristicvaluechanged = goproBlePacketDataReaderProvider(settingsResponseReceiverProvider(dispatch));\n    await bluetoothDeviceState.characteristics.settingsResponseCharacteristic.startNotifications();\n\n    // Explicitly first subscribe to ones needed to know of we can send commands\n    await dispatch(subscribeToStatusChangesCommand([statusSystemReady82.id, statusEncodingActive10.id, statusSystemBusy8.id]));\n\n    // Subscribe to status and setting changes, will be useful to know when the device is ready to receive commands\n    // TODO Reconsider this subscribing logic\n    await dispatch(subscribeToStatusChangesCommand([...new Array(88).keys()]));\n    await dispatch(subscribeToSettingsChangesCommand([...new Array(112).keys()]));\n\n    await dispatch(openGoProGetVersionCommand());\n    await dispatch(getHardwareInfoCommand());\n    // TODO maybe subscribe only when UI requires it? With current interface we literally always need it...\n    // For now subscribe to all known settings, last setting ID is 112, last status id is 88\n});\n\nasync function writeGoProPacketDataRaw(characteristic: BluetoothRemoteGATTCharacteristic, data: number[]) {\n    // console.log('writing raw data', data);\n    return characteristic.writeValue(new Uint8Array(data));\n}\n\nfunction getPacketHeaderForData(dataLength: number, chunkIndex: number) {\n    if (chunkIndex > 0) return [0b10000000 + (chunkIndex & 0b00111111)];\n    if (dataLength <= 0x1f) return [dataLength & 0b00011111];\n    if (dataLength <= 0x1fff) return [0b00100000 + ((dataLength >> 8) & 0b00011111), dataLength & 0b11111111];\n    if (dataLength <= 0xffff) return [0b01000000, (dataLength >> 8) & 0b11111111, dataLength & 0b11111111];\n\n    toast.error('packet too large');\n    throw new Error('data length too large');\n}\n\nexport async function writeGoProPacketData(characteristic: BluetoothRemoteGATTCharacteristic, data: number[]) {\n    console.log('writing data, before appending headers', data);\n    const dataCopy = [...data];\n    let chunkIndex = 0;\n    while (dataCopy.length > 0) {\n        dataCopy.unshift(...getPacketHeaderForData(data.length, chunkIndex));\n        const chunk = dataCopy.splice(0, 20);\n        // Intentional await inside loop, this can only be done synchronously\n        // eslint-disable-next-line no-await-in-loop\n        await writeGoProPacketDataRaw(characteristic, chunk);\n        chunkIndex++;\n    }\n    return undefined;\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { gattConnect, requestDevice } from './goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { bluetoothDeviceState } from './goproBleServiceState';\n\nexport interface OpenGoProVersionState {\n    majorVersion: number;\n    minorVersion: number;\n}\n\nexport interface GetHardwareInfoState {\n    modelNumber: number[];\n    modelName: string;\n    boardType: string;\n    firmwareVersion: string;\n    serialNumber: string;\n    apSsid: string;\n    apMacAddress: string;\n}\n\ninterface GoproBluetoothDeviceCommandsState {\n    isCommandInAction: boolean;\n    getHardwareInfo?: GetHardwareInfoState;\n    openGoProVersion?: OpenGoProVersionState;\n}\n\ninterface GoproBluetoothDeviceState {\n    isRequestingDevice: boolean;\n    isDeviceSelected: boolean;\n    deviceName: string;\n    error?: string;\n    isGattConnecting: boolean;\n    isGattConnected: boolean;\n    goproBluetoothDeviceCommandsState: GoproBluetoothDeviceCommandsState;\n}\n\nexport const initialState: GoproBluetoothDeviceState = {\n    isRequestingDevice: false,\n    isDeviceSelected: false,\n    isGattConnected: false,\n    isGattConnecting: false,\n    deviceName: 'unknown',\n    goproBluetoothDeviceCommandsState: {\n        isCommandInAction: false,\n    },\n};\n\nexport const goproBluetoothSlice = createSlice({\n    name: 'bluetoothDevice',\n    initialState,\n    reducers: {\n        gattDisconnected: (state, action: PayloadAction<string | undefined>) => {\n            state.isGattConnected = false;\n            state.error = action.payload;\n        },\n        getHardwareInfoResponse: (state, action: PayloadAction<GetHardwareInfoState>) => {\n            state.goproBluetoothDeviceCommandsState.getHardwareInfo = action.payload;\n            // Let's override device name when we know wifi ssid\n            state.deviceName = action.payload.apSsid;\n        },\n        openGoProGetVersionResponse: (state, action: PayloadAction<OpenGoProVersionState>) => {\n            state.goproBluetoothDeviceCommandsState.openGoProVersion = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(requestDevice.pending, (state) => {\n            bluetoothDeviceState.device = undefined;\n            state.isRequestingDevice = true;\n            state.isDeviceSelected = false;\n            state.error = undefined;\n        });\n        builder.addCase(requestDevice.fulfilled, (state, action) => {\n            state.isRequestingDevice = false;\n            state.isDeviceSelected = true;\n            state.error = undefined;\n            state.deviceName = action.payload.deviceName;\n        });\n        builder.addCase(requestDevice.rejected, (state, action) => {\n            bluetoothDeviceState.device = undefined;\n            state.isRequestingDevice = false;\n            state.isDeviceSelected = false;\n            state.error = action.error.message ?? 'unknown error';\n        });\n        builder.addCase(gattConnect.pending, (state) => {\n            state.isGattConnecting = true;\n            state.isGattConnected = false;\n        });\n        builder.addCase(gattConnect.fulfilled, (state) => {\n            state.isGattConnecting = false;\n            state.isGattConnected = true;\n        });\n        builder.addCase(gattConnect.rejected, (state, action) => {\n            state.isGattConnecting = false;\n            state.isGattConnected = false;\n            state.error = action.error.message ?? 'unknown error';\n        });\n    },\n});\n\nexport const goproBluetoothReducer = goproBluetoothSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { goproBluetoothReducer } from './goproBluetoothSlice';\nimport { goproSettingsReducer } from './goproSettingsSlice';\n\nexport const store = configureStore({\n    reducer: {\n        goproBluetoothReducer,\n        goproSettingsReducer,\n    },\n    devTools: true,\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { gattConnect } from 'store/goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\n\nimport { Box, Button, Container, Typography } from '@mui/material';\n\nexport const ConnectToGoProView: React.FC = () => {\n    const isGattConnecting = useAppSelector((state) => state.goproBluetoothReducer.isGattConnecting);\n    const deviceName = useAppSelector((state) => state.goproBluetoothReducer.deviceName);\n    const currentError = useAppSelector((state) => state.goproBluetoothReducer.error);\n    const dispatch = useAppDispatch();\n    return (\n        <Container maxWidth=\"sm\">\n            <Box sx={{ my: 4 }}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    {isGattConnecting ? `Connecting to ${deviceName}...` : `Connect to ${deviceName}`}\n                </Typography>\n                {isGattConnecting ? null : <Button onClick={() => dispatch(gattConnect())}>Reconnect</Button>}\n                {currentError ? <div>{currentError}</div> : null}\n            </Box>\n        </Container>\n    );\n};\n","import { Container } from '@mui/material';\n\ninterface IProps {\n    errorTitle: string;\n    errorDescription: string;\n}\n\nexport const ErrorPage: React.FC<IProps> = (props) => {\n    const { errorTitle, errorDescription } = props;\n    return (\n        <Container maxWidth=\"sm\">\n            <h1>{errorTitle}</h1>\n            <p>{errorDescription}</p>\n        </Container>\n    );\n};\n","import { requestDevice } from 'store/goproBluetoothServiceActions/goproBluetoothServiceActions';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\n\nimport { Box, Button, Container, Typography } from '@mui/material';\n\nexport const SearchForGoProView: React.FC = () => {\n    const isRequestingDevice = useAppSelector((state) => state.goproBluetoothReducer.isRequestingDevice);\n    const currentError = useAppSelector((state) => state.goproBluetoothReducer.error);\n    const dispatch = useAppDispatch();\n    return (\n        <Container maxWidth=\"sm\">\n            <Box sx={{ my: 4 }}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    {isRequestingDevice ? 'Select your GoPro' : 'Search for GoPro'}\n                </Typography>\n                <Button onClick={() => dispatch(requestDevice())}>Search</Button>\n                {currentError ? <div>{currentError}</div> : null}\n            </Box>\n        </Container>\n    );\n};\n","import { useEffect, useState } from 'react';\n\nexport function usePwaInstallPrompt() {\n    const [prompt, setState] = useState<BeforeInstallPromptEvent>();\n    const shouldShowPrompt = !!prompt;\n    const [isInstalled, setIsInstalled] = useState(false);\n    const [userAccepted, setUserAccepted] = useState(false);\n    const [userDismissed, setUserDismissed] = useState(false);\n\n    const promptToInstall = () => {\n        if (prompt) {\n            setUserAccepted(false);\n            setUserDismissed(false);\n            return prompt.prompt().then(({ outcome }) => {\n                setUserAccepted(outcome === 'accepted');\n                setUserDismissed(outcome === 'dismissed');\n            });\n        }\n        return Promise.reject(new Error('Tried installing before browser sent \"beforeinstallprompt\" event'));\n    };\n\n    useEffect(() => {\n        const ready = (e: BeforeInstallPromptEvent) => {\n            // e.preventDefault();\n            setState(e);\n        };\n\n        window.addEventListener('beforeinstallprompt', ready);\n\n        return () => {\n            window.removeEventListener('beforeinstallprompt', ready);\n        };\n    }, []);\n\n    useEffect(() => {\n        const onInstall = () => {\n            setIsInstalled(true);\n        };\n\n        window.addEventListener('appinstalled', onInstall);\n\n        return () => {\n            window.removeEventListener('appinstalled', onInstall);\n        };\n    }, []);\n\n    return [shouldShowPrompt, userAccepted, userDismissed, isInstalled, promptToInstall] as const;\n}\n","import { usePwaInstallPrompt } from 'hooks/pwaInstallPrompt';\nimport { useEffect, useState } from 'react';\n\nimport { Button } from '@mui/material';\n\nconst InstallPwaButton: React.FC = () => {\n    const [shouldShowPrompt, _userAccepted, userDismissed, _isInstalled, promptToInstall] = usePwaInstallPrompt();\n    const [showSad, setShowSad] = useState(false);\n    const [dismissedInstall, setDismissedInstall] = useState(false);\n\n    useEffect(() => {\n        let timeoutHandle: number | undefined;\n        if (userDismissed) {\n            setShowSad(true);\n            timeoutHandle = window.setTimeout(() => {\n                // Let's dismiss it after couple of seconds, user has rejected install, just remove the button for now\n                setDismissedInstall(true);\n            }, 3000);\n        }\n        return () => {\n            window.clearTimeout(timeoutHandle);\n        };\n    }, [userDismissed]);\n\n    const handleInstallClick = () => {\n        promptToInstall();\n    };\n    if (!shouldShowPrompt || dismissedInstall) {\n        return null;\n    }\n    return (\n        <Button color=\"inherit\" onClick={handleInstallClick}>\n            Install{showSad ? ' 💔' : ''}\n        </Button>\n    );\n};\n\nexport default InstallPwaButton;\n","import React from 'react';\n\nimport { AppBar, Toolbar, Typography } from '@mui/material';\n\nimport InstallPwaButton from './InstallPwaButton';\n\nexport const Header: React.FC = () => (\n    <AppBar position=\"sticky\">\n        <Toolbar>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n                GoPro Bluetooth remote\n            </Typography>\n            <InstallPwaButton />\n        </Toolbar>\n    </AppBar>\n);\n","import { RootState } from 'store/store';\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectDeviceName = createSelector(\n    (state: RootState) => state.goproBluetoothReducer.deviceName,\n    (deviceName) => deviceName\n);\n","/* eslint-disable no-bitwise */\nexport interface SettingValueMetadata {\n    id: number;\n    label: string;\n}\n\nexport interface SettingMetadata {\n    id: number;\n    label: string;\n    length: number;\n    values: SettingValueMetadata[];\n}\n\nexport const settingVideoResolution2: SettingMetadata = {\n    id: 0x2,\n    label: 'Resolution',\n    length: 1,\n    values: [\n        {\n            id: 0x12, // 18\n            label: '4K (4:3)',\n        },\n        {\n            id: 0x6,\n            label: '2.7K (4:3)',\n        },\n        {\n            id: 0x7,\n            label: '1440 (4:3)',\n        },\n        {\n            id: 0xa, // 10\n            label: '960 (4:3)',\n        },\n        {\n            id: 0x1,\n            label: '4K',\n        },\n        {\n            id: 0x4,\n            label: '2.7K',\n        },\n        {\n            id: 0x9,\n            label: '1080',\n        },\n        {\n            id: 0xc, // 12\n            label: '720',\n        },\n    ],\n};\n\nexport const settingVideoFps3: SettingMetadata = {\n    id: 0x3,\n    label: 'FPS',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '240',\n        },\n        {\n            id: 0x1,\n            label: '120',\n        },\n        {\n            id: 0x5,\n            label: '60',\n        },\n        {\n            id: 0x8,\n            label: '30',\n        },\n        {\n            id: 0xa, // 10\n            label: '24',\n        },\n    ],\n};\n\nexport const settingVideoFov4: SettingMetadata = {\n    id: 0x4,\n    label: 'FOV',\n    length: 1,\n    values: [\n        {\n            id: 0x4,\n            label: 'Linear',\n        },\n        {\n            id: 0x0,\n            label: 'Wide',\n        },\n        {\n            id: 0x3,\n            label: 'Super view',\n        },\n    ],\n};\n\nexport const settingVideoInterval5: SettingMetadata = {\n    id: 0x5,\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '0.5s',\n        },\n        {\n            id: 0x1,\n            label: '1s',\n        },\n        {\n            id: 0x2,\n            label: '2s',\n        },\n\n        {\n            id: 0x3,\n            label: '5s',\n        },\n        {\n            id: 0x4,\n            label: '10s',\n        },\n        {\n            id: 0x5,\n            label: '30s',\n        },\n        {\n            id: 0x6,\n            label: '60s',\n        },\n    ],\n};\n\nexport const settingVideoInterval6: SettingMetadata = {\n    id: 0x6,\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'MAX',\n        },\n        {\n            id: 0x1,\n            label: '5m',\n        },\n        {\n            id: 0x2,\n            label: '20m',\n        },\n        {\n            id: 0x3,\n            label: '60m',\n        },\n        {\n            id: 0x4,\n            label: '120m',\n        },\n    ],\n};\n\nexport const settingVideoLowLight8: SettingMetadata = {\n    id: 0x8,\n    label: 'Low light',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Auto',\n        },\n    ],\n};\n\nexport const settingVideoProtune10: SettingMetadata = {\n    id: 0xa, // 10\n    label: 'Protune',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingVideoWhiteBalance11: SettingMetadata = {\n    id: 0xb, // 11\n    label: 'White Balance',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Auto' },\n        { id: 0x8, label: '2300K' },\n        { id: 0x9, label: '2800K' },\n        {\n            id: 0xa, // 10\n            label: '3200K',\n        },\n        { id: 0x5, label: '4000K' },\n        {\n            id: 0xb, // 11\n            label: '4500K',\n        },\n        {\n            id: 0xc, // 12\n            label: '5000K',\n        },\n        { id: 0x2, label: '5500K' },\n        { id: 0x7, label: '6000K' },\n        { id: 0x3, label: '6500K' },\n        { id: 0x4, label: 'Native' },\n    ],\n};\n\nexport const settingVideoColor12: SettingMetadata = {\n    id: 0xc, // 12\n    label: 'Color',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'GoPro',\n        },\n        {\n            id: 0x1,\n            label: 'Flat',\n        },\n    ],\n};\n\nexport const settingVideoIsoMax13: SettingMetadata = {\n    id: 0xd, // 13\n    label: 'ISO max',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '6400',\n        },\n        {\n            id: 0x3,\n            label: '3200',\n        },\n        {\n            id: 0x1,\n            label: '1600',\n        },\n        {\n            id: 0x4,\n            label: '800',\n        },\n        {\n            id: 0x2,\n            label: '400',\n        },\n        {\n            id: 0x7,\n            label: '200',\n        },\n        {\n            id: 0x8,\n            label: '100',\n        },\n    ],\n};\n\nexport const settingVideoSharpness14: SettingMetadata = {\n    id: 0xe, // 14\n    label: 'Sharpness',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'High',\n        },\n        {\n            id: 0x1,\n            label: 'Medium',\n        },\n        {\n            id: 0x2,\n            label: 'Low',\n        },\n    ],\n};\n\nexport const settingVideoEvComp15: SettingMetadata = {\n    id: 0xf, // 15\n    label: 'EV comp',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '+2',\n        },\n        {\n            id: 0x1,\n            label: '+1.5',\n        },\n        {\n            id: 0x2,\n            label: '+1',\n        },\n        {\n            id: 0x3,\n            label: '+0.5',\n        },\n        {\n            id: 0x4,\n            label: '0',\n        },\n        {\n            id: 0x5,\n            label: '-0.5',\n        },\n        {\n            id: 0x6,\n            label: '-1',\n        },\n        {\n            id: 0x7,\n            label: '-1.5',\n        },\n        {\n            id: 0x8,\n            label: '-2',\n        },\n    ],\n};\n\nexport const settingPhotoFov17: SettingMetadata = {\n    id: 0x11, // 17\n    label: 'FOV',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Wide',\n        },\n        {\n            id: 0xa, // 10\n            label: 'Linear',\n        },\n    ],\n};\n\nexport const settingPhotoShutter19: SettingMetadata = {\n    id: 0x13, // 19\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x6,\n            label: '30s',\n        },\n        {\n            id: 0x5,\n            label: '20s',\n        },\n        {\n            id: 0x4,\n            label: '15s',\n        },\n        {\n            id: 0x3,\n            label: '10s',\n        },\n        {\n            id: 0x2,\n            label: '5s',\n        },\n        {\n            id: 0x1,\n            label: '2s',\n        },\n    ],\n};\n\nexport const settingPhotoProtune21: SettingMetadata = {\n    id: 0x15, // 21\n    label: settingVideoProtune10.label,\n    length: settingVideoProtune10.length,\n    values: settingVideoProtune10.values,\n};\n\nexport const settingPhotoWhiteBalance22: SettingMetadata = {\n    id: 0x16, // 22\n    label: settingVideoWhiteBalance11.label,\n    length: settingVideoWhiteBalance11.length,\n    values: settingVideoWhiteBalance11.values,\n};\n\nexport const settingPhotoColor23: SettingMetadata = {\n    id: 0x17, // 23\n    label: settingVideoColor12.label,\n    length: settingVideoColor12.length,\n    values: settingVideoColor12.values,\n};\n\nexport const settingPhotoIsoMax24: SettingMetadata = {\n    id: 0x18, // 24\n    label: settingVideoIsoMax13.label,\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '800',\n        },\n        {\n            id: 0x1,\n            label: '400',\n        },\n        {\n            id: 0x2,\n            label: '200',\n        },\n        {\n            id: 0x3,\n            label: '100',\n        },\n        {\n            id: 0x4,\n            label: '1600',\n        },\n        {\n            id: 0x5,\n            label: '3200',\n        },\n    ],\n};\n\nexport const settingPhotoSharpness25: SettingMetadata = {\n    id: 0x19, // 25\n    label: settingVideoSharpness14.label,\n    length: settingVideoSharpness14.length,\n    values: settingVideoSharpness14.values,\n};\n\nexport const settingPhotoEvComp26: SettingMetadata = {\n    id: 0x1a, // 26\n    label: settingVideoEvComp15.label,\n    length: settingVideoEvComp15.length,\n    values: settingVideoEvComp15.values,\n};\n\nexport const settingMultishotFov28: SettingMetadata = {\n    id: 0x1c, // 28\n    label: settingPhotoFov17.label,\n    length: settingPhotoFov17.length,\n    values: settingPhotoFov17.values,\n};\n\nexport const settingMultishotBurstRate29: SettingMetadata = {\n    id: 0x1d, // 29\n    label: 'Burst Rate',\n    length: 1,\n    values: [\n        {\n            id: 0x9,\n            label: 'Auto',\n        },\n        {\n            id: 0x8,\n            label: '30/6s',\n        },\n        {\n            id: 0x7,\n            label: '30/3s',\n        },\n        {\n            id: 0x6,\n            label: '30/2s',\n        },\n        {\n            id: 0x5,\n            label: '30/1s',\n        },\n        {\n            id: 0x4,\n            label: '10/3s',\n        },\n        {\n            id: 0x3,\n            label: '10/2s',\n        },\n        {\n            id: 0x2,\n            label: '10/1s',\n        },\n        {\n            id: 0x1,\n            label: '5/1s',\n        },\n        {\n            id: 0x0,\n            label: '3/1s',\n        },\n    ],\n};\n\nexport const settingMultishotInterval30: SettingMetadata = {\n    id: 0x1e, // 30\n    label: 'Interval',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '0.5s',\n        },\n        {\n            id: 0x1,\n            label: '1s',\n        },\n        {\n            id: 0x2,\n            label: '2s',\n        },\n        {\n            id: 0x5,\n            label: '5s',\n        },\n        {\n            id: 0xa, // 10\n            label: '10s',\n        },\n        {\n            id: 0x1e, // 30\n            label: '30s',\n        },\n        {\n            id: 0x3c, // 60\n            label: '60s',\n        },\n    ],\n};\n\nexport const settingMultishotShutter31: SettingMetadata = {\n    id: 0x1f, // 31\n    label: settingPhotoShutter19.label,\n    length: settingPhotoShutter19.length,\n    values: settingPhotoShutter19.values,\n};\n\nexport const settingMultishotInterval32: SettingMetadata = {\n    id: 0x20, // 32\n    label: 'Interval',\n    length: 4,\n    values: [\n        {\n            id: (0xe << 8) + 0x11,\n            label: 'Auto',\n        },\n        {\n            id: (0x0 << 8) + 0x4,\n            label: '4s',\n        },\n        {\n            id: (0x0 << 8) + 0x5,\n            label: '5s',\n        },\n        {\n            id: (0x0 << 8) + 0xa,\n            label: '10s',\n        },\n        {\n            id: (0x0 << 8) + 0x14,\n            label: '20s',\n        },\n        {\n            id: (0x0 << 8) + 0x3c,\n            label: '1m',\n        },\n        {\n            id: (0x0 << 8) + 0x78,\n            label: '2m',\n        },\n        {\n            id: (0x1 << 8) + 0x2c,\n            label: '5m',\n        },\n        {\n            id: (0x7 << 8) + 0x8,\n            label: '30m',\n        },\n        {\n            id: (0xe << 8) + 0x10,\n            label: '60m',\n        },\n    ],\n};\n\nexport const settingMultishotProtune34: SettingMetadata = {\n    id: 0x22, // 34\n    label: settingVideoProtune10.label,\n    length: settingVideoProtune10.length,\n    values: settingVideoProtune10.values,\n};\n\nexport const settingMultishotWhiteBalance35: SettingMetadata = {\n    id: 0x23, // 35\n    label: settingVideoWhiteBalance11.label,\n    length: settingVideoWhiteBalance11.length,\n    values: settingVideoWhiteBalance11.values,\n};\n\nexport const settingMultishotColor36: SettingMetadata = {\n    id: 0x24, // 36\n    label: settingVideoColor12.label,\n    length: settingVideoColor12.length,\n    values: settingVideoColor12.values,\n};\n\nexport const settingMultishotIsoMax37: SettingMetadata = {\n    id: 0x25, // 37\n    label: settingVideoIsoMax13.label,\n    length: settingPhotoIsoMax24.length,\n    values: settingPhotoIsoMax24.values,\n};\n\nexport const settingMultishotSharpness38: SettingMetadata = {\n    id: 0x26, // 38\n    label: settingVideoSharpness14.label,\n    length: settingVideoSharpness14.length,\n    values: settingVideoSharpness14.values,\n};\n\nexport const settingMultishotEvComp39: SettingMetadata = {\n    id: 0x27, // 39\n    label: settingVideoEvComp15.label,\n    length: settingVideoEvComp15.length,\n    values: settingVideoEvComp15.values,\n};\n\nexport const settingGeneralTouchDisplayScreenSaver51: SettingMetadata = {\n    id: 0x33, // 51\n    label: 'Touch Display Screen Saver',\n    length: 1,\n    values: [\n        {\n            id: 0x1,\n            label: '1min',\n        },\n        {\n            id: 0x2,\n            label: '2min',\n        },\n        {\n            id: 0x3,\n            label: '3min',\n        },\n        {\n            id: 0x0,\n            label: 'Never',\n        },\n    ],\n};\n\nexport const settingGeneralQuickCapture54: SettingMetadata = {\n    id: 0x36, // 54\n    label: 'Quick Capture',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingVideoShutter73: SettingMetadata = {\n    id: 0x49, // 73\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x8,\n            label: '1/60',\n        },\n        {\n            id: 0xd, // 13\n            label: '1/120',\n        },\n        {\n            id: 0x12, // 18\n            label: '1/240',\n        },\n        {\n            id: 0x16, // 22\n            label: '1/480',\n        },\n        {\n            id: 0x17, // 23\n            label: '1/960',\n        },\n    ],\n};\n\nexport const settingPhotoIsoMin75: SettingMetadata = {\n    id: 0x4b, // 75\n    label: 'ISO min',\n    length: settingPhotoIsoMax24.length,\n    values: settingPhotoIsoMax24.values,\n};\n\nexport const settingMultishotIsoMin76: SettingMetadata = {\n    id: 0x4c, // 76\n    label: settingPhotoIsoMin75.label,\n    length: settingPhotoIsoMax24.length,\n    values: settingPhotoIsoMax24.values,\n};\n\nexport const settingVideoStabilization78: SettingMetadata = {\n    id: 0x4e, // 78\n    label: 'Stabilization',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Off' },\n        { id: 0x1, label: 'Auto' },\n    ],\n};\n\nexport const settingVideoMicrophone80: SettingMetadata = {\n    id: 0x50, // 80\n    label: 'Microphone',\n    length: 1,\n    values: [\n        {\n            id: 0x2,\n            label: 'Auto',\n        },\n        {\n            id: 0x1,\n            label: 'Wind',\n        },\n        {\n            id: 0x0,\n            label: 'Stereo',\n        },\n    ],\n};\n\nexport const settingVideoRawAudio81: SettingMetadata = {\n    id: 0x51, // 81\n    label: 'Raw audio',\n    length: 1,\n    values: [\n        {\n            id: 0x3,\n            label: 'Off',\n        },\n        {\n            id: 0x0,\n            label: 'Low',\n        },\n        {\n            id: 0x1,\n            label: 'Medium',\n        },\n        {\n            id: 0x2,\n            label: 'High',\n        },\n    ],\n};\n\nexport const settingGeneralRegionalGps83: SettingMetadata = {\n    id: 0x53, // 83\n    label: 'Regional GPS',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingGeneralRegionalLanguage84: SettingMetadata = {\n    id: 0x54, // 84\n    label: 'Regional Language',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'English',\n        },\n        {\n            id: 0x6,\n            label: 'French',\n        },\n        // TODO\n    ],\n};\n\nexport const settingGeneralVoiceControlLanguage85: SettingMetadata = {\n    id: 0x55, // 85\n    label: 'Voice Control Language',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'English (US)',\n        },\n        {\n            id: 0x1,\n            label: 'English (UK)',\n        },\n        {\n            id: 0xd,\n            label: 'English (India)',\n        },\n        // TODO\n    ],\n};\n\nexport const settingGeneralVoiceControl86: SettingMetadata = {\n    id: 0x56, // 86\n    label: 'Voice Control',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingGeneralBeeps87: SettingMetadata = {\n    id: 0x57, // 87\n    label: 'Beeps',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Mute',\n        },\n        {\n            id: 0x64, // 100\n            label: 'High',\n        },\n        {\n            id: 0x46, // 70\n            label: 'Medium',\n        },\n        {\n            id: 0x28, // 40\n            label: 'Low',\n        },\n    ],\n};\n\nexport const settingGeneralTouchDisplayBrightness88: SettingMetadata = {\n    id: 0x58, // 88\n    label: 'Touch Display Brightness',\n    length: 1,\n    values: [\n        {\n            id: 0x64, // 100\n            label: '100%',\n        },\n        {\n            id: 0x50, // 80\n            label: '80%',\n        },\n        {\n            id: 0xa,\n            label: '10%',\n        },\n        // TODO This is supposed to be slider\n    ],\n};\n\nexport const settingGeneralDefaultMode89: SettingMetadata = {\n    id: 0x59, // 89\n    label: 'Default Mode',\n    length: 1,\n    values: [\n        {\n            id: 0xc, // 12\n            label: 'Video',\n        },\n        {\n            id: 0xf, // 15\n            label: 'Looping',\n        },\n        {\n            id: 0x11, // 17\n            label: 'Photo',\n        },\n        {\n            id: 0x12, // 18\n            label: 'Night',\n        },\n        {\n            id: 0x13, // 19\n            label: 'Burst',\n        },\n        {\n            id: 0x18, // 24\n            label: 'Timewarp Video',\n        },\n        {\n            id: 0xd, // 13\n            label: 'Timelapse Video',\n        },\n        {\n            id: 0x14, // 20\n            label: 'Timelapse Photo',\n        },\n        {\n            id: 0x15, // 21\n            label: 'Nightlapse Photo',\n        },\n    ],\n};\n\nexport const settingGeneralLeds91: SettingMetadata = {\n    id: 0x5b, // 91\n    label: 'LEDs',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'All Off',\n        },\n        {\n            id: 0x1,\n            label: 'Front Off Only',\n        },\n        {\n            id: 0x2,\n            label: 'All On',\n        },\n    ],\n};\n\nexport const settingsCurrentMode92: SettingMetadata = {\n    id: 0x5c, // 92\n    label: 'Current Mode',\n    length: settingGeneralDefaultMode89.length,\n    values: settingGeneralDefaultMode89.values,\n};\n\nexport const settingPhotoShutter97: SettingMetadata = {\n    id: 0x61, // 97\n    label: 'Shutter',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Auto',\n        },\n        {\n            id: 0x1,\n            label: '1/125',\n        },\n        {\n            id: 0x2,\n            label: '1/250',\n        },\n        {\n            id: 0x3,\n            label: '1/500',\n        },\n        {\n            id: 0x4,\n            label: '1/1000',\n        },\n        {\n            id: 0x5,\n            label: '1/2000',\n        },\n    ],\n};\n\nexport const settingPhotoRaw98: SettingMetadata = {\n    id: 0x62, // 98\n    label: 'RAW',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingMultishotRaw99: SettingMetadata = {\n    id: 0x63, // 99\n    label: settingPhotoRaw98.label,\n    length: settingPhotoRaw98.length,\n    values: settingPhotoRaw98.values,\n};\n\nexport const settingVideoIsoMin102: SettingMetadata = {\n    id: 0x66, // 102\n    label: settingPhotoIsoMin75.label,\n    length: settingVideoIsoMax13.length,\n    values: settingVideoIsoMax13.values,\n};\n\nexport const settingGeneralWakeOnVoice104: SettingMetadata = {\n    id: 0x68, // 104\n    label: 'Wake On Voice',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'On',\n        },\n    ],\n};\n\nexport const settingGeneralVideoCompression106: SettingMetadata = {\n    id: 0x6a, // 106\n    label: 'Video Compression',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'H264',\n        },\n        {\n            id: 0x1,\n            label: 'HEVC',\n        },\n    ],\n};\n\nexport const settingVideoVideoTimer107: SettingMetadata = {\n    id: 0x6b, // 107\n    label: 'Video Timer',\n    length: 1,\n    values: [\n        { id: 0x0, label: 'Off' },\n        { id: 0x1, label: '15s' },\n        { id: 0x2, label: '30s' },\n    ],\n};\n\nexport const settingVideoResolutionFormat108: SettingMetadata = {\n    id: 0x6c, // 108\n    label: 'Resolution format',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '4:3',\n        },\n        {\n            id: 0x1,\n            label: '16:9',\n        },\n    ],\n};\n\nexport const settingPhotoSuperPhoto109: SettingMetadata = {\n    id: 0x6d, // 109\n    label: 'Super Photo',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Auto',\n        },\n        {\n            id: 0x2,\n            label: 'HDR On',\n        },\n    ],\n};\n\nexport const settingVideoSpeed111: SettingMetadata = {\n    id: 0x6f, // 111\n    label: 'Speed',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: '15x',\n        },\n        {\n            id: 0x1,\n            label: '30x',\n        },\n        {\n            id: 0x7,\n            label: '2x',\n        },\n        {\n            id: 0x8,\n            label: '5x',\n        },\n        {\n            id: 0x9,\n            label: '10x',\n        },\n    ],\n};\n\nexport const settingGeneralTouchDisplayLandscapeLock112: SettingMetadata = {\n    id: 0x70, // 112\n    label: 'Touch Display Landscape Lock',\n    length: 1,\n    values: [\n        {\n            id: 0x0,\n            label: 'Off',\n        },\n        {\n            id: 0x1,\n            label: 'Up',\n        },\n        {\n            id: 0x2,\n            label: 'Down',\n        },\n    ],\n};\n\n/*\nRegional Video format\n    NTSC\n    PAL\n    TODO CHANGED VALUES:\n        // Not sure which one means this setting\n        42 = 5 -> 6\n        57 = 0 -> 1\n\n*/\n\nexport const videoModeKnownSettings: SettingMetadata[] = [\n    settingVideoResolution2,\n    settingVideoFps3,\n    settingVideoFov4,\n    settingVideoLowLight8,\n    settingVideoStabilization78,\n    settingVideoProtune10,\n    settingVideoShutter73,\n    settingVideoEvComp15,\n    settingVideoWhiteBalance11,\n    settingVideoIsoMin102,\n    settingVideoIsoMax13,\n    settingVideoSharpness14,\n    settingVideoColor12,\n    settingVideoRawAudio81,\n    settingVideoMicrophone80,\n    settingVideoVideoTimer107,\n    settingVideoResolutionFormat108,\n];\n\nexport const loopingModeKnownSettings: SettingMetadata[] = [settingVideoResolution2, settingVideoFps3, settingVideoFov4, settingVideoInterval6, settingVideoLowLight8, settingVideoStabilization78];\n\nexport const timewarpModeKnownSettings: SettingMetadata[] = [\n    settingVideoResolution2,\n    settingVideoSpeed111,\n    // But limited to \"Wide\" only\n    settingVideoFov4,\n];\n\nexport const timelapseVideoModeKnownSettings: SettingMetadata[] = [settingVideoResolution2, settingVideoFov4, settingVideoInterval5];\n\nexport const timelapsePhotoModeKnownSettings: SettingMetadata[] = [\n    settingMultishotInterval30,\n    settingMultishotFov28,\n    settingMultishotEvComp39,\n    settingMultishotWhiteBalance35,\n    settingMultishotIsoMin76,\n    settingMultishotIsoMax37,\n    settingMultishotSharpness38,\n    settingMultishotColor36,\n    settingMultishotProtune34,\n];\n\nexport const nightlapseModeKnownSettings: SettingMetadata[] = [\n    settingMultishotIsoMin76,\n    settingMultishotIsoMax37,\n    settingMultishotShutter31,\n    settingMultishotInterval32,\n    settingMultishotFov28,\n    settingMultishotProtune34,\n    settingMultishotWhiteBalance35,\n    settingMultishotRaw99,\n];\n\nexport const photoNightModeKnownSettings: SettingMetadata[] = [\n    settingPhotoShutter19,\n    settingPhotoFov17,\n    settingPhotoEvComp26,\n    settingPhotoWhiteBalance22,\n    settingPhotoIsoMin75,\n    settingPhotoIsoMax24,\n    settingPhotoSharpness25,\n    settingPhotoColor23,\n    settingPhotoProtune21,\n    settingPhotoRaw98,\n];\n\nexport const photoBurstModeKnownSettings: SettingMetadata[] = [\n    settingMultishotBurstRate29,\n    settingMultishotFov28,\n    settingMultishotProtune34,\n    settingMultishotEvComp39,\n    settingMultishotWhiteBalance35,\n    settingMultishotIsoMin76,\n    settingMultishotIsoMax37,\n    settingMultishotSharpness38,\n    settingMultishotColor36,\n];\n\nexport const photoSingleModeKnownSettings: SettingMetadata[] = [\n    settingPhotoFov17,\n    settingPhotoSuperPhoto109,\n    settingPhotoProtune21,\n    settingPhotoShutter97,\n    settingPhotoEvComp26,\n    settingPhotoWhiteBalance22,\n    settingPhotoIsoMin75,\n    settingPhotoIsoMax24,\n    settingPhotoSharpness25,\n    settingPhotoColor23,\n];\n\nexport const generalSettings: SettingMetadata[] = [\n    settingGeneralQuickCapture54,\n    settingGeneralBeeps87,\n    settingGeneralDefaultMode89,\n    settingGeneralLeds91,\n    settingGeneralVideoCompression106,\n    settingGeneralVoiceControl86,\n    settingGeneralWakeOnVoice104,\n    settingGeneralVoiceControlLanguage85,\n    settingGeneralTouchDisplayLandscapeLock112,\n    settingGeneralTouchDisplayScreenSaver51,\n    settingGeneralTouchDisplayBrightness88,\n    settingGeneralRegionalGps83,\n    settingGeneralRegionalLanguage84,\n];\n\nexport const allKnownSettings: SettingMetadata[] = [\n    ...videoModeKnownSettings,\n    ...loopingModeKnownSettings,\n    ...timewarpModeKnownSettings,\n    ...timelapseVideoModeKnownSettings,\n    ...timelapsePhotoModeKnownSettings,\n    ...nightlapseModeKnownSettings,\n    ...photoNightModeKnownSettings,\n    ...photoBurstModeKnownSettings,\n    ...photoSingleModeKnownSettings,\n    ...generalSettings,\n];\n","import {\n    settingGeneralBeeps87,\n    settingGeneralDefaultMode89,\n    settingGeneralLeds91,\n    settingGeneralQuickCapture54,\n    settingGeneralRegionalGps83,\n    settingGeneralRegionalLanguage84,\n    settingGeneralTouchDisplayBrightness88,\n    settingGeneralTouchDisplayLandscapeLock112,\n    settingGeneralTouchDisplayScreenSaver51,\n    settingGeneralVideoCompression106,\n    settingGeneralVoiceControl86,\n    settingGeneralVoiceControlLanguage85,\n    settingGeneralWakeOnVoice104,\n    SettingMetadata,\n    settingMultishotBurstRate29,\n    settingMultishotColor36,\n    settingMultishotEvComp39,\n    settingMultishotFov28,\n    settingMultishotInterval30,\n    settingMultishotInterval32,\n    settingMultishotIsoMax37,\n    settingMultishotIsoMin76,\n    settingMultishotProtune34,\n    settingMultishotRaw99,\n    settingMultishotSharpness38,\n    settingMultishotShutter31,\n    settingMultishotWhiteBalance35,\n    settingPhotoColor23,\n    settingPhotoEvComp26,\n    settingPhotoFov17,\n    settingPhotoIsoMax24,\n    settingPhotoIsoMin75,\n    settingPhotoProtune21,\n    settingPhotoRaw98,\n    settingPhotoSharpness25,\n    settingPhotoShutter19,\n    settingPhotoShutter97,\n    settingPhotoSuperPhoto109,\n    settingPhotoWhiteBalance22,\n    settingsCurrentMode92,\n    settingVideoColor12,\n    settingVideoEvComp15,\n    settingVideoFov4,\n    settingVideoFps3,\n    settingVideoInterval5,\n    settingVideoInterval6,\n    settingVideoIsoMax13,\n    settingVideoIsoMin102,\n    settingVideoLowLight8,\n    settingVideoMicrophone80,\n    settingVideoProtune10,\n    settingVideoRawAudio81,\n    settingVideoResolution2,\n    settingVideoResolutionFormat108,\n    settingVideoSharpness14,\n    settingVideoShutter73,\n    settingVideoSpeed111,\n    settingVideoStabilization78,\n    settingVideoVideoTimer107,\n    settingVideoWhiteBalance11,\n} from 'store/goproBluetoothServiceActions/goproSettingsMetadata';\nimport { RootState } from 'store/store';\n\nimport { createSelector } from '@reduxjs/toolkit';\n\n// TODO use selectors to convert between stored state data to UI data\n\n// select all settings for current mode, return list of settings\n// select current mode sd card storage left string\n// select battery percentage\n// select is shutter active\n// select current recording time string\n// ...\n\nconst makeSettingSelector = (settingMetadata: SettingMetadata) =>\n    createSelector(\n        (state: RootState) => state.goproSettingsReducer.settings[settingMetadata.id],\n        (settingValue) => {\n            const value = settingValue?.value;\n            if (value === undefined) return undefined;\n            const valueMetadata = settingMetadata.values.find((valueMeta) => valueMeta.id === value);\n            return { settingId: settingMetadata.id, settingLabel: settingMetadata.label, value, valueLabel: valueMetadata?.label, possibleValues: settingMetadata.values };\n        }\n    );\n\nconst selectSettingVideoResolution2 = makeSettingSelector(settingVideoResolution2);\nconst selectSettingVideoFps3 = makeSettingSelector(settingVideoFps3);\nconst selectSettingVideoFov4 = makeSettingSelector(settingVideoFov4);\nconst selectSettingInterval5 = makeSettingSelector(settingVideoInterval5);\nconst selectSettingVideoInterval6 = makeSettingSelector(settingVideoInterval6);\nconst selectSettingVideoLowLight8 = makeSettingSelector(settingVideoLowLight8);\nconst selectSettingVideoProtune10 = makeSettingSelector(settingVideoProtune10);\nconst selectSettingVideoWhiteBalance11 = makeSettingSelector(settingVideoWhiteBalance11);\nconst selectSettingVideoColor12 = makeSettingSelector(settingVideoColor12);\nconst selectSettingVideoIsoMax13 = makeSettingSelector(settingVideoIsoMax13);\nconst selectSettingVideoSharpness14 = makeSettingSelector(settingVideoSharpness14);\nconst selectSettingVideoEvComp15 = makeSettingSelector(settingVideoEvComp15);\nconst selectSettingPhotoFov17 = makeSettingSelector(settingPhotoFov17);\nconst selectSettingPhotoShutter19 = makeSettingSelector(settingPhotoShutter19);\nconst selectSettingPhotoProtune21 = makeSettingSelector(settingPhotoProtune21);\nconst selectSettingPhotoWhiteBalance22 = makeSettingSelector(settingPhotoWhiteBalance22);\nconst selectSettingPhotoColor23 = makeSettingSelector(settingPhotoColor23);\nconst selectSettingPhotoIsoMax24 = makeSettingSelector(settingPhotoIsoMax24);\nconst selectSettingPhotoSharpness25 = makeSettingSelector(settingPhotoSharpness25);\nconst selectSettingPhotoEvComp26 = makeSettingSelector(settingPhotoEvComp26);\nconst selectSettingMultishotFov28 = makeSettingSelector(settingMultishotFov28);\nconst selectSettingMultishotBurstRate29 = makeSettingSelector(settingMultishotBurstRate29);\nconst selectSettingMultishotInterval30 = makeSettingSelector(settingMultishotInterval30);\nconst selectSettingMultishotShutter31 = makeSettingSelector(settingMultishotShutter31);\nconst selectSettingMultishotInterval32 = makeSettingSelector(settingMultishotInterval32);\nconst selectSettingMultishotProtune34 = makeSettingSelector(settingMultishotProtune34);\nconst selectSettingMultishotWhiteBalance35 = makeSettingSelector(settingMultishotWhiteBalance35);\nconst selectSettingMultishotColor36 = makeSettingSelector(settingMultishotColor36);\nconst selectSettingMultishotIsoMax37 = makeSettingSelector(settingMultishotIsoMax37);\nconst selectSettingMultishotSharpness38 = makeSettingSelector(settingMultishotSharpness38);\nconst selectSettingMultishotEvComp39 = makeSettingSelector(settingMultishotEvComp39);\nconst selectSettingGeneralTouchDisplayScreenSaver51 = makeSettingSelector(settingGeneralTouchDisplayScreenSaver51);\nconst selectSettingGeneralQuickCapture54 = makeSettingSelector(settingGeneralQuickCapture54);\nconst selectSettingVideoShutter73 = makeSettingSelector(settingVideoShutter73);\nconst selectSettingPhotoIsoMin75 = makeSettingSelector(settingPhotoIsoMin75);\nconst selectSettingMultishotIsoMin76 = makeSettingSelector(settingMultishotIsoMin76);\nconst selectSettingVideoStabilization78 = makeSettingSelector(settingVideoStabilization78);\nconst selectSettingVideoMicrophone80 = makeSettingSelector(settingVideoMicrophone80);\nconst selectSettingVideoRawAudio81 = makeSettingSelector(settingVideoRawAudio81);\nconst selectSettingGeneralRegionalGps83 = makeSettingSelector(settingGeneralRegionalGps83);\nconst selectSettingGeneralRegionalLanguage84 = makeSettingSelector(settingGeneralRegionalLanguage84);\nconst selectSettingGeneralVoiceControlLanguage85 = makeSettingSelector(settingGeneralVoiceControlLanguage85);\nconst selectSettingGeneralVoiceControl86 = makeSettingSelector(settingGeneralVoiceControl86);\nconst selectSettingGeneralBeeps87 = makeSettingSelector(settingGeneralBeeps87);\nconst selectSettingGeneralTouchDisplayBrightness88 = makeSettingSelector(settingGeneralTouchDisplayBrightness88);\nconst selectSettingGeneralDefaultMode89 = makeSettingSelector(settingGeneralDefaultMode89);\nconst selectSettingGeneralLeds91 = makeSettingSelector(settingGeneralLeds91);\nconst selectSettingsCurrentMode92 = makeSettingSelector(settingsCurrentMode92);\nconst selectSettingPhotoShutter97 = makeSettingSelector(settingPhotoShutter97);\nconst selectSettingPhotoRaw98 = makeSettingSelector(settingPhotoRaw98);\nconst selectSettingMultishotRaw99 = makeSettingSelector(settingMultishotRaw99);\nconst selectSettingVideoIsoMin102 = makeSettingSelector(settingVideoIsoMin102);\nconst selectSettingGeneralWakeOnVoice104 = makeSettingSelector(settingGeneralWakeOnVoice104);\nconst selectSettingGeneralVideoCompression106 = makeSettingSelector(settingGeneralVideoCompression106);\nconst selectSettingVideoVideoTimer107 = makeSettingSelector(settingVideoVideoTimer107);\nconst selectSettingVideoResolutionFormat108 = makeSettingSelector(settingVideoResolutionFormat108);\nconst selectSettingPhotoSuperPhoto109 = makeSettingSelector(settingPhotoSuperPhoto109);\nconst selectSettingVideoSpeed111 = makeSettingSelector(settingVideoSpeed111);\nconst selectSettingGeneralTouchDisplayLandscapeLock112 = makeSettingSelector(settingGeneralTouchDisplayLandscapeLock112);\n\nconst selectVideoModeSettings = createSelector(\n    selectSettingVideoResolution2,\n    selectSettingVideoFps3,\n    selectSettingVideoFov4,\n    selectSettingVideoLowLight8,\n    selectSettingVideoStabilization78,\n    selectSettingVideoProtune10,\n    selectSettingVideoShutter73,\n    selectSettingVideoEvComp15,\n    selectSettingVideoWhiteBalance11,\n    selectSettingVideoIsoMin102,\n    selectSettingVideoIsoMax13,\n    selectSettingVideoSharpness14,\n    selectSettingVideoColor12,\n    selectSettingVideoRawAudio81,\n    selectSettingVideoMicrophone80,\n    selectSettingVideoVideoTimer107,\n    selectSettingVideoResolutionFormat108,\n    (\n        settingResolution2Value,\n        settingFps3Value,\n        settingFov4Value,\n        settingLowLight8Value,\n        settingStabilization78Value,\n        settingProtune10Value,\n        settingShutter73Value,\n        settingEvComp15Value,\n        settingWhiteBalance11Value,\n        settingIsoMin102Value,\n        settingIsoMax13Value,\n        settingSharpness14Value,\n        settingColor12Value,\n        settingRawAudio81Value,\n        settingMicrophone80Value,\n        settingVideoTimer107Value,\n        settingResolutionFormat108Value\n    ) => {\n        const settings = [\n            settingVideoTimer107Value,\n            settingResolutionFormat108Value,\n            settingResolution2Value,\n            settingFps3Value,\n            settingFov4Value,\n            settingLowLight8Value,\n            settingStabilization78Value,\n            settingProtune10Value,\n        ];\n        if (settingProtune10Value?.value) {\n            settings.push(\n                ...[\n                    settingShutter73Value,\n                    settingEvComp15Value,\n                    settingWhiteBalance11Value,\n                    settingIsoMin102Value,\n                    settingIsoMax13Value,\n                    settingSharpness14Value,\n                    settingColor12Value,\n                    settingRawAudio81Value,\n                    settingMicrophone80Value,\n                ]\n            );\n        }\n\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectLoopingModeSettings = createSelector(\n    selectSettingVideoResolution2,\n    selectSettingVideoFps3,\n    selectSettingVideoFov4,\n    selectSettingVideoInterval6,\n    selectSettingVideoLowLight8,\n    selectSettingVideoStabilization78,\n    (settingVideoResolution2Value, settingVideoFps3Value, settingVideoFov4Value, settingVideoInterval6Value, settingVideoLowLight8Value, settingVideoStabilization78Value) => {\n        const settings = [settingVideoResolution2Value, settingVideoFps3Value, settingVideoFov4Value, settingVideoInterval6Value, settingVideoLowLight8Value, settingVideoStabilization78Value];\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectTimewarpModeSettings = createSelector(\n    selectSettingVideoResolution2,\n    selectSettingVideoFov4,\n    selectSettingVideoSpeed111,\n    (settingVideoResolution2Value, settingVideoFov4Value, settingVideoSpeed111Value) => {\n        // TODO limit FOV to wide only\n        const settings = [settingVideoResolution2Value, settingVideoFov4Value, settingVideoSpeed111Value];\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectTimelapseVideoModeSettings = createSelector(\n    selectSettingVideoResolution2,\n    selectSettingVideoFov4,\n    selectSettingInterval5,\n    (settingVideoResolution2Value, settingVideoFov4Value, settingInterval5Value) => {\n        const settings = [settingVideoResolution2Value, settingVideoFov4Value, settingInterval5Value];\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectTimelapsePhotoModeSettings = createSelector(\n    selectSettingMultishotInterval30,\n    selectSettingMultishotFov28,\n    selectSettingMultishotEvComp39,\n    selectSettingMultishotWhiteBalance35,\n    selectSettingMultishotIsoMin76,\n    selectSettingMultishotIsoMax37,\n    selectSettingMultishotSharpness38,\n    selectSettingMultishotColor36,\n    selectSettingMultishotProtune34,\n    (\n        settingMultishotInterval30Value,\n        settingMultishotFov28Value,\n        settingMultishotEvComp39Value,\n        settingMultishotWhiteBalance35Value,\n        settingMultishotIsoMin76Value,\n        settingMultishotIsoMax37Value,\n        settingMultishotSharpness38Value,\n        settingMultishotColor36Value,\n        settingMultishotProtune34Value\n    ) => {\n        const settings = [\n            settingMultishotInterval30Value,\n            settingMultishotFov28Value,\n            // TODO add raw setting here\n            settingMultishotProtune34Value,\n        ];\n        if (settingMultishotEvComp39Value?.value) {\n            settings.push(\n                ...[\n                    settingMultishotEvComp39Value,\n                    settingMultishotWhiteBalance35Value,\n                    settingMultishotIsoMin76Value,\n                    settingMultishotIsoMax37Value,\n                    settingMultishotSharpness38Value,\n                    settingMultishotColor36Value,\n                ]\n            );\n        }\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectNightlapseModeSettings = createSelector(\n    selectSettingMultishotFov28,\n    selectSettingMultishotShutter31,\n    selectSettingMultishotInterval32,\n    selectSettingMultishotProtune34,\n    selectSettingMultishotWhiteBalance35,\n    selectSettingMultishotIsoMax37,\n    selectSettingMultishotIsoMin76,\n    selectSettingMultishotRaw99,\n    (\n        settingMultishotFov28Value,\n        settingMultishotShutter31Value,\n        settingMultishotInterval32Value,\n        settingMultishotProtune34Value,\n        settingMultishotWhiteBalance35Value,\n        settingMultishotIsoMax37Value,\n        settingMultishotIsoMin76Value,\n        settingMultishotRaw99Value\n    ) => {\n        const settings = [settingMultishotShutter31Value, settingMultishotInterval32Value, settingMultishotFov28Value, settingMultishotRaw99Value, settingMultishotProtune34Value];\n        if (settingMultishotProtune34Value?.value) {\n            settings.push(\n                ...[\n                    // evcomp\n                    settingMultishotWhiteBalance35Value,\n                    settingMultishotIsoMin76Value,\n                    settingMultishotIsoMax37Value,\n                    // sharpness\n                    // color\n                ]\n            );\n        }\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectPhotoNightModeSettings = createSelector(\n    selectSettingPhotoFov17,\n    selectSettingPhotoShutter19,\n    selectSettingPhotoProtune21,\n    selectSettingPhotoWhiteBalance22,\n    selectSettingPhotoColor23,\n    selectSettingPhotoIsoMax24,\n    selectSettingPhotoSharpness25,\n    selectSettingPhotoEvComp26,\n    selectSettingPhotoIsoMin75,\n    selectSettingPhotoRaw98,\n    (\n        settingPhotoFov17Value,\n        settingPhotoShutter19Value,\n        settingPhotoProtune21Value,\n        settingPhotoWhiteBalance22Value,\n        settingPhotoColor23Value,\n        settingPhotoIsoMax24Value,\n        settingPhotoSharpness25Value,\n        settingPhotoEvComp26Value,\n        settingPhotoIsoMin75Value,\n        settingPhotoRaw98Value\n    ) => {\n        const settings = [settingPhotoShutter19Value, settingPhotoFov17Value, settingPhotoRaw98Value, settingPhotoProtune21Value];\n        if (settingPhotoProtune21Value?.value) {\n            settings.push(\n                ...[settingPhotoEvComp26Value, settingPhotoWhiteBalance22Value, settingPhotoIsoMin75Value, settingPhotoIsoMax24Value, settingPhotoSharpness25Value, settingPhotoColor23Value]\n            );\n        }\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectPhotoBurstModeSettings = createSelector(\n    selectSettingMultishotFov28,\n    selectSettingMultishotBurstRate29,\n    selectSettingMultishotProtune34,\n    selectSettingMultishotWhiteBalance35,\n    selectSettingMultishotColor36,\n    selectSettingMultishotIsoMax37,\n    selectSettingMultishotSharpness38,\n    selectSettingMultishotEvComp39,\n    selectSettingMultishotIsoMin76,\n    (\n        settingMultishotFov28Value,\n        settingMultishotBurstRate29Value,\n        settingMultishotProtune34Value,\n        settingMultishotWhiteBalance35Value,\n        settingMultishotColor36Value,\n        settingMultishotIsoMax37Value,\n        settingMultishotSharpness38Value,\n        settingMultishotEvComp39Value,\n        settingMultishotIsoMin76Value\n    ) => {\n        const settings = [settingMultishotBurstRate29Value, settingMultishotFov28Value, settingMultishotProtune34Value];\n        if (settingMultishotProtune34Value?.value) {\n            settings.push(\n                ...[\n                    settingMultishotEvComp39Value,\n                    settingMultishotWhiteBalance35Value,\n                    settingMultishotIsoMin76Value,\n                    settingMultishotIsoMax37Value,\n                    settingMultishotSharpness38Value,\n                    settingMultishotColor36Value,\n                ]\n            );\n        }\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nconst selectPhotoSingleModeSettings = createSelector(\n    selectSettingPhotoFov17,\n    selectSettingPhotoProtune21,\n    selectSettingPhotoWhiteBalance22,\n    selectSettingPhotoColor23,\n    selectSettingPhotoIsoMax24,\n    selectSettingPhotoSharpness25,\n    selectSettingPhotoEvComp26,\n    selectSettingPhotoIsoMin75,\n    selectSettingPhotoShutter97,\n    selectSettingPhotoSuperPhoto109,\n    (\n        settingPhotoFov17Value,\n        settingPhotoProtune21Value,\n        settingPhotoWhiteBalance22Value,\n        settingPhotoColor23Value,\n        settingPhotoIsoMax24Value,\n        settingPhotoSharpness25Value,\n        settingPhotoEvComp26Value,\n        settingPhotoIsoMin75Value,\n        settingPhotoShutter97Value,\n        settingPhotoSuperPhoto109Value\n    ) => {\n        const settings = [\n            settingPhotoFov17Value,\n            settingPhotoSuperPhoto109Value,\n            // raw\n            settingPhotoProtune21Value,\n        ];\n        if (settingPhotoProtune21Value?.value) {\n            settings.push(\n                ...[\n                    settingPhotoShutter97Value,\n                    settingPhotoEvComp26Value,\n                    settingPhotoWhiteBalance22Value,\n                    settingPhotoIsoMin75Value,\n                    settingPhotoIsoMax24Value,\n                    settingPhotoSharpness25Value,\n                    settingPhotoColor23Value,\n                ]\n            );\n        }\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nexport const selectCurrentModeSettings = createSelector(\n    selectSettingsCurrentMode92,\n    selectVideoModeSettings,\n    selectLoopingModeSettings,\n    selectPhotoSingleModeSettings,\n    selectPhotoBurstModeSettings,\n    selectPhotoNightModeSettings,\n    selectTimewarpModeSettings,\n    selectTimelapseVideoModeSettings,\n    selectTimelapsePhotoModeSettings,\n    selectNightlapseModeSettings,\n    (\n        currentMode,\n        videoModeSettings,\n        loopingModeSettings,\n        photoSingleModeSettings,\n        photoBurstModeSettings,\n        photoNightModeSettings,\n        timewarpModeSettings,\n        timelapseVideoModeSettings,\n        timelapsePhotoModeSettings,\n        nightlapseModeSettings\n    ) => {\n        switch (currentMode?.value) {\n            case SettingsModes.video:\n                return videoModeSettings;\n            case SettingsModes.videoLooping:\n                return loopingModeSettings;\n            case SettingsModes.photoSingle:\n                return photoSingleModeSettings;\n            case SettingsModes.photoNight:\n                return photoNightModeSettings;\n            case SettingsModes.photoBurst:\n                return photoBurstModeSettings;\n            case SettingsModes.timelapseTimewarp:\n                return timewarpModeSettings;\n            case SettingsModes.timelapseVideo:\n                return timelapseVideoModeSettings;\n            case SettingsModes.timelapsePhoto:\n                return timelapsePhotoModeSettings;\n            case SettingsModes.nightlapse:\n                return nightlapseModeSettings;\n            default:\n                return [];\n        }\n    }\n);\n\nexport const selectGeneralSettings = createSelector(\n    selectSettingGeneralTouchDisplayScreenSaver51,\n    selectSettingGeneralQuickCapture54,\n    selectSettingGeneralRegionalGps83,\n    selectSettingGeneralRegionalLanguage84,\n    selectSettingGeneralVoiceControlLanguage85,\n    selectSettingGeneralVoiceControl86,\n    selectSettingGeneralBeeps87,\n    selectSettingGeneralTouchDisplayBrightness88,\n    selectSettingGeneralDefaultMode89,\n    selectSettingGeneralLeds91,\n    selectSettingGeneralWakeOnVoice104,\n    selectSettingGeneralVideoCompression106,\n    selectSettingGeneralTouchDisplayLandscapeLock112,\n    (\n        settingGeneralTouchDisplayScreenSaver51Value,\n        settingGeneralQuickCapture54Value,\n        settingGeneralRegionalGps83Value,\n        settingGeneralRegionalLanguage84Value,\n        settingGeneralVoiceControlLanguage85Value,\n        settingGeneralVoiceControl86Value,\n        settingGeneralBeeps87Value,\n        settingGeneralTouchDisplayBrightness88Value,\n        settingGeneralDefaultMode89Value,\n        settingGeneralLeds91Value,\n        settingGeneralWakeOnVoice104Value,\n        settingGeneralVideoCompression106Value,\n        settingGeneralTouchDisplayLandscapeLock112Value\n    ) => {\n        const settings = [\n            settingGeneralTouchDisplayScreenSaver51Value,\n            settingGeneralQuickCapture54Value,\n            settingGeneralRegionalGps83Value,\n            settingGeneralRegionalLanguage84Value,\n            settingGeneralVoiceControlLanguage85Value,\n            settingGeneralVoiceControl86Value,\n            settingGeneralBeeps87Value,\n            settingGeneralTouchDisplayBrightness88Value,\n            settingGeneralDefaultMode89Value,\n            settingGeneralLeds91Value,\n            settingGeneralWakeOnVoice104Value,\n            settingGeneralVideoCompression106Value,\n            settingGeneralTouchDisplayLandscapeLock112Value,\n        ];\n        return settings.filter((setting) => setting !== undefined).map((x) => x as NonNullable<typeof x>);\n    }\n);\n\nexport const selectCurrentModeGroup = createSelector(selectSettingsCurrentMode92, (currentMode) => {\n    switch (currentMode?.value) {\n        case SettingsModes.video:\n            return SettingsModesGroups.video;\n        case SettingsModes.videoLooping:\n            return SettingsModesGroups.video;\n        case SettingsModes.photoSingle:\n            return SettingsModesGroups.photo;\n        case SettingsModes.photoNight:\n            return SettingsModesGroups.photo;\n        case SettingsModes.photoBurst:\n            return SettingsModesGroups.photo;\n        case SettingsModes.timelapseTimewarp:\n            return SettingsModesGroups.timelapse;\n        case SettingsModes.timelapseVideo:\n            return SettingsModesGroups.timelapse;\n        case SettingsModes.timelapsePhoto:\n            return SettingsModesGroups.photo;\n        case SettingsModes.nightlapse:\n            return SettingsModesGroups.photo;\n        default:\n            return SettingsModesGroups.video;\n    }\n});\n\nexport enum SettingsModesGroups {\n    video,\n    photo,\n    timelapse,\n}\n\nexport enum SettingsModes {\n    video = 0xc,\n    videoLooping = 0xf,\n    photoSingle = 0x11,\n    photoNight = 0x12,\n    photoBurst = 0x13,\n    timelapseTimewarp = 0x18,\n    timelapseVideo = 0xd,\n    timelapsePhoto = 0x14,\n    nightlapse = 0x15,\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n    statusAccMicStatus74,\n    statusActivePhotoPresets94,\n    statusActivePreset97,\n    statusActivePresetsGroup96,\n    statusActiveTimelapsePresets95,\n    statusActiveVideoPresets93,\n    statusActualOrientation86,\n    statusAppCount31,\n    statusApSsid30,\n    statusApState69,\n    statusBand5ghzAvail81,\n    statusBattOkayForOta83,\n    statusCameraLensType105,\n    statusCameraLocateActive45,\n    statusCaptureDelayActive101,\n    statusCreatingPreset109,\n    statusCurrentMode89,\n    statusCurrentTimeMsec57,\n    statusDateTime40,\n    statusDigitalZoom75,\n    statusDigitalZoomActive77,\n    statusDownloadCancelRequestPending42,\n    statusEnable17,\n    statusEnable32,\n    statusEncodingActive10,\n    statusExposureSelectType65,\n    statusExposureSelectX66,\n    statusExposureSelectY67,\n    statusExternalBatteryLevel4,\n    statusExternalBatteryPresent3,\n    statusFirstTimeUse79,\n    statusGpsStatus68,\n    statusInContextualMenu63,\n    statusInternalBatteryLevel2,\n    statusInternalBatteryPercentage70,\n    statusInternalCameraPresent1,\n    statusLastHilightTimeMsec59,\n    statusLcdLockActive11,\n    statusLegacyCurrentPresetGroup43,\n    statusLegacyCurrentPresetGroupChild44,\n    statusLegacyLastPhotoMode72,\n    statusLegacyLastTimelapseMode73,\n    statusLegacyLastVideoMode71,\n    statusLinuxCoreActive104,\n    statusLogsReady91,\n    statusMediaModMicStatus102,\n    statusMediaModStatus110,\n    StatusMetadata,\n    statusMobileFriendlyVideo78,\n    statusMultiShotCountDown49,\n    statusNextPollMsec60,\n    statusNumGroupPhotos36,\n    statusNumGroupVideos37,\n    statusNumHilights58,\n    statusNumTotalLiveBursts100,\n    statusNumTotalPhotos38,\n    statusNumTotalVideos39,\n    statusOtaStatus41,\n    statusPairing28,\n    statusPairTime21,\n    statusPresetModified98,\n    statusProvisionStatus24,\n    statusQuickCaptureActive9,\n    statusRemainingLiveBursts99,\n    statusRemainingPhotos34,\n    statusRemainingSpace54,\n    statusRemainingTimelapseTime64,\n    statusRemainingVideoTime35,\n    statusRemoteControlConnected27,\n    statusRemoteControlVersion26,\n    statusScanTimeMsec23,\n    statusScheduledEnabled108,\n    statusScheduledPreset107,\n    statusSdStatus33,\n    statusState19,\n    statusState22,\n    statusSupported55,\n    statusSystemBusy8,\n    statusSystemHot6,\n    statusSystemReady82,\n    statusThermalMitigationMode87,\n    statusTimewarp1xActive92,\n    statusTimewarpSpeedRampActive103,\n    statusTurboTransfer113,\n    statusType20,\n    statusVideoHindsightCaptureActive106,\n    statusVideoLowTempAlert85,\n    statusVideoProgressCounter13,\n    statusWifiBars56,\n    statusWirelessBand76,\n    statusWlanSsid29,\n    statusZoomWhileEncoding88,\n} from 'store/goproBluetoothServiceActions/goproStatusMetadata';\nimport { StatusValue } from 'store/goproSettingsSlice';\nimport { RootState } from 'store/store';\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { selectCurrentModeGroup, SettingsModesGroups } from './settingsSelectors';\n\nconst makeStatusSelector = (statusMetadata: StatusMetadata) =>\n    createSelector(\n        (state: RootState) => state.goproSettingsReducer.statuses[statusMetadata.id],\n        (statusValue) => {\n            if (statusValue === undefined) return undefined;\n            const valueMetadata = statusMetadata.values.find((valueMeta) => valueMeta.id === statusValue);\n            return { settingId: statusMetadata.id, settingLabel: statusMetadata.label, statusValue, valueLabel: valueMetadata?.label, possibleValues: statusMetadata.values };\n        }\n    );\n\nconst selectStatusInternalCameraPresent1 = makeStatusSelector(statusInternalCameraPresent1);\nconst selectStatusInternalBatteryLevel2 = makeStatusSelector(statusInternalBatteryLevel2);\nconst selectStatusExternalBatteryPresent3 = makeStatusSelector(statusExternalBatteryPresent3);\nconst selectStatusExternalBatteryLevel4 = makeStatusSelector(statusExternalBatteryLevel4);\nconst selectStatusSystemHot6 = makeStatusSelector(statusSystemHot6);\nconst selectStatusSystemBusy8 = makeStatusSelector(statusSystemBusy8);\nconst selectStatusQuickCaptureActive9 = makeStatusSelector(statusQuickCaptureActive9);\nconst selectStatusEncodingActive10 = makeStatusSelector(statusEncodingActive10);\nconst selectStatusLcdLockActive11 = makeStatusSelector(statusLcdLockActive11);\nconst selectStatusVideoProgressCounter13 = makeStatusSelector(statusVideoProgressCounter13);\nconst selectStatusEnable17 = makeStatusSelector(statusEnable17);\nconst selectStatusState19 = makeStatusSelector(statusState19);\nconst selectStatusType20 = makeStatusSelector(statusType20);\nconst selectStatusPairTime21 = makeStatusSelector(statusPairTime21);\nconst selectStatusState22 = makeStatusSelector(statusState22);\nconst selectStatusScanTimeMsec23 = makeStatusSelector(statusScanTimeMsec23);\nconst selectStatusProvisionStatus24 = makeStatusSelector(statusProvisionStatus24);\nconst selectStatusRemoteControlVersion26 = makeStatusSelector(statusRemoteControlVersion26);\nconst selectStatusRemoteControlConnected27 = makeStatusSelector(statusRemoteControlConnected27);\nconst selectStatusPairing28 = makeStatusSelector(statusPairing28);\nconst selectStatusWlanSsid29 = makeStatusSelector(statusWlanSsid29);\nconst selectStatusApSsid30 = makeStatusSelector(statusApSsid30);\nconst selectStatusAppCount31 = makeStatusSelector(statusAppCount31);\nconst selectStatusEnable32 = makeStatusSelector(statusEnable32);\nconst selectStatusSdStatus33 = makeStatusSelector(statusSdStatus33);\nconst selectStatusRemainingPhotos34 = makeStatusSelector(statusRemainingPhotos34);\nconst selectStatusRemainingVideoTime35 = makeStatusSelector(statusRemainingVideoTime35);\nconst selectStatusNumGroupPhotos36 = makeStatusSelector(statusNumGroupPhotos36);\nconst selectStatusNumGroupVideos37 = makeStatusSelector(statusNumGroupVideos37);\nconst selectStatusNumTotalPhotos38 = makeStatusSelector(statusNumTotalPhotos38);\nconst selectStatusNumTotalVideos39 = makeStatusSelector(statusNumTotalVideos39);\nconst selectStatusDateTime40 = makeStatusSelector(statusDateTime40);\nconst selectStatusOtaStatus41 = makeStatusSelector(statusOtaStatus41);\nconst selectStatusDownloadCancelRequestPending42 = makeStatusSelector(statusDownloadCancelRequestPending42);\nconst selectStatusLegacyCurrentPresetGroup43 = makeStatusSelector(statusLegacyCurrentPresetGroup43);\nconst selectStatusLegacyCurrentPresetGroupChild44 = makeStatusSelector(statusLegacyCurrentPresetGroupChild44);\nconst selectStatusCameraLocateActive45 = makeStatusSelector(statusCameraLocateActive45);\nconst selectStatusMultiShotCountDown49 = makeStatusSelector(statusMultiShotCountDown49);\nconst selectStatusRemainingSpace54 = makeStatusSelector(statusRemainingSpace54);\nconst selectStatusSupported55 = makeStatusSelector(statusSupported55);\nconst selectStatusWifiBars56 = makeStatusSelector(statusWifiBars56);\nconst selectStatusCurrentTimeMsec57 = makeStatusSelector(statusCurrentTimeMsec57);\nconst selectStatusNumHilights58 = makeStatusSelector(statusNumHilights58);\nconst selectStatusLastHilightTimeMsec59 = makeStatusSelector(statusLastHilightTimeMsec59);\nconst selectStatusNextPollMsec60 = makeStatusSelector(statusNextPollMsec60);\nconst selectStatusInContextualMenu63 = makeStatusSelector(statusInContextualMenu63);\nconst selectStatusRemainingTimelapseTime64 = makeStatusSelector(statusRemainingTimelapseTime64);\nconst selectStatusExposureSelectType65 = makeStatusSelector(statusExposureSelectType65);\nconst selectStatusExposureSelectX66 = makeStatusSelector(statusExposureSelectX66);\nconst selectStatusExposureSelectY67 = makeStatusSelector(statusExposureSelectY67);\nconst selectStatusGpsStatus68 = makeStatusSelector(statusGpsStatus68);\nconst selectStatusApState69 = makeStatusSelector(statusApState69);\nconst selectStatusInternalBatteryPercentage70 = makeStatusSelector(statusInternalBatteryPercentage70);\nconst selectStatusLegacyLastPhotoMode72 = makeStatusSelector(statusLegacyLastPhotoMode72);\nconst selectStatusLegacyLastVideoMode71 = makeStatusSelector(statusLegacyLastVideoMode71);\nconst selectStatusLegacyLastTimelapseMode73 = makeStatusSelector(statusLegacyLastTimelapseMode73);\nconst selectStatusAccMicStatus74 = makeStatusSelector(statusAccMicStatus74);\nconst selectStatusDigitalZoom75 = makeStatusSelector(statusDigitalZoom75);\nconst selectStatusWirelessBand76 = makeStatusSelector(statusWirelessBand76);\nconst selectStatusDigitalZoomActive77 = makeStatusSelector(statusDigitalZoomActive77);\nconst selectStatusMobileFriendlyVideo78 = makeStatusSelector(statusMobileFriendlyVideo78);\nconst selectStatusFirstTimeUse79 = makeStatusSelector(statusFirstTimeUse79);\nconst selectStatusBand5ghzAvail81 = makeStatusSelector(statusBand5ghzAvail81);\nconst selectStatusSystemReady82 = makeStatusSelector(statusSystemReady82);\nconst selectStatusBattOkayForOta83 = makeStatusSelector(statusBattOkayForOta83);\nconst selectStatusVideoLowTempAlert85 = makeStatusSelector(statusVideoLowTempAlert85);\nconst selectStatusActualOrientation86 = makeStatusSelector(statusActualOrientation86);\nconst selectStatusThermalMitigationMode87 = makeStatusSelector(statusThermalMitigationMode87);\nconst selectStatusZoomWhileEncoding88 = makeStatusSelector(statusZoomWhileEncoding88);\nconst selectStatusCurrentMode89 = makeStatusSelector(statusCurrentMode89);\nconst selectStatusLogsReady91 = makeStatusSelector(statusLogsReady91);\nconst selectStatusTimewarp1xActive92 = makeStatusSelector(statusTimewarp1xActive92);\nconst selectStatusActiveVideoPresets93 = makeStatusSelector(statusActiveVideoPresets93);\nconst selectStatusActivePhotoPresets94 = makeStatusSelector(statusActivePhotoPresets94);\nconst selectStatusActiveTimelapsePresets95 = makeStatusSelector(statusActiveTimelapsePresets95);\nconst selectStatusActivePresetsGroup96 = makeStatusSelector(statusActivePresetsGroup96);\nconst selectStatusActivePreset97 = makeStatusSelector(statusActivePreset97);\nconst selectStatusPresetModified98 = makeStatusSelector(statusPresetModified98);\nconst selectStatusRemainingLiveBursts99 = makeStatusSelector(statusRemainingLiveBursts99);\nconst selectStatusNumTotalLiveBursts100 = makeStatusSelector(statusNumTotalLiveBursts100);\nconst selectStatusCaptureDelayActive101 = makeStatusSelector(statusCaptureDelayActive101);\nconst selectStatusMediaModMicStatus102 = makeStatusSelector(statusMediaModMicStatus102);\nconst selectStatusTimewarpSpeedRampActive103 = makeStatusSelector(statusTimewarpSpeedRampActive103);\nconst selectStatusLinuxCoreActive104 = makeStatusSelector(statusLinuxCoreActive104);\nconst selectStatusCameraLensType105 = makeStatusSelector(statusCameraLensType105);\nconst selectStatusVideoHindsightCaptureActive106 = makeStatusSelector(statusVideoHindsightCaptureActive106);\nconst selectStatusScheduledPreset107 = makeStatusSelector(statusScheduledPreset107);\nconst selectStatusScheduledEnabled108 = makeStatusSelector(statusScheduledEnabled108);\nconst selectStatusCreatingPreset109 = makeStatusSelector(statusCreatingPreset109);\nconst selectStatusMediaModStatus110 = makeStatusSelector(statusMediaModStatus110);\nconst selectStatusTurboTransfer113 = makeStatusSelector(statusTurboTransfer113);\n\nexport const selectIsBatteryCharging = createSelector(selectStatusInternalBatteryLevel2, (batteryLevelStatus) => batteryLevelStatus?.statusValue === 4);\n\nfunction statusAsNumber(value: StatusValue): number {\n    if (typeof value === 'number') return value;\n    throw new Error('Status is not number, did API change?');\n}\n\nexport const selectBatteryPercentage = createSelector(selectStatusInternalBatteryPercentage70, (batteryPercentage) => statusAsNumber(batteryPercentage?.statusValue));\n\nexport const selectStorageRemainingTimeText = createSelector(\n    selectStatusRemainingVideoTime35,\n    selectStatusRemainingPhotos34,\n    selectCurrentModeGroup,\n    (videoRemainingTime, photosRemaining, currentModeGroup) => {\n        const isVideoMode = currentModeGroup !== SettingsModesGroups.photo;\n        if (isVideoMode) {\n            const videoRemainingSeconds = statusAsNumber(videoRemainingTime?.statusValue);\n            const videoRemainingMinutes = Math.floor(videoRemainingSeconds / 60) % 60;\n            const videoRemainingHours = Math.floor(videoRemainingSeconds / 60 / 60);\n            return `${videoRemainingHours.toLocaleString(undefined, { minimumIntegerDigits: 2 })}:${videoRemainingMinutes.toLocaleString(undefined, { minimumIntegerDigits: 2 })}`;\n        }\n        const photos = statusAsNumber(photosRemaining?.statusValue);\n        const storageRemainingTimeText = `${photos <= 999 ? photos.toLocaleString(undefined, { minimumIntegerDigits: 3 }) : '999+'}`;\n        return storageRemainingTimeText;\n    }\n);\n\nexport const selectCurrentRecordingTimeText = createSelector(selectStatusVideoProgressCounter13, (currentRecordingTime) => {\n    const currentRecordingTotalSeconds = statusAsNumber(currentRecordingTime?.statusValue);\n    const currentRecordingMinutes = Math.floor(currentRecordingTotalSeconds / 60);\n    const currentRecordingSeconds = currentRecordingTotalSeconds % 60;\n    return `${currentRecordingMinutes.toLocaleString(undefined, { minimumIntegerDigits: 2 })}:${currentRecordingSeconds.toLocaleString(undefined, { minimumIntegerDigits: 2 })}`;\n});\n\nexport const selectIsShutterActive = createSelector(selectStatusEncodingActive10, (encodingActive) => statusAsNumber(encodingActive?.statusValue) === 1);\n","import Battery20Icon from '@mui/icons-material/Battery20';\nimport Battery50Icon from '@mui/icons-material/Battery50';\nimport Battery80Icon from '@mui/icons-material/Battery80';\nimport BatteryCharging20Icon from '@mui/icons-material/BatteryCharging20';\nimport BatteryCharging50Icon from '@mui/icons-material/BatteryCharging50';\nimport BatteryCharging80Icon from '@mui/icons-material/BatteryCharging80';\nimport BatteryChargingFullIcon from '@mui/icons-material/BatteryChargingFull';\nimport BatteryFullIcon from '@mui/icons-material/BatteryFull';\nimport { IconButton, Typography } from '@mui/material';\n\ninterface IProps {\n    batteryPercentage: number;\n    isCharging: boolean;\n}\n\nfunction getIconByLevelBar(batteryPercentage: number, isCharging: boolean): JSX.Element {\n    // camera returned values defined in statusInternalBatteryLevel2\n    if (batteryPercentage > 80) return isCharging ? <BatteryChargingFullIcon /> : <BatteryFullIcon />;\n    if (batteryPercentage > 50) return isCharging ? <BatteryCharging80Icon /> : <Battery80Icon />;\n    if (batteryPercentage > 20) return isCharging ? <BatteryCharging50Icon /> : <Battery50Icon />;\n    return isCharging ? <BatteryCharging20Icon /> : <Battery20Icon />;\n}\n\nconst BatteryPercentageIcon: React.FC<IProps> = (props) => {\n    const { batteryPercentage, isCharging } = props;\n    const icon = getIconByLevelBar(batteryPercentage, isCharging);\n\n    return (\n        <IconButton>\n            <Typography variant=\"body1\">{batteryPercentage}%</Typography>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport default BatteryPercentageIcon;\n","import { bluetoothDeviceState } from 'store/goproBleServiceState';\nimport { RootState } from 'store/store';\nimport { functionQueue } from 'utilities/functionQueue';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { allKnownSettings } from '../goproSettingsMetadata';\n\ntype CommandData = number[];\nexport async function sendSettingCommand(commandData: CommandData) {\n    await functionQueue(async () => {\n        const { characteristics } = bluetoothDeviceState;\n        if (!characteristics) throw new Error('no characteristics');\n        const { settingsCharacteristic } = characteristics;\n        await settingsCharacteristic.writeValue(new Uint8Array(commandData));\n    }, sendSettingCommand);\n}\n\nfunction getByteLength(data: number) {\n    let i = 0;\n    while (data > 0) {\n        i++;\n        data /= 0x100;\n    }\n    return i;\n}\n\nexport const setSettingValueCommand = createAsyncThunk<void, { settingId: number; valueId: number }, { state: RootState }>('settingsCommands/setSettingValue', async (props) => {\n    const settingLength = allKnownSettings.find((setting) => setting.id === props.settingId)?.length ?? getByteLength(props.valueId);\n    const commandData: number[] = [];\n    commandData.push(settingLength + 2);\n    commandData.push(props.settingId);\n    commandData.push(settingLength);\n    for (let i = 0; i < settingLength; i++) {\n        // eslint-disable-next-line no-bitwise\n        commandData.push((props.valueId >> (i * 8)) & 0xff);\n    }\n    await sendSettingCommand(commandData);\n});\n","import { useState } from 'react';\nimport { setSettingValueCommand } from 'store/goproBluetoothServiceActions/commands/settingsCommands';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { selectCurrentModeSettings } from 'store/selectors/settingsSelectors';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport { Container, Dialog, DialogTitle, FormControl, InputLabel, MenuItem, Paper, Select, SelectChangeEvent } from '@mui/material';\n\nconst useStyles = makeStyles()({\n    temp: {\n        display: 'flex',\n    },\n});\n\nconst SettingsPreview: React.FC = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const handleCloseModal = () => setIsModalOpen(false);\n    const handleOpenModal = () => setIsModalOpen(true);\n    const [previewElevation, setPreviewElevation] = useState(1);\n    useStyles();\n    return (\n        <>\n            <SettingsPreviewModal isOpen={isModalOpen} onClose={handleCloseModal} />\n            <Container maxWidth=\"sm\" sx={{ width: 'fit-content', minWidth: '40vw' }}>\n                <Paper elevation={previewElevation} onMouseOver={() => setPreviewElevation(3)} onMouseOut={() => setPreviewElevation(1)} onClick={handleOpenModal}>\n                    <p style={{ textAlign: 'center' }}>\n                        2.7K|60|W\n                        <br />\n                        PT, ICON, ICON\n                    </p>\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\ninterface IPropss {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nconst SettingsPreviewModal: React.FC<IPropss> = (props) => {\n    const { isOpen, onClose } = props;\n    const currentModeSettings = useAppSelector(selectCurrentModeSettings);\n    return (\n        <>\n            <Dialog open={isOpen} onClose={onClose}>\n                <DialogTitle>Change current mode settings</DialogTitle>\n                {currentModeSettings.map((setting) => (\n                    <SingleSetting key={setting.settingId} setting={setting} />\n                ))}\n                <div>actual view todo</div>\n            </Dialog>\n        </>\n    );\n};\n\nexport default SettingsPreview;\n\ninterface IProps {\n    setting: ReturnType<typeof selectCurrentModeSettings>[0];\n}\n\nconst SingleSetting: React.FC<IProps> = (props) => {\n    const dispatch = useAppDispatch();\n    const { setting } = props;\n    const currentSettingValue = useAppSelector((state) => state.goproSettingsReducer.settings[setting.settingId]);\n\n    const handleChange = (event: SelectChangeEvent) => {\n        const selectedSettingValue = parseInt(event.target.value, 10);\n        dispatch(setSettingValueCommand({ settingId: setting.settingId, valueId: selectedSettingValue }));\n    };\n    useStyles();\n\n    if (!currentSettingValue) return <div>something went wrong... known setting missing</div>;\n    return (\n        <>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                <InputLabel id=\"demo-simple-select-standard-label\">{setting.settingLabel}</InputLabel>\n                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={currentSettingValue.value.toString()} onChange={handleChange} label={setting.settingLabel}>\n                    {setting.possibleValues.map((possibleValue) => (\n                        <MenuItem key={possibleValue.id} value={possibleValue.id}>\n                            {possibleValue.label}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </>\n    );\n};\n","import {\n    apControlWiFiApOffCommand,\n    apControlWiFiApOnCommand,\n    legacyPresetsLoadGroupMultishotCommand,\n    legacyPresetsLoadGroupPhotoCommand,\n    legacyPresetsLoadGroupVideoCommand,\n    setShutterOffCommand,\n    setShutterOnCommand,\n    sleepCommand,\n} from 'store/goproBluetoothServiceActions/commands/commands';\nimport { getSettingsCommand, getStatusesCommand } from 'store/goproBluetoothServiceActions/commands/queryCommands';\nimport { statusApState69 } from 'store/goproBluetoothServiceActions/goproStatusMetadata';\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\nimport { selectDeviceName } from 'store/selectors/bluetoothStateSelectors';\nimport { selectCurrentModeGroup, SettingsModesGroups } from 'store/selectors/settingsSelectors';\nimport { selectBatteryPercentage, selectCurrentRecordingTimeText, selectIsBatteryCharging, selectIsShutterActive, selectStorageRemainingTimeText } from 'store/selectors/statusSelectors';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\nimport RecordInactiveIcon from '@mui/icons-material/RadioButtonChecked';\nimport SdStorageIcon from '@mui/icons-material/SdStorage';\n// import SignalWifi0BarIcon from '@mui/icons-material/SignalWifi0Bar';\n// import SignalWifi1BarIcon from '@mui/icons-material/SignalWifi1Bar';\n// import SignalWifi2BarIcon from '@mui/icons-material/SignalWifi2Bar';\n// import SignalWifi3BarIcon from '@mui/icons-material/SignalWifi3Bar';\n// import SignalWifi4BarIcon from '@mui/icons-material/SignalWifi4Bar';\nimport SignalWifiOffIcon from '@mui/icons-material/SignalWifiOff';\nimport TimelapseVideoIcon from '@mui/icons-material/SwitchVideo';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport WifiIcon from '@mui/icons-material/Wifi';\nimport { Button, Container, IconButton, Paper, Typography } from '@mui/material';\n\nimport BatteryPercentageIcon from './BatteryPercentageIcon';\nimport SettingsPreview from './SettingsPreview';\n\nconst useStyles = makeStyles()({\n    pageWrapper: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '1rem',\n        marginBottom: '1rem',\n    },\n    topControls: {\n        width: '100%',\n    },\n    bottomControls: {\n        width: '100%',\n    },\n    bottomCenteredButtons: {\n        width: '100%',\n        alignSelf: 'flex-end',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        flexDirection: 'row',\n    },\n    alignLeftToRight: {\n        display: 'flex',\n    },\n    button: {\n        margin: '0.5rem',\n    },\n    recordButton: {\n        margin: '0.5rem',\n        '& svg': {\n            fontSize: '5rem',\n        },\n    },\n    floatLeft: {\n        flex: 1,\n    },\n    floatRight: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\n// TODO split this component\nconst MainModeView: React.FC = () => {\n    const { classes } = useStyles();\n    const settingCurrentCategory = useAppSelector(selectCurrentModeGroup);\n    const deviceName = useAppSelector(selectDeviceName);\n    const isWifiApEnabled = useAppSelector((state) => state.goproSettingsReducer.statuses[statusApState69.id]) === 1;\n    const batteryPercentage = useAppSelector(selectBatteryPercentage);\n    const isCharging = useAppSelector(selectIsBatteryCharging);\n    // TODO sd card icon, display it's status statusSdStatus33\n    // TODO remaining space KB in sd card statusRemainingSpace54\n    const storageRemainingTimeText = useAppSelector(selectStorageRemainingTimeText);\n\n    const isShutterActive = useAppSelector(selectIsShutterActive);\n    const currentRecordingTimeText = useAppSelector(selectCurrentRecordingTimeText);\n    const dispatch = useAppDispatch();\n    const handlePowerButtonClick = () => {\n        dispatch(sleepCommand());\n    };\n    const handleWiFiButtonClick = () => {\n        if (isWifiApEnabled) {\n            dispatch(apControlWiFiApOffCommand());\n        } else {\n            dispatch(apControlWiFiApOnCommand());\n        }\n    };\n    const handlePhotoModeButtonClick = () => {\n        dispatch(legacyPresetsLoadGroupPhotoCommand());\n    };\n    const handleVideoModeButtonClick = () => {\n        dispatch(legacyPresetsLoadGroupVideoCommand());\n    };\n    const handleTimelapseModeButtonClick = () => {\n        dispatch(legacyPresetsLoadGroupMultishotCommand());\n    };\n    const handleShutterButtonClick = () => {\n        if (isShutterActive) {\n            dispatch(setShutterOffCommand());\n        } else {\n            dispatch(setShutterOnCommand());\n        }\n    };\n\n    return (\n        <>\n            <Container maxWidth=\"sm\" sx={{ display: 'flex', flexGrow: 1 }}>\n                <Paper className={classes.pageWrapper}>\n                    <div className={classes.topControls}>\n                        <br />\n                        <Container sx={{ width: 'fit-content' }}>\n                            <Paper sx={{ padding: '0.4em' }} elevation={2}>\n                                <Typography variant=\"h4\">{deviceName}</Typography>\n                            </Paper>\n                            <IconButton onClick={handlePowerButtonClick}>\n                                <PowerSettingsNewIcon />\n                            </IconButton>\n                            <IconButton onClick={handleWiFiButtonClick}>{isWifiApEnabled ? <WifiIcon /> : <SignalWifiOffIcon />}</IconButton>\n                            <IconButton>\n                                <SdStorageIcon />\n                                <Typography variant=\"body1\">{storageRemainingTimeText}</Typography>\n                            </IconButton>\n                            <BatteryPercentageIcon batteryPercentage={batteryPercentage} isCharging={isCharging} />\n                            <Button onClick={() => dispatch(getSettingsCommand())}>settings dump</Button>\n                            <Button onClick={() => dispatch(getStatusesCommand())}>statuses dump</Button>\n                            <p>Mode: {settingCurrentCategory}</p>\n                        </Container>\n                    </div>\n                    <div className={classes.bottomControls}>\n                        <SettingsPreview />\n                        <div className={classes.bottomCenteredButtons}>\n                            <Button\n                                onClick={handleTimelapseModeButtonClick}\n                                className={classes.button}\n                                aria-label=\"Timelapse mode\"\n                                color=\"primary\"\n                                variant={settingCurrentCategory === SettingsModesGroups.timelapse ? 'text' : 'outlined'}\n                            >\n                                <TimelapseVideoIcon />\n                            </Button>\n\n                            <Button\n                                onClick={handleVideoModeButtonClick}\n                                className={classes.button}\n                                aria-label=\"Video mode\"\n                                color=\"primary\"\n                                variant={settingCurrentCategory === SettingsModesGroups.video ? 'text' : 'outlined'}\n                            >\n                                <VideocamIcon />\n                            </Button>\n                            <Button\n                                onClick={handlePhotoModeButtonClick}\n                                className={classes.button}\n                                aria-label=\"Photo mode\"\n                                color=\"primary\"\n                                variant={settingCurrentCategory === SettingsModesGroups.photo ? 'text' : 'outlined'}\n                            >\n                                <PhotoCameraIcon />\n                            </Button>\n                        </div>\n                        <div className={classes.alignLeftToRight}>\n                            <div className={classes.floatLeft} />\n                            <div className={classes.recordButton}>\n                                <IconButton onClick={handleShutterButtonClick} aria-label=\"Record button\" color=\"error\">\n                                    {isShutterActive ? <FiberManualRecordIcon /> : <RecordInactiveIcon />}\n                                </IconButton>\n                            </div>\n                            <div className={classes.floatRight}>{isShutterActive && <Typography variant=\"h6\">{currentRecordingTimeText}</Typography>}</div>\n                        </div>\n                    </div>\n                </Paper>\n            </Container>\n        </>\n    );\n};\n\nexport default MainModeView;\n","import { ConnectToGoProView } from 'components/contentPages/ConnectToGoProPage';\nimport { ErrorPage } from 'components/contentPages/ErrorPage';\nimport { SearchForGoProView } from 'components/contentPages/SearchForGoProPage';\nimport { Header } from 'components/Header';\nimport MainModeView from 'components/MainModeView';\nimport React from 'react';\nimport { makeStyles } from 'theme/makeStyles';\n\nimport { useAppSelector } from './store/hooks';\n\nconst useStyles = makeStyles()({\n    flexContent: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        maxHeight: '-webkit-fill-available',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nconst RenderContent: React.FC = () => {\n    const isDeviceSelected = useAppSelector((state) => state.goproBluetoothReducer.isDeviceSelected);\n    const isGattConnected = useAppSelector((state) => state.goproBluetoothReducer.isGattConnected);\n    if (window.location.protocol !== 'https:') return <ErrorPage errorTitle=\"Bluetooth requires https\" errorDescription=\"Web Bluetooth will only work on https pages\" />;\n    if (!('bluetooth' in navigator)) return <ErrorPage errorTitle=\"Bluetooth not supported\" errorDescription=\"Your browser does not support bluetooth. https://caniuse.com/web-bluetooth\" />;\n    if (!isDeviceSelected) return <SearchForGoProView />;\n    if (!isGattConnected) return <ConnectToGoProView />;\n    return <MainModeView />;\n};\n\nconst App: React.FC = () => {\n    const { classes } = useStyles();\n    return (\n        <div className={classes.flexContent}>\n            <Header />\n            <RenderContent />\n        </div>\n    );\n};\n\nexport default App;\n","import { ServiceWorkerContainer } from 'components/pwa/ServiceWorkerContainer';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { GlobalStyles } from 'tss-react';\n\nimport { ThemeProvider, useTheme } from '@mui/material';\n\nimport { store } from './store/store';\nimport App from './App';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const AppProvider: React.FC = () => {\n    const theme = useTheme();\n    return (\n        <Provider store={store}>\n            <GlobalStyles\n                styles={{\n                    body: {\n                        margin: 0,\n                        padding: 0,\n                    },\n                }}\n            />\n            <ThemeProvider theme={theme}>\n                <ServiceWorkerContainer />\n                <ToastContainer />\n                <App />\n            </ThemeProvider>\n        </Provider>\n    );\n};\n","/// <reference types=\"vite/client\" />\n/// <reference types=\"vite-plugin-pwa/client\" />\n\nimport { AppProvider } from 'AppProvider';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n"],"names":["makeStyles","withStyles","createMakeAndWithStyles","useTheme","useStyles","flexContent","display","flexDirection","ReloadToastContent","props","classes","handleReloadButton","updateServiceWorker","module","setModule","useState","then","updateCheckIntervalMS","ServiceWorkerContainer","pwaRegisterModule","useImportPwaRegisterModule","ServiceWorkerContainerSafe","offlineReady","needRefresh","useRegisterSW","immediate","onRegistered","registration","log","update","onRegisterError","error","autoClose","bluetoothDeviceState","lastQueuedPromiseArr","func","context","lastQueuedPromise","find","p","promise","Promise","resolve","push","booleanValue","id","label","statusInternalCameraPresent1","description","type","values","statusInternalBatteryLevel2","statusExternalBatteryPresent3","statusExternalBatteryLevel4","statusSystemHot6","statusSystemBusy8","statusQuickCaptureActive9","statusEncodingActive10","statusLcdLockActive11","statusVideoProgressCounter13","statusEnable17","statusState19","statusType20","statusPairTime21","statusState22","statusScanTimeMsec23","statusProvisionStatus24","statusRemoteControlVersion26","statusRemoteControlConnected27","statusPairing28","statusWlanSsid29","statusApSsid30","statusAppCount31","statusEnable32","statusSdStatus33","statusRemainingPhotos34","statusRemainingVideoTime35","statusNumGroupPhotos36","statusNumGroupVideos37","statusNumTotalPhotos38","statusNumTotalVideos39","statusDateTime40","statusOtaStatus41","statusDownloadCancelRequestPending42","statusLegacyCurrentPresetGroup43","statusLegacyCurrentPresetGroupChild44","statusCameraLocateActive45","statusMultiShotCountDown49","statusRemainingSpace54","statusSupported55","statusWifiBars56","statusCurrentTimeMsec57","statusNumHilights58","statusLastHilightTimeMsec59","statusNextPollMsec60","statusInContextualMenu63","statusRemainingTimelapseTime64","statusExposureSelectType65","statusExposureSelectX66","statusExposureSelectY67","statusGpsStatus68","statusApState69","statusInternalBatteryPercentage70","statusLegacyLastPhotoMode72","statusLegacyLastVideoMode71","statusLegacyLastTimelapseMode73","statusAccMicStatus74","statusDigitalZoom75","statusWirelessBand76","statusDigitalZoomActive77","statusMobileFriendlyVideo78","statusFirstTimeUse79","statusBand5ghzAvail81","statusSystemReady82","statusBattOkayForOta83","statusVideoLowTempAlert85","statusActualOrientation86","statusThermalMitigationMode87","statusZoomWhileEncoding88","statusCurrentMode89","statusLogsReady91","statusTimewarp1xActive92","statusActiveVideoPresets93","statusActivePhotoPresets94","statusActiveTimelapsePresets95","statusActivePresetsGroup96","statusActivePreset97","statusPresetModified98","statusRemainingLiveBursts99","statusNumTotalLiveBursts100","statusCaptureDelayActive101","statusMediaModMicStatus102","statusTimewarpSpeedRampActive103","statusLinuxCoreActive104","statusCameraLensType105","statusVideoHindsightCaptureActive106","statusScheduledPreset107","statusScheduledEnabled108","statusCreatingPreset109","statusMediaModStatus110","statusTurboTransfer113","allKnownStatuses","statuses","store","getState","goproSettingsReducer","isDeviceReady","unsubscribe","subscribe","commandData","characteristics","Error","commandCharacteristic","waitUntilDeviceReady","functionQueue","writeGoProPacketData","sendCommandAction","createAsyncThunk","sendCommand","_","dispatch","legacyPresetsLoadGroupVideoCommand","legacyPresetsLoadGroupPhotoCommand","legacyPresetsLoadGroupMultishotCommand","sleepCommand","getHardwareInfoCommand","setShutterOffCommand","setShutterOnCommand","apControlWiFiApOffCommand","apControlWiFiApOnCommand","openGoProGetVersionCommand","packetData","commandResponse","parseCommandResponse","responseCode","CommandResponseCode","success","invalidParameter","unknown","response","length","commandId","errorCode","parseCommandResponseCode","data","slice","CommandId","SetShutter","Sleep","APControl","GetHardwareInfo","PresetsLoadGroup","PresetsLoad","Analytics","OpenGoProGetVersion","goproBluetoothSlice","actions","getHardwareInfoResponse","parseGetHardwareInfoResponse","openGoProGetVersionResponse","majorVersion","minorVersion","parseOpenGoProGetVersionResponse","dataIndex","lengthOfModelNumber","modelNumber","Array","fill","map","lengthOfModelName","modelName","String","fromCharCode","join","lengthOfBoardType","boardType","lengthOfFirmwareVersion","firmwareVersion","lengthOfSerialNumber","serialNumber","lengthOfApSsid","apSsid","lengthOfApMacAddress","apMacAddress","lengthOfMajorVersion","reduce","acc","cur","lengthOfMinorVersion","initialState","settings","isFetching","goproSettingsSlice","createSlice","name","reducers","settingsReceived","state","action","payload","settingsRequested","settingsRequestFailed","statusesReceived","reducer","queryCharacteristic","writeValue","Uint8Array","queryResponse","parseQueryResponse","queryId","parseQueryResponseCode","statusesOrSettings","parseStatusesOrSettingsFromData","setting","readOneStatusOrSetting","value","settingId","dataLength","settingValue","QueryId","getSettingValue","getStatusValue","registerForSettingUpdates","registerForStatusUpdates","unregisterForSettingUpdates","unregisterForStatusUpdates","settingUpdate","statusUpdate","receivedSettingsReduceToKeyValue","sAcc","sCur","receivedStatusesReduceToKeyValue","status","valueLength","knownStatus","s","valueStr","v","_dispatch","_packetData","onPacket","packetDataAccumulator","messageLength","ev","characteristic","target","packet","readSinglePacket","header","isStart","catch","packetHeader","parsePacketHeader","from","buffer","headerSizeBytes","byte1","getUint8","continuationIndex","startType","byte2","byte3","subscribeToSettingsChangesCommand","settingsIds","subscribeToStatusChangesCommand","statusIds","getSettingsCommand","getStatusesCommand","requestDevice","device","navigator","bluetooth","filters","services","optionalServices","ongattserverdisconnected","undefined","gattServer","gattDisconnected","gattConnect","deviceName","gatt","connect","wifiApServicePromise","getPrimaryService","wifiApSsidCharacteristicPromise","x","getCharacteristic","wifiApPasswordCharacteristicPromise","wifiApPowerCharacteristicPromise","wifiApStateCharacteristicPromise","cqServicePromise","commandCharacteristicPromise","commandResponseCharacteristicPromise","settingsCharacteristicPromise","settingsResponseCharacteristicPromise","queryCharacteristicPromise","queryResponseCharacteristicPromise","wifiApSsidCharacteristic","wifiApPasswordCharacteristic","wifiApPowerCharacteristic","wifiApStateCharacteristic","commandResponseCharacteristic","settingsCharacteristic","settingsResponseCharacteristic","queryResponseCharacteristic","oncharacteristicvaluechanged","goproBlePacketDataReaderProvider","commandResponseReceiverProvider","startNotifications","queryResponseReceiverProvider","settingsResponseReceiverProvider","keys","chunkIndex","dataCopy","unshift","getPacketHeaderForData","chunk","splice","writeGoProPacketDataRaw","isRequestingDevice","isDeviceSelected","isGattConnected","isGattConnecting","goproBluetoothDeviceCommandsState","isCommandInAction","getHardwareInfo","openGoProVersion","extraReducers","builder","addCase","pending","fulfilled","rejected","message","goproBluetoothReducer","configureStore","devTools","useAppDispatch","useDispatch","useAppSelector","useSelector","ConnectToGoProView","currentError","my","ErrorPage","errorTitle","errorDescription","SearchForGoProView","prompt","setState","shouldShowPrompt","isInstalled","setIsInstalled","userAccepted","setUserAccepted","userDismissed","setUserDismissed","promptToInstall","outcome","reject","ready","e","addEventListener","removeEventListener","onInstall","InstallPwaButton","_userAccepted","_isInstalled","usePwaInstallPrompt","showSad","setShowSad","dismissedInstall","setDismissedInstall","timeoutHandle","window","setTimeout","clearTimeout","handleInstallClick","Header","flexGrow","selectDeviceName","createSelector","settingVideoResolution2","settingVideoFps3","settingVideoFov4","settingVideoInterval5","settingVideoInterval6","settingVideoLowLight8","settingVideoProtune10","settingVideoWhiteBalance11","settingVideoColor12","settingVideoIsoMax13","settingVideoSharpness14","settingVideoEvComp15","settingPhotoFov17","settingPhotoShutter19","settingPhotoProtune21","settingPhotoWhiteBalance22","settingPhotoColor23","settingPhotoIsoMax24","settingPhotoSharpness25","settingPhotoEvComp26","settingMultishotFov28","settingMultishotBurstRate29","settingMultishotInterval30","settingMultishotShutter31","settingMultishotInterval32","settingMultishotProtune34","settingMultishotWhiteBalance35","settingMultishotColor36","settingMultishotIsoMax37","settingMultishotSharpness38","settingMultishotEvComp39","settingGeneralTouchDisplayScreenSaver51","settingGeneralQuickCapture54","settingVideoShutter73","settingPhotoIsoMin75","settingMultishotIsoMin76","settingVideoStabilization78","settingVideoMicrophone80","settingVideoRawAudio81","settingGeneralRegionalGps83","settingGeneralRegionalLanguage84","settingGeneralVoiceControlLanguage85","settingGeneralVoiceControl86","settingGeneralBeeps87","settingGeneralTouchDisplayBrightness88","settingGeneralDefaultMode89","settingGeneralLeds91","settingsCurrentMode92","settingPhotoShutter97","settingPhotoRaw98","settingMultishotRaw99","settingVideoIsoMin102","settingGeneralWakeOnVoice104","settingGeneralVideoCompression106","settingVideoVideoTimer107","settingVideoResolutionFormat108","settingPhotoSuperPhoto109","settingVideoSpeed111","settingGeneralTouchDisplayLandscapeLock112","videoModeKnownSettings","loopingModeKnownSettings","timewarpModeKnownSettings","timelapseVideoModeKnownSettings","timelapsePhotoModeKnownSettings","nightlapseModeKnownSettings","photoNightModeKnownSettings","photoBurstModeKnownSettings","photoSingleModeKnownSettings","generalSettings","allKnownSettings","makeSettingSelector","settingMetadata","valueMetadata","valueMeta","settingLabel","valueLabel","possibleValues","selectSettingVideoResolution2","selectSettingVideoFps3","selectSettingVideoFov4","selectSettingInterval5","selectSettingVideoInterval6","selectSettingVideoLowLight8","selectSettingVideoProtune10","selectSettingVideoWhiteBalance11","selectSettingVideoColor12","selectSettingVideoIsoMax13","selectSettingVideoSharpness14","selectSettingVideoEvComp15","selectSettingPhotoFov17","selectSettingPhotoShutter19","selectSettingPhotoProtune21","selectSettingPhotoWhiteBalance22","selectSettingPhotoColor23","selectSettingPhotoIsoMax24","selectSettingPhotoSharpness25","selectSettingPhotoEvComp26","selectSettingMultishotFov28","selectSettingMultishotBurstRate29","selectSettingMultishotInterval30","selectSettingMultishotShutter31","selectSettingMultishotInterval32","selectSettingMultishotProtune34","selectSettingMultishotWhiteBalance35","selectSettingMultishotColor36","selectSettingMultishotIsoMax37","selectSettingMultishotSharpness38","selectSettingMultishotEvComp39","selectSettingGeneralTouchDisplayScreenSaver51","selectSettingGeneralQuickCapture54","selectSettingVideoShutter73","selectSettingPhotoIsoMin75","selectSettingMultishotIsoMin76","selectSettingVideoStabilization78","selectSettingVideoMicrophone80","selectSettingVideoRawAudio81","selectSettingGeneralRegionalGps83","selectSettingGeneralRegionalLanguage84","selectSettingGeneralVoiceControlLanguage85","selectSettingGeneralVoiceControl86","selectSettingGeneralBeeps87","selectSettingGeneralTouchDisplayBrightness88","selectSettingGeneralDefaultMode89","selectSettingGeneralLeds91","selectSettingsCurrentMode92","selectSettingPhotoShutter97","selectSettingPhotoRaw98","selectSettingMultishotRaw99","selectSettingVideoIsoMin102","selectSettingGeneralWakeOnVoice104","selectSettingGeneralVideoCompression106","selectSettingVideoVideoTimer107","selectSettingVideoResolutionFormat108","selectSettingPhotoSuperPhoto109","selectSettingVideoSpeed111","selectSettingGeneralTouchDisplayLandscapeLock112","selectVideoModeSettings","settingResolution2Value","settingFps3Value","settingFov4Value","settingLowLight8Value","settingStabilization78Value","settingProtune10Value","settingShutter73Value","settingEvComp15Value","settingWhiteBalance11Value","settingIsoMin102Value","settingIsoMax13Value","settingSharpness14Value","settingColor12Value","settingRawAudio81Value","settingMicrophone80Value","settingVideoTimer107Value","settingResolutionFormat108Value","filter","selectLoopingModeSettings","settingVideoResolution2Value","settingVideoFps3Value","settingVideoFov4Value","settingVideoInterval6Value","settingVideoLowLight8Value","settingVideoStabilization78Value","selectTimewarpModeSettings","settingVideoSpeed111Value","selectTimelapseVideoModeSettings","settingInterval5Value","selectTimelapsePhotoModeSettings","settingMultishotInterval30Value","settingMultishotFov28Value","settingMultishotEvComp39Value","settingMultishotWhiteBalance35Value","settingMultishotIsoMin76Value","settingMultishotIsoMax37Value","settingMultishotSharpness38Value","settingMultishotColor36Value","settingMultishotProtune34Value","selectNightlapseModeSettings","settingMultishotShutter31Value","settingMultishotInterval32Value","settingMultishotRaw99Value","selectPhotoNightModeSettings","settingPhotoFov17Value","settingPhotoShutter19Value","settingPhotoProtune21Value","settingPhotoWhiteBalance22Value","settingPhotoColor23Value","settingPhotoIsoMax24Value","settingPhotoSharpness25Value","settingPhotoEvComp26Value","settingPhotoIsoMin75Value","settingPhotoRaw98Value","selectPhotoBurstModeSettings","settingMultishotBurstRate29Value","selectPhotoSingleModeSettings","settingPhotoShutter97Value","settingPhotoSuperPhoto109Value","selectCurrentModeSettings","currentMode","videoModeSettings","loopingModeSettings","photoSingleModeSettings","photoBurstModeSettings","photoNightModeSettings","timewarpModeSettings","timelapseVideoModeSettings","timelapsePhotoModeSettings","nightlapseModeSettings","SettingsModes","video","videoLooping","photoSingle","photoNight","photoBurst","timelapseTimewarp","timelapseVideo","timelapsePhoto","nightlapse","settingGeneralTouchDisplayScreenSaver51Value","settingGeneralQuickCapture54Value","settingGeneralRegionalGps83Value","settingGeneralRegionalLanguage84Value","settingGeneralVoiceControlLanguage85Value","settingGeneralVoiceControl86Value","settingGeneralBeeps87Value","settingGeneralTouchDisplayBrightness88Value","settingGeneralDefaultMode89Value","settingGeneralLeds91Value","settingGeneralWakeOnVoice104Value","settingGeneralVideoCompression106Value","settingGeneralTouchDisplayLandscapeLock112Value","selectCurrentModeGroup","SettingsModesGroups","photo","timelapse","makeStatusSelector","statusMetadata","statusValue","selectStatusInternalBatteryLevel2","selectStatusEncodingActive10","selectStatusVideoProgressCounter13","selectStatusRemainingPhotos34","selectStatusRemainingVideoTime35","selectStatusInternalBatteryPercentage70","selectIsBatteryCharging","batteryLevelStatus","selectBatteryPercentage","batteryPercentage","statusAsNumber","selectStorageRemainingTimeText","videoRemainingTime","photosRemaining","currentModeGroup","videoRemainingSeconds","videoRemainingMinutes","Math","floor","videoRemainingHours","toLocaleString","minimumIntegerDigits","photos","selectCurrentRecordingTimeText","currentRecordingTime","currentRecordingTotalSeconds","currentRecordingMinutes","currentRecordingSeconds","selectIsShutterActive","encodingActive","isCharging","BatteryChargingFullIcon","BatteryFullIcon","BatteryCharging80Icon","Battery80Icon","BatteryCharging50Icon","Battery50Icon","BatteryCharging20Icon","Battery20Icon","BatteryPercentageIcon","icon","getIconByLevelBar","sendSettingCommand","i","setSettingValueCommand","settingLength","getByteLength","valueId","temp","SettingsPreview","isModalOpen","setIsModalOpen","handleCloseModal","handleOpenModal","previewElevation","setPreviewElevation","width","minWidth","textAlign","SettingsPreviewModal","isOpen","onClose","currentModeSettings","SingleSetting","currentSettingValue","handleChange","event","selectedSettingValue","parseInt","m","toString","possibleValue","pageWrapper","justifyContent","alignItems","marginTop","marginBottom","topControls","bottomControls","bottomCenteredButtons","alignSelf","alignLeftToRight","button","margin","recordButton","fontSize","floatLeft","flex","floatRight","MainModeView","settingCurrentCategory","isWifiApEnabled","storageRemainingTimeText","isShutterActive","currentRecordingTimeText","handlePowerButtonClick","handleWiFiButtonClick","handlePhotoModeButtonClick","handleVideoModeButtonClick","handleTimelapseModeButtonClick","handleShutterButtonClick","padding","PowerSettingsNewIcon","WifiIcon","SignalWifiOffIcon","SdStorageIcon","TimelapseVideoIcon","VideocamIcon","PhotoCameraIcon","FiberManualRecordIcon","RecordInactiveIcon","position","height","maxHeight","RenderContent","location","protocol","App","AppProvider","theme","GlobalStyles","body","ReactDOM","render","document","getElementById"],"mappings":"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"}